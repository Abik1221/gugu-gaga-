{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"bg-white rounded-xl shadow p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"mb-2\", className)} {...props} />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h4\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-emerald-700\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"text-gray-700\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"mt-4 flex flex-wrap items-center justify-between gap-3\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport { Card, CardHeader, CardTitle, CardContent, CardFooter };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,kCAAkC;QAC/C,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,QAAQ;QAAa,GAAG,KAAK;;;;;;;;AAE5D,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,iBAAiB;QAAa,GAAG,KAAK;;;;;;;;AAErE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,0DAA0D;QACvE,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,KAA0C;QAA1C,EAAE,YAAY,EAAE,EAA0B,GAA1C;IACvB,qBAAO,6LAAC;QAAI,WAAW,AAAC,qCAA8C,OAAV;;;;;;AAC9D;KAFgB;AAIT,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC,GAAxD;IAChC,qBACE,6LAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,6LAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,6LAAC;wBAAW,WAAU;kCACpB,cAAA,6LAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB;MAdgB","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,2KAAgB,MACnC,QAA+B;QAA9B,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC3B,qBACE,6LAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/owner/settings/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Link from \"next/link\";\n\nimport {\n  AuthAPI,\n  StaffAPI,\n  TenantAPI,\n  type AuthProfile,\n  type SessionInfo,\n  type TenantActivityRecord,\n} from \"@/utils/api\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/components/ui/toast\";\n\ntype EditableFields = Pick<AuthProfile, \"username\" | \"first_name\" | \"last_name\" | \"phone\">;\ntype ThemeOption = \"light\" | \"dark\" | \"system\";\n\ntype StaffMember = {\n  id: number;\n  email: string;\n  role?: string | null;\n  phone?: string | null;\n  is_active?: boolean | null;\n};\n\nconst editableKeys: Array<keyof EditableFields> = [\"username\", \"first_name\", \"last_name\", \"phone\"];\nconst THEME_STORAGE_KEY = \"dashboard_theme_preference\";\nconst PREF_STORAGE_KEY = \"dashboard_notification_prefs\";\n\nfunction toInputValue(value: string | null | undefined) {\n  return value ?? \"\";\n}\n\nfunction normalize(value: string | null | undefined) {\n  return (value ?? \"\").trim();\n}\n\nfunction sanitizePayloadValue(value: string) {\n  const trimmed = value.trim();\n  return trimmed === \"\" ? null : trimmed;\n}\n\nfunction ProfileField({ label, value }: { label: string; value: React.ReactNode }) {\n  return (\n    <div className=\"flex flex-col gap-1 rounded border border-gray-200 bg-white/80 p-3\">\n      <span className=\"text-xs uppercase tracking-wide text-gray-500\">{label}</span>\n      <span className=\"text-sm font-medium text-gray-900 break-words\">{value}</span>\n    </div>\n  );\n}\n\nexport default function OwnerSettingsPage() {\n  const { show } = useToast();\n  const [profile, setProfile] = useState<AuthProfile | null>(null);\n  const [form, setForm] = useState<Record<keyof EditableFields, string>>({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    phone: \"\",\n  });\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const [staff, setStaff] = useState<StaffMember[]>([]);\n  const [staffLoading, setStaffLoading] = useState(true);\n  const [staffError, setStaffError] = useState<string | null>(null);\n\n  const [sessions, setSessions] = useState<SessionInfo[]>([]);\n  const [sessionsLoading, setSessionsLoading] = useState(true);\n  const [sessionsError, setSessionsError] = useState<string | null>(null);\n  const [revokingSessionId, setRevokingSessionId] = useState<number | null>(null);\n\n  const [activity, setActivity] = useState<TenantActivityRecord[]>([]);\n  const [activityLoading, setActivityLoading] = useState(true);\n  const [activityError, setActivityError] = useState<string | null>(null);\n\n  const [theme, setTheme] = useState<ThemeOption>(\"system\");\n  const [themeLoading, setThemeLoading] = useState(true);\n  const [notifications, setNotifications] = useState({\n    productUpdates: true,\n    inventoryAlerts: true,\n    securityEmails: true,\n  });\n  const [passwordCurrent, setPasswordCurrent] = useState(\"\");\n  const [passwordNew, setPasswordNew] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [changingPassword, setChangingPassword] = useState(false);\n\n  useEffect(() => {\n    let active = true;\n    async function loadProfile() {\n      setLoading(true);\n      try {\n        const me = await AuthAPI.me();\n        if (!active) return;\n        setProfile(me);\n        setForm({\n          username: toInputValue(me.username),\n          first_name: toInputValue(me.first_name),\n          last_name: toInputValue(me.last_name),\n          phone: toInputValue(me.phone),\n        });\n        setError(null);\n      } catch (err: any) {\n        if (!active) return;\n        setError(err?.message || \"Unable to load profile\");\n      } finally {\n        if (active) setLoading(false);\n      }\n    }\n    loadProfile();\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!profile?.tenant_id) {\n      setStaff([]);\n      setStaffLoading(false);\n      setSessions([]);\n      setSessionsLoading(false);\n      setActivity([]);\n      setActivityLoading(false);\n      return;\n    }\n    let active = true;\n    setStaffLoading(true);\n    setStaffError(null);\n    StaffAPI.list(profile.tenant_id)\n      .then((rows) => {\n        if (!active) return;\n        setStaff(Array.isArray(rows) ? rows : []);\n      })\n      .catch((err: any) => {\n        if (!active) return;\n        setStaffError(err?.message || \"Unable to load staff\");\n      })\n      .finally(() => {\n        if (active) setStaffLoading(false);\n      });\n\n    setSessionsLoading(true);\n    setSessionsError(null);\n    AuthAPI.sessions()\n      .then((items) => {\n        if (!active) return;\n        setSessions(items);\n      })\n      .catch((err: any) => {\n        if (!active) return;\n        setSessionsError(err?.message || \"Unable to load sessions\");\n      })\n      .finally(() => {\n        if (active) setSessionsLoading(false);\n      });\n\n    setActivityLoading(true);\n    setActivityError(null);\n    TenantAPI.activity({ limit: 25 })\n      .then((records) => {\n        if (!active) return;\n        setActivity(records);\n      })\n      .catch((err: any) => {\n        if (!active) return;\n        setActivityError(err?.message || \"Unable to load activity log\");\n      })\n      .finally(() => {\n        if (active) setActivityLoading(false);\n      });\n\n    return () => {\n      active = false;\n    };\n  }, [profile?.tenant_id]);\n\n  useEffect(() => {\n    const storedTheme = typeof window !== \"undefined\" ? (localStorage.getItem(THEME_STORAGE_KEY) as ThemeOption | null) : null;\n    const initialTheme: ThemeOption = storedTheme || \"system\";\n    setTheme(initialTheme);\n    applyTheme(initialTheme);\n    setThemeLoading(false);\n\n    if (typeof window !== \"undefined\") {\n      const storedPrefs = localStorage.getItem(PREF_STORAGE_KEY);\n      if (storedPrefs) {\n        try {\n          const parsed = JSON.parse(storedPrefs) as typeof notifications;\n          setNotifications((prev) => ({ ...prev, ...parsed }));\n        } catch {\n          // ignore invalid JSON\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (themeLoading) return;\n    applyTheme(theme);\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(THEME_STORAGE_KEY, theme);\n    }\n  }, [theme, themeLoading]);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n    const media = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const listener = () => {\n      if (theme === \"system\") {\n        applyTheme(\"system\");\n      }\n    };\n    media.addEventListener(\"change\", listener);\n    return () => media.removeEventListener(\"change\", listener);\n  }, [theme]);\n\n  const isDirty = useMemo(() => {\n    if (!profile) return false;\n    return editableKeys.some((key) => normalize(form[key]) !== normalize(profile[key] as string | null | undefined));\n  }, [form, profile]);\n\n  const summaryFields = useMemo(() => {\n    if (!profile) return [];\n    return [\n      { label: \"Email\", value: profile.email },\n      { label: \"Tenant\", value: profile.tenant_id ?? \"—\" },\n      { label: \"Primary role\", value: profile.role ?? \"—\" },\n      { label: \"KYC status\", value: profile.kyc_status ?? \"—\" },\n      { label: \"Subscription\", value: profile.subscription_status ?? \"—\" },\n      { label: \"Next due date\", value: profile.subscription_next_due_date ?? \"—\" },\n      { label: \"Latest payment\", value: profile.latest_payment_status ?? \"—\" },\n    ];\n  }, [profile]);\n\n  const staffStats = useMemo(() => {\n    const activeCount = staff.filter((member) => member.is_active !== false).length;\n    const inactiveCount = staff.length - activeCount;\n    return {\n      total: staff.length,\n      active: activeCount,\n      inactive: inactiveCount,\n    };\n  }, [staff]);\n\n  const topStaff = useMemo(() => staff.slice(0, 5), [staff]);\n\n  const handleChange = (key: keyof EditableFields) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setForm((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const resetForm = () => {\n    if (!profile) return;\n    setForm({\n      username: toInputValue(profile.username),\n      first_name: toInputValue(profile.first_name),\n      last_name: toInputValue(profile.last_name),\n      phone: toInputValue(profile.phone),\n    });\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!profile) return;\n\n    const payload: Partial<Record<keyof EditableFields, string | null>> = {};\n    editableKeys.forEach((key) => {\n      const next = normalize(form[key]);\n      const current = normalize(profile[key] as string | null | undefined);\n      if (next !== current) {\n        payload[key] = sanitizePayloadValue(form[key]);\n      }\n    });\n\n    if (Object.keys(payload).length === 0) {\n      show({ title: \"No changes to save\", description: \"Update the fields before saving.\" });\n      return;\n    }\n\n    setSaving(true);\n    try {\n      const updated = await AuthAPI.updateProfile(payload);\n      setProfile(updated);\n      setForm({\n        username: toInputValue(updated.username),\n        first_name: toInputValue(updated.first_name),\n        last_name: toInputValue(updated.last_name),\n        phone: toInputValue(updated.phone),\n      });\n      setError(null);\n      show({ variant: \"success\", title: \"Profile updated\", description: \"Your profile details were saved.\" });\n    } catch (err: any) {\n      show({ variant: \"destructive\", title: \"Update failed\", description: err?.message || \"Unable to update profile\" });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleThemeChange = (next: ThemeOption) => {\n    setTheme(next);\n    show({ variant: \"success\", title: \"Appearance updated\", description: `Theme set to ${next}.` });\n  };\n\n  const handleNotificationToggle = (key: keyof typeof notifications) => {\n    setNotifications((prev) => {\n      const updated = { ...prev, [key]: !prev[key] };\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(PREF_STORAGE_KEY, JSON.stringify(updated));\n      }\n      return updated;\n    });\n  };\n\n  const refreshSessions = async () => {\n    if (!profile?.tenant_id) return;\n    setSessionsLoading(true);\n    setSessionsError(null);\n    try {\n      const items = await AuthAPI.sessions();\n      setSessions(items);\n    } catch (err: any) {\n      setSessionsError(err?.message || \"Unable to refresh sessions\");\n    } finally {\n      setSessionsLoading(false);\n    }\n  };\n\n  const handleRevokeSession = async (sessionId: number) => {\n    setRevokingSessionId(sessionId);\n    try {\n      await AuthAPI.revokeSession(sessionId);\n      await refreshSessions();\n      show({\n        variant: \"success\",\n        title: \"Session revoked\",\n        description: \"The device was disconnected successfully.\",\n      });\n    } catch (err: any) {\n      show({ variant: \"destructive\", title: \"Failed to revoke\", description: err?.message || \"Unable to revoke session\" });\n    } finally {\n      setRevokingSessionId(null);\n    }\n  };\n\n  const refreshActivity = async () => {\n    if (!profile?.tenant_id) return;\n    setActivityLoading(true);\n    setActivityError(null);\n    try {\n      const records = await TenantAPI.activity({ limit: 25 });\n      setActivity(records);\n    } catch (err: any) {\n      setActivityError(err?.message || \"Unable to load activity log\");\n    } finally {\n      setActivityLoading(false);\n    }\n  };\n\n  const handlePasswordChange = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!profile) return;\n    if (!passwordCurrent || !passwordNew || !passwordConfirm) {\n      setPasswordError(\"Enter current password, new password, and confirmation.\");\n      return;\n    }\n    if (passwordNew !== passwordConfirm) {\n      setPasswordError(\"New password and confirmation do not match.\");\n      return;\n    }\n    setPasswordError(null);\n    setChangingPassword(true);\n    try {\n      await AuthAPI.changePassword({ current_password: passwordCurrent, new_password: passwordNew });\n      setPasswordCurrent(\"\");\n      setPasswordNew(\"\");\n      setPasswordConfirm(\"\");\n      show({ variant: \"success\", title: \"Password updated\", description: \"Other devices have been signed out.\" });\n      await refreshSessions();\n    } catch (err: any) {\n      setPasswordError(err?.message || \"Unable to change password\");\n    } finally {\n      setChangingPassword(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold\">Owner settings</h1>\n        <p className=\"text-gray-600\">Control profile details, monitor your team, and keep subscription data in one place.</p>\n      </div>\n\n      {loading ? (\n        <Card className=\"border border-emerald-100 shadow-sm\">\n          <CardHeader>\n            <CardTitle>Loading profile…</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-3 md:grid-cols-2\">\n              {Array.from({ length: 4 }).map((_, idx) => (\n                <Skeleton key={`form-${idx}`} className=\"h-16 w-full\" />\n              ))}\n            </div>\n            <div className=\"grid gap-3 md:grid-cols-2\">\n              {Array.from({ length: 4 }).map((_, idx) => (\n                <Skeleton key={`summary-${idx}`} className=\"h-16 w-full\" />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      ) : error ? (\n        <Card className=\"border border-red-200 bg-red-50 shadow-sm\">\n          <CardHeader>\n            <CardTitle className=\"text-red-700\">Unable to load profile</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm text-red-700\">{error}</div>\n          </CardContent>\n        </Card>\n      ) : !profile ? (\n        <Card className=\"border border-gray-200 shadow-sm\">\n          <CardHeader>\n            <CardTitle>No profile data</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm text-gray-500\">We could not retrieve your owner profile. Please refresh or contact support.</div>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid gap-6 xl:grid-cols-2\">\n          <Card className=\"border border-emerald-100 shadow-sm\">\n            <CardHeader>\n              <CardTitle>Edit owner profile</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <p className=\"text-xs text-gray-500\">\n                  Update how your name and contact information appear across every pharmacy tool. Leave a field blank to clear it.\n                </p>\n                <div className=\"grid gap-4 md:grid-cols-2\">\n                  <div className=\"space-y-1\">\n                    <label className=\"text-xs font-medium text-gray-600\">Username</label>\n                    <Input value={form.username} onChange={handleChange(\"username\")} placeholder=\"Preferred username\" maxLength={64} />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"text-xs font-medium text-gray-600\">First name</label>\n                    <Input value={form.first_name} onChange={handleChange(\"first_name\")} placeholder=\"e.g. Alex\" maxLength={120} />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"text-xs font-medium text-gray-600\">Last name</label>\n                    <Input value={form.last_name} onChange={handleChange(\"last_name\")} placeholder=\"e.g. Bekele\" maxLength={120} />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"text-xs font-medium text-gray-600\">Phone</label>\n                    <Input value={form.phone} onChange={handleChange(\"phone\")} placeholder=\"e.g. +2519…\" maxLength={32} />\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap items-center justify-end gap-2\">\n                  <Button type=\"button\" variant=\"outline\" onClick={resetForm} disabled={!isDirty || saving}>\n                    Reset\n                  </Button>\n                  <Button type=\"submit\" disabled={!isDirty || saving}>\n                    {saving ? \"Saving...\" : \"Save changes\"}\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border border-gray-200 shadow-sm\">\n            <CardHeader>\n              <CardTitle>Tenant & subscription overview</CardTitle>\n            </CardHeader>\n            <CardContent className=\"grid gap-3\">\n              {summaryFields.map((item) => (\n                <ProfileField key={item.label} label={item.label} value={item.value} />\n              ))}\n              <Link\n                href=\"/dashboard/owner/payment\"\n                className=\"inline-flex items-center justify-center rounded border border-emerald-200 px-3 py-2 text-sm font-medium text-emerald-700 hover:bg-emerald-50\"\n              >\n                Review subscription & payments\n              </Link>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      <Card className=\"border border-gray-200 shadow-sm\">\n        <CardHeader>\n          <CardTitle>Team insights</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {staffLoading ? (\n            <div className=\"grid gap-3 md:grid-cols-3\">\n              {Array.from({ length: 3 }).map((_, idx) => (\n                <Skeleton key={`staff-${idx}`} className=\"h-20 w-full\" />\n              ))}\n            </div>\n          ) : staffError ? (\n            <div className=\"rounded border border-red-200 bg-red-50 p-3 text-sm text-red-700\">{staffError}</div>\n          ) : staff.length === 0 ? (\n            <div className=\"rounded border border-dashed border-gray-300 bg-white p-4 text-sm text-gray-500\">\n              No staff members found for this tenant yet. Invite your first cashier or manager to get started.\n            </div>\n          ) : (\n            <>\n              <div className=\"grid gap-3 md:grid-cols-3\">\n                <ProfileField label=\"Total staff\" value={staffStats.total} />\n                <ProfileField label=\"Active\" value={staffStats.active} />\n                <ProfileField label=\"Inactive\" value={staffStats.inactive} />\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"text-xs font-semibold uppercase text-gray-500\">Recent members</div>\n                <div className=\"space-y-2\">\n                  {topStaff.map((member) => (\n                    <div\n                      key={member.id}\n                      className=\"flex flex-col gap-1 rounded border border-gray-200 bg-white px-3 py-2 text-sm md:flex-row md:items-center md:justify-between\"\n                    >\n                      <div>\n                        <div className=\"font-medium text-gray-900\">{member.email}</div>\n                        <div className=\"text-xs text-gray-500 capitalize\">{member.role || \"staff\"}</div>\n                      </div>\n                      <span\n                        className={`inline-flex h-6 items-center justify-center rounded-full px-3 text-xs font-medium ${\n                          member.is_active === false ? \"bg-red-50 text-red-700\" : \"bg-emerald-50 text-emerald-700\"\n                        }`}\n                      >\n                        {member.is_active === false ? \"Suspended\" : \"Active\"}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </>\n          )}\n          <div className=\"flex flex-wrap gap-2\">\n            <Link\n              href=\"/dashboard/owner/staff\"\n              className=\"inline-flex items-center justify-center rounded border border-gray-200 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            >\n              Manage staff access\n            </Link>\n            <Link\n              href=\"/dashboard/owner/staff/new\"\n              className=\"inline-flex items-center justify-center rounded border border-emerald-200 px-3 py-2 text-sm font-medium text-emerald-700 hover:bg-emerald-50\"\n            >\n              Invite new member\n            </Link>\n            <Link\n              href=\"/dashboard/inventory\"\n              className=\"inline-flex items-center justify-center rounded border border-gray-200 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            >\n              Review inventory settings\n            </Link>\n          </div>\n        </CardContent>\n      </Card>\n\n      <div className=\"grid gap-6 xl:grid-cols-2\">\n        <Card className=\"border border-gray-200 shadow-sm\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle>Appearance</CardTitle>\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => handleThemeChange(\"system\")}>Reset</Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"text-xs text-gray-500\">Choose how the dashboard looks across the app.</p>\n            <div className=\"grid gap-3 sm:grid-cols-3\">\n              {[\n                { value: \"light\", label: \"Light\" },\n                { value: \"dark\", label: \"Dark\" },\n                { value: \"system\", label: \"System\" },\n              ].map((option) => {\n                const active = theme === option.value;\n                return (\n                  <button\n                    key={option.value}\n                    type=\"button\"\n                    onClick={() => handleThemeChange(option.value as ThemeOption)}\n                    className={`rounded border px-3 py-2 text-sm font-medium transition ${\n                      active ? \"border-emerald-400 bg-emerald-50 text-emerald-700\" : \"border-gray-200 hover:bg-gray-50\"\n                    }`}\n                  >\n                    {option.label}\n                  </button>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border border-gray-200 shadow-sm\">\n          <CardHeader>\n            <CardTitle>Notifications</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3 text-sm\">\n            <p className=\"text-xs text-gray-500\">These preferences are stored in your browser for now. Backend delivery will be wired soon.</p>\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\n              <span>Product updates</span>\n              <input type=\"checkbox\" checked={notifications.productUpdates} onChange={() => handleNotificationToggle(\"productUpdates\")} />\n            </label>\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\n              <span>Inventory alerts</span>\n              <input type=\"checkbox\" checked={notifications.inventoryAlerts} onChange={() => handleNotificationToggle(\"inventoryAlerts\")} />\n            </label>\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\n              <span>Security emails</span>\n              <input type=\"checkbox\" checked={notifications.securityEmails} onChange={() => handleNotificationToggle(\"securityEmails\")} />\n            </label>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-6 xl:grid-cols-2\">\n        <Card className=\"border border-gray-200 shadow-sm\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle>Account security</CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <Button variant=\"outline\" size=\"sm\" onClick={refreshSessions} disabled={sessionsLoading}>\n                  Refresh sessions\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-4 text-sm\">\n            <form onSubmit={handlePasswordChange} className=\"space-y-2\">\n              <p className=\"text-xs text-gray-500\">\n                Change your password. All other active sessions will be signed out immediately.\n              </p>\n              <div className=\"grid gap-2 sm:grid-cols-3\">\n                <Input\n                  type=\"password\"\n                  placeholder=\"Current password\"\n                  value={passwordCurrent}\n                  onChange={(e) => setPasswordCurrent(e.target.value)}\n                  required\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"New password\"\n                  value={passwordNew}\n                  onChange={(e) => setPasswordNew(e.target.value)}\n                  required\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"Confirm new password\"\n                  value={passwordConfirm}\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\n                  required\n                />\n              </div>\n              {passwordError ? <div className=\"text-xs text-red-600\">{passwordError}</div> : null}\n              <div className=\"flex justify-end\">\n                <Button type=\"submit\" disabled={changingPassword}>\n                  {changingPassword ? \"Updating…\" : \"Change password\"}\n                </Button>\n              </div>\n            </form>\n            {sessionsLoading ? (\n              <div className=\"space-y-2\">\n                {Array.from({ length: 3 }).map((_, idx) => (\n                  <Skeleton key={`session-${idx}`} className=\"h-16 w-full\" />\n                ))}\n              </div>\n            ) : sessionsError ? (\n              <div className=\"rounded border border-red-200 bg-red-50 p-3 text-sm text-red-700\">{sessionsError}</div>\n            ) : sessions.length === 0 ? (\n              <div className=\"rounded border border-dashed border-gray-300 bg-white p-4 text-sm text-gray-500\">\n                No active sessions found. Devices will appear here after logging in.\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {sessions.map((session) => (\n                  <div\n                    key={session.id}\n                    className={`rounded border px-3 py-3 text-sm ${session.is_current ? \"border-emerald-300 bg-emerald-50\" : \"border-gray-200 bg-white\"}`}\n                  >\n                    <div className=\"flex items-start justify-between gap-3\">\n                      <div>\n                        <div className=\"font-medium text-gray-900\">\n                          {session.user_agent || \"Unknown device\"}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {session.ip_address ? `IP ${session.ip_address}` : \"IP unknown\"}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {session.is_current && <span className=\"rounded-full bg-emerald-100 px-2 py-0.5 text-xs text-emerald-700\">Current</span>}\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          disabled={session.is_current || session.is_revoked || revokingSessionId === session.id}\n                          onClick={() => handleRevokeSession(session.id)}\n                        >\n                          {session.is_revoked ? \"Revoked\" : revokingSessionId === session.id ? \"Revoking…\" : \"Revoke\"}\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"mt-2 grid gap-1 text-xs text-gray-500 sm:grid-cols-3\">\n                      <span>Created: {new Date(session.created_at).toLocaleString()}</span>\n                      <span>Last seen: {new Date(session.last_seen_at).toLocaleString()}</span>\n                      <span>Expires: {new Date(session.expires_at).toLocaleString()}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"border border-gray-200 shadow-sm\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle>Activity log</CardTitle>\n              <Button variant=\"outline\" size=\"sm\" onClick={refreshActivity} disabled={activityLoading}>\n                Refresh\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-3 text-sm\">\n            <p className=\"text-xs text-gray-500\">\n              Recent sessions, staff updates, and other tenant-level actions are listed here. Use this to monitor how the system is used.\n            </p>\n            {activityLoading ? (\n              <div className=\"space-y-2\">\n                {Array.from({ length: 5 }).map((_, idx) => (\n                  <Skeleton key={`activity-${idx}`} className=\"h-14 w-full\" />\n                ))}\n              </div>\n            ) : activityError ? (\n              <div className=\"rounded border border-red-200 bg-red-50 p-3 text-sm text-red-700\">{activityError}</div>\n            ) : activity.length === 0 ? (\n              <div className=\"rounded border border-dashed border-gray-300 bg-white p-4 text-sm text-gray-500\">\n                No activity recorded yet. Actions such as staff changes or logins will appear here.\n              </div>\n            ) : (\n              <ul className=\"space-y-3\">\n                {activity.map((item) => (\n                  <li key={item.id} className=\"rounded border border-gray-200 bg-white p-3\">\n                    <div className=\"flex flex-wrap items-center justify-between gap-2\">\n                      <span className=\"text-xs uppercase tracking-wide text-emerald-700\">{item.action}</span>\n                      <span className=\"text-xs text-gray-500\">{new Date(item.created_at).toLocaleString()}</span>\n                    </div>\n                    <div className=\"mt-1 font-medium text-gray-900\">{item.message}</div>\n                    <div className=\"mt-1 text-xs text-gray-500 space-y-1\">\n                      {item.target_type && (\n                        <div>\n                          Target: {item.target_type}\n                          {item.target_id ? ` • ${item.target_id}` : \"\"}\n                        </div>\n                      )}\n                      {item.actor_user_id ? <div>Actor ID: {item.actor_user_id}</div> : null}\n                      {item.metadata ? <pre className=\"whitespace-pre-wrap rounded bg-gray-50 p-2 text-[11px] text-gray-600\">{JSON.stringify(item.metadata, null, 2)}</pre> : null}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nfunction applyTheme(theme: ThemeOption) {\n  if (typeof document === \"undefined\") return;\n  const root = document.documentElement;\n  const prefersDark = window.matchMedia?.(\"(prefers-color-scheme: dark)\").matches ?? false;\n  const shouldUseDark = theme === \"dark\" || (theme === \"system\" && prefersDark);\n  root.classList.toggle(\"dark\", shouldUseDark);\n  root.dataset.theme = shouldUseDark ? \"dark\" : \"light\";\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}