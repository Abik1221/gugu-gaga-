{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/utils/api.ts"],"sourcesContent":["export const API_BASE =\r\n  process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\r\nexport const TENANT_HEADER =\r\n  process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\nfunction buildHeaders(\r\n  initHeaders?: HeadersInit,\r\n  tenantId?: string\r\n): HeadersInit {\r\n  const headers: Record<string, string> = {\r\n    ...(initHeaders as Record<string, string>),\r\n  };\r\n  if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n  return headers;\r\n}\r\n\r\nexport async function postForm<T = any>(\r\n  path: string,\r\n  data: Record<string, string>,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const body = new URLSearchParams(data);\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method: \"POST\",\r\n    headers: buildHeaders(\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      tenantId\r\n    ),\r\n    body,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    let parsed: any = null;\r\n    try {\r\n      parsed = await res.json();\r\n    } catch {\r\n      parsed = await res.text().catch(() => null);\r\n    }\r\n\r\n    let msg = \"\";\r\n    if (!parsed) msg = `Request failed with ${res.status}`;\r\n    else if (typeof parsed === \"string\") msg = parsed;\r\n    else if (Array.isArray(parsed)) msg = parsed.join(\", \");\r\n    else if (parsed?.detail) msg = parsed.detail;\r\n    else if (parsed?.message) msg = parsed.message;\r\n    else if (parsed?.error) msg = parsed.error;\r\n    else if (parsed?.errors) {\r\n      msg = Object.keys(parsed.errors)\r\n        .map(\r\n          (k) =>\r\n            `${k}: ${\r\n              Array.isArray(parsed.errors[k])\r\n                ? parsed.errors[k].join(\", \")\r\n                : parsed.errors[k]\r\n            }`\r\n        )\r\n        .join(\" | \");\r\n    } else msg = JSON.stringify(parsed);\r\n\r\n    const err: any = new Error(msg || `Request failed with ${res.status}`);\r\n    err.status = res.status;\r\n    err.body = parsed;\r\n    console.error(\"[postForm] failed\", { path, status: res.status, parsed });\r\n    throw err;\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postJSON<T = any>(\r\n  path: string,\r\n  body: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      const text = await res.text().catch(() => \"\");\r\n      throw new Error(text || `Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function putAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method: \"PUT\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(bodyData),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      const text = await res.text().catch(() => \"\");\r\n      throw new Error(text || `Request failed with ${res.status}`);\r\n    }\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postMultipart<T = any>(\r\n  path: string,\r\n  formData: FormData,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method: \"POST\",\r\n    headers: buildHeaders(undefined, tenantId),\r\n    body: formData,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      throw new Error(`Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport function getAccessToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"access_token\");\r\n}\r\n\r\nfunction getRefreshToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"refresh_token\");\r\n}\r\n\r\nasync function refreshTokens(): Promise<boolean> {\r\n  const rt = getRefreshToken();\r\n  if (!rt) return false;\r\n  const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n    rt\r\n  )}`;\r\n  const res = await fetch(url, { method: \"POST\" });\r\n  if (!res.ok) return false;\r\n  try {\r\n    const data = (await res.json()) as {\r\n      access_token: string;\r\n      refresh_token: string;\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    }\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function authFetch(\r\n  path: string,\r\n  init?: RequestInit,\r\n  retry = true,\r\n  tenantId?: string\r\n): Promise<Response> {\r\n  const token = getAccessToken();\r\n  const headers: HeadersInit = buildHeaders(\r\n    {\r\n      ...(init?.headers || {}),\r\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    },\r\n    tenantId\r\n  );\r\n  let res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\r\n\r\n  if (res.status === 401 && retry) {\r\n    const ok = await refreshTokens();\r\n    if (ok) {\r\n      const newToken = getAccessToken();\r\n      const retryHeaders: HeadersInit = buildHeaders(\r\n        {\r\n          ...(init?.headers || {}),\r\n          ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n        },\r\n        tenantId\r\n      );\r\n      res = await fetch(`${API_BASE}${path}`, {\r\n        ...(init || {}),\r\n        headers: retryHeaders,\r\n      });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport async function getAuthJSON<T = any>(\r\n  path: string,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(path, undefined, true, tenantId);\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\n// ----------------- AuthAPI -----------------\r\nexport const AuthAPI = {\r\n  registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\r\n  registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\r\n\r\n  registerVerify: async (email: string, code: string) => {\r\n    try {\r\n      return await postForm(\"/auth/register/verify\", { email, code });\r\n    } catch (err: any) {\r\n      if (err?.status === 422) {\r\n        console.warn(\"[AuthAPI.registerVerify] 422, retrying with JSON\", {\r\n          body: err.body,\r\n        });\r\n        try {\r\n          return await postJSON(\"/auth/register/verify\", { email, code });\r\n        } catch (err2: any) {\r\n          const e: any = new Error(\r\n            err2?.message || err?.message || \"Verification failed\"\r\n          );\r\n          e.original = err;\r\n          e.retry = err2;\r\n          throw e;\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  verifyRegistration: (email: string, code: string) =>\r\n    postForm(\"/auth/register/verify\", { email, code }),\r\n  login: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\"/auth/login\", { username: email, password }, tenantId),\r\n  loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\r\n      \"/auth/login/request-code\",\r\n      { username: email, password },\r\n      tenantId\r\n    ),\r\n  loginVerify: (email: string, code: string, tenantId?: string) =>\r\n    postJSON(\"/auth/login/verify\", { email, code }, tenantId),\r\n  me: () => getAuthJSON(\"/auth/me\"),\r\n};\r\n\r\n// ----------------- AffiliateAPI -----------------\r\nexport const AffiliateAPI = {\r\n  getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\r\n  createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\r\n  deactivate: (token: string) =>\r\n    postAuthJSON(\r\n      `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n      {}\r\n    ),\r\n  rotate: (token: string) =>\r\n    postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n  dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\r\n  payouts: (status?: string) =>\r\n    getAuthJSON(\r\n      `/affiliate/payouts${\r\n        status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n      }`\r\n    ),\r\n  requestPayout: (month?: string, percent = 5) =>\r\n    postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\r\n  updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\r\n};\r\n\r\n// ----------------- AdminAPI -----------------\r\nexport const AdminAPI = {\r\n  pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  approvePharmacy: (tenantId: string, applicationId: number, body?: any) =>\r\n    postAuthJSON(\r\n      `/admin/pharmacies/${applicationId}/approve`,\r\n      body || {},\r\n      tenantId\r\n    ),\r\n  rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n    postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n  verifyPayment: (tenantId: string, code?: string | null) =>\r\n    postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\r\n  rejectPayment: (tenantId: string, code?: string | null) =>\r\n    postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\r\n  analyticsOverview: (days = 30) =>\r\n    getAuthJSON(`/admin/analytics/overview?days=${days}`),\r\n  approveAffiliate: (userId: number) =>\r\n    postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\r\n  rejectAffiliate: (userId: number) =>\r\n    postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\r\n};\r\n\r\n// ----------------- StaffAPI -----------------\r\nexport const StaffAPI = {\r\n  createCashier: (tenantId: string, body: any) =>\r\n    postAuthJSON(\"/staff\", body, tenantId),\r\n  list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\r\n  update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n    authFetch(\r\n      `/staff/${userId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      },\r\n      true,\r\n      tenantId\r\n    ).then(async (res) => {\r\n      if (!res.ok) throw new Error(await res.text());\r\n      return res.json();\r\n    }),\r\n  remove: (tenantId: string, userId: number) =>\r\n    authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n      async (res) => {\r\n        if (!res.ok) throw new Error(await res.text());\r\n        return res.json();\r\n      }\r\n    ),\r\n};\r\n\r\n// ----------------- BillingAPI -----------------\r\nexport const BillingAPI = {\r\n  submitPaymentCode: (tenantId: string, code: string) =>\r\n    postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\r\n};\r\n\r\n// ----------------- UploadAPI -----------------\r\nexport const UploadAPI = {\r\n  uploadKyc: async (file: File) => {\r\n    const fd = new FormData();\r\n    fd.append(\"file\", file);\r\n    return postMultipart(\"/uploads/kyc\", fd);\r\n  },\r\n};\r\n\r\n// ----------------- KYCAPI -----------------\r\nexport const KYCAPI = {\r\n  status: (tenantId: string) => getAuthJSON(\"/owner/kyc/status\", tenantId),\r\n  update: (tenantId: string, body: any) =>\r\n    putAuthJSON(\"/owner/kyc/status\", body, tenantId),\r\n};\r\n\r\n// ----------------- PharmaciesAPI -----------------\r\nexport const PharmaciesAPI = {\r\n  list: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/pharmacies?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\r\n  update: (id: number, body: { name?: string; address?: string }) =>\r\n    authFetch(`/pharmacies/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    }).then(async (res) => {\r\n      if (!res.ok) throw new Error(await res.text());\r\n      return res.json();\r\n    }),\r\n};\r\n\r\n// ----------------- ChatAPI -----------------\r\nexport const ChatAPI = {\r\n  listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\r\n  createThread: (tenantId: string, title: string) =>\r\n    postAuthJSON(`/chat/threads`, { title }, tenantId),\r\n  listMessages: (tenantId: string, threadId: number) =>\r\n    getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\r\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n    postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n  usage: (tenantId: string, days = 30) =>\r\n    getAuthJSON(`/chat/usage?days=${days}`, tenantId),\r\n};\r\n\r\n// Other API objects (AffiliateAPI, AdminAPI, etc.) remain unchanged\r\n\r\n// export const API_BASE =\r\n//   process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\r\n// export const TENANT_HEADER =\r\n//   process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\n// function buildHeaders(\r\n//   initHeaders?: HeadersInit,\r\n//   tenantId?: string\r\n// ): HeadersInit {\r\n//   const headers: Record<string, string> = {\r\n//     ...(initHeaders as Record<string, string>),\r\n//   };\r\n//   if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n//   return headers;\r\n// }\r\n\r\n// export async function putAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postForm<T = any>(\r\n//   path: string,\r\n//   data: Record<string, string>,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const body = new URLSearchParams(data);\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(\r\n//       {\r\n//         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n//       },\r\n//       tenantId\r\n//     ),\r\n//     body,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postJSON<T = any>(\r\n//   path: string,\r\n//   body: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n//     body: JSON.stringify(body),\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postMultipart<T = any>(\r\n//   path: string,\r\n//   formData: FormData,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(undefined, tenantId),\r\n//     body: formData,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       let message = `Request failed with ${res.status}`;\r\n//       throw new Error(message);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export function getAccessToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"access_token\");\r\n// }\r\n\r\n// function getRefreshToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"refresh_token\");\r\n// }\r\n\r\n// async function refreshTokens(): Promise<boolean> {\r\n//   const rt = getRefreshToken();\r\n//   if (!rt) return false;\r\n//   const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n//     rt\r\n//   )}`;\r\n//   const res = await fetch(url, { method: \"POST\" });\r\n//   if (!res.ok) return false;\r\n//   try {\r\n//     const data = (await res.json()) as {\r\n//       access_token: string;\r\n//       refresh_token: string;\r\n//       token_type: string;\r\n//       expires_in: number;\r\n//     };\r\n//     if (typeof window !== \"undefined\") {\r\n//       localStorage.setItem(\"access_token\", data.access_token);\r\n//       localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n//     }\r\n//     return true;\r\n//   } catch {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// async function authFetch(\r\n//   path: string,\r\n//   init?: RequestInit,\r\n//   retry = true,\r\n//   tenantId?: string\r\n// ): Promise<Response> {\r\n//   const token = getAccessToken();\r\n//   const headers: HeadersInit = buildHeaders(\r\n//     {\r\n//       ...(init?.headers || {}),\r\n//       ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n//     },\r\n//     tenantId\r\n//   );\r\n//   const res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\r\n//   if (res.status === 401 && retry) {\r\n//     const ok = await refreshTokens();\r\n//     if (ok) {\r\n//       const newToken = getAccessToken();\r\n//       const retryHeaders: HeadersInit = buildHeaders(\r\n//         {\r\n//           ...(init?.headers || {}),\r\n//           ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n//         },\r\n//         tenantId\r\n//       );\r\n//       return fetch(`${API_BASE}${path}`, {\r\n//         ...(init || {}),\r\n//         headers: retryHeaders,\r\n//       });\r\n//     }\r\n//   }\r\n//   return res;\r\n// }\r\n\r\n// export async function getAuthJSON<T = any>(\r\n//   path: string,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(path, undefined, true, tenantId);\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// // Convenience wrappers for key flows\r\n// export const AuthAPI = {\r\n//   registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\r\n//   registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\r\n//   registerVerify: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   verifyRegistration: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   login: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\"/auth/login\", { username: email, password }, tenantId),\r\n//   loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\r\n//       \"/auth/login/request-code\",\r\n//       { username: email, password },\r\n//       tenantId\r\n//     ),\r\n//   loginVerify: (email: string, code: string, tenantId?: string) =>\r\n//     postJSON(\"/auth/login/verify\", { email, code }, tenantId),\r\n//   me: () => getAuthJSON(\"/auth/me\"),\r\n// };\r\n\r\n// export const AffiliateAPI = {\r\n//   getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\r\n//   createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\r\n//   deactivate: (token: string) =>\r\n//     postAuthJSON(\r\n//       `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n//       {}\r\n//     ),\r\n//   rotate: (token: string) =>\r\n//     postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n//   dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\r\n//   payouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/affiliate/payouts${\r\n//         status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   requestPayout: (month?: string, percent = 5) =>\r\n//     postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\r\n//   updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\r\n// };\r\n\r\n// export const AdminAPI = {\r\n//   pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   approvePharmacy: (\r\n//     tenantId: string,\r\n//     applicationId: number,\r\n//     body?: { issue_temp_password?: boolean; temp_password?: string }\r\n//   ) =>\r\n//     postAuthJSON(\r\n//       `/admin/pharmacies/${applicationId}/approve`,\r\n//       body || {},\r\n//       tenantId\r\n//     ),\r\n//   rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n//     postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n//   verifyPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\r\n//   rejectPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\r\n//   analyticsOverview: (days = 30) =>\r\n//     getAuthJSON(`/admin/analytics/overview?days=${days}`),\r\n//   downloadPharmacyLicense: async (applicationId: number) => {\r\n//     const res = await authFetch(\r\n//       `/admin/pharmacies/${applicationId}/license`,\r\n//       { method: \"GET\" },\r\n//       true\r\n//     );\r\n//     if (!res.ok) {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `HTTP ${res.status}`);\r\n//     }\r\n//     const blob = await res.blob();\r\n//     let filename = `license-${applicationId}`;\r\n//     const disposition = res.headers.get(\"Content-Disposition\") || \"\";\r\n//     const match = disposition.match(\r\n//       /filename\\*=UTF-8''([^;]+)|filename=\"?([^\";]+)\"?/i\r\n//     );\r\n//     const extracted = match?.[1] || match?.[2];\r\n//     if (extracted) {\r\n//       try {\r\n//         filename = decodeURIComponent(extracted);\r\n//       } catch {\r\n//         filename = extracted;\r\n//       }\r\n//     }\r\n//     const url = window.URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = filename;\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//     document.body.removeChild(link);\r\n//     window.URL.revokeObjectURL(url);\r\n//   },\r\n//   approveAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\r\n//   rejectAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\r\n//   listAffiliatePayouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliate/payouts${\r\n//         status ? `?status=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   markPayoutPaid: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/mark-paid`, {}),\r\n//   approvePayout: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/approve`, {}),\r\n//   usage: (days = 30) => getAuthJSON(`/admin/usage?days=${days}`),\r\n//   audit: (params?: { tenant_id?: string; action?: string; limit?: number }) =>\r\n//     getAuthJSON(\r\n//       `/admin/audit${(() => {\r\n//         const qs = new URLSearchParams();\r\n//         if (params?.tenant_id) qs.set(\"tenant_id\", params.tenant_id);\r\n//         if (params?.action) qs.set(\"action\", params.action);\r\n//         if (params?.limit) qs.set(\"limit\", String(params.limit));\r\n//         const s = qs.toString();\r\n//         return s ? `?${s}` : \"\";\r\n//       })()}`\r\n//     ),\r\n// };\r\n\r\n// export const StaffAPI = {\r\n//   createCashier: (tenantId: string, body: any) =>\r\n//     postAuthJSON(\"/staff\", body, tenantId),\r\n//   list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\r\n//   update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n//     authFetch(\r\n//       `/staff/${userId}`,\r\n//       {\r\n//         method: \"PATCH\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(body),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     ).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n//   remove: (tenantId: string, userId: number) =>\r\n//     authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n//       async (res) => {\r\n//         if (!res.ok) {\r\n//           const t = await res.text();\r\n//           throw new Error(t || `HTTP ${res.status}`);\r\n//         }\r\n//         return res.json();\r\n//       }\r\n//     ),\r\n// };\r\n\r\n// export const BillingAPI = {\r\n//   submitPaymentCode: (tenantId: string, code: string) =>\r\n//     postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\r\n// };\r\n\r\n// export const UploadAPI = {\r\n//   uploadKyc: async (\r\n//     file: File\r\n//   ): Promise<{ path: string; size: number; filename: string }> => {\r\n//     const fd = new FormData();\r\n//     fd.append(\"file\", file);\r\n//     return await postMultipart(`/uploads/kyc`, fd);\r\n//   },\r\n// };\r\n\r\n// export const KYCAPI = {\r\n//   status: (tenantId: string) => getAuthJSON(`/owner/kyc/status`, tenantId),\r\n//   update: (tenantId: string, body: any) =>\r\n//     putAuthJSON(`/owner/kyc/status`, body, tenantId),\r\n// };\r\n\r\n// export const PharmaciesAPI = {\r\n//   list: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\r\n//   update: (id: number, body: { name?: string; address?: string }) =>\r\n//     authFetch(`/pharmacies/${id}`, {\r\n//       method: \"PATCH\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(body),\r\n//     }).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n// };\r\n\r\n// export const ChatAPI = {\r\n//   listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\r\n//   createThread: (tenantId: string, title: string) =>\r\n//     postAuthJSON(`/chat/threads`, { title }, tenantId),\r\n//   listMessages: (tenantId: string, threadId: number) =>\r\n//     getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\r\n//   sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n//     postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n//   usage: (tenantId: string, days = 30) =>\r\n//     getAuthJSON(`/chat/usage?days=${days}`, tenantId),\r\n//   sendStream: async (\r\n//     tenantId: string,\r\n//     threadId: number,\r\n//     prompt: string,\r\n//     onEvent: (evt: { event: string; data?: any }) => void\r\n//   ): Promise<void> => {\r\n//     const res = await authFetch(\r\n//       `/chat/threads/${threadId}/messages/stream`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ prompt }),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     );\r\n//     if (!res.ok || !res.body) {\r\n//       const t = await res.text().catch(() => \"\");\r\n//       throw new Error(t || `HTTP ${res.status}`);\r\n//     }\r\n//     const reader = res.body.getReader();\r\n//     const decoder = new TextDecoder();\r\n//     let buf = \"\";\r\n//     while (true) {\r\n//       const { done, value } = await reader.read();\r\n//       if (done) break;\r\n//       buf += decoder.decode(value, { stream: true });\r\n//       let idx;\r\n//       while ((idx = buf.indexOf(\"\\n\\n\")) !== -1) {\r\n//         const chunk = buf.slice(0, idx).trim();\r\n//         buf = buf.slice(idx + 2);\r\n//         if (chunk.startsWith(\"data:\")) {\r\n//           try {\r\n//             const jsonStr = chunk.slice(5).trim();\r\n//             const obj = JSON.parse(jsonStr);\r\n//             onEvent(obj);\r\n//           } catch {}\r\n//         }\r\n//       }\r\n//     }\r\n//   },\r\n// };\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n        \"icon-sm\": \"size-8\",\r\n        \"icon-lg\": \"size-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/_hooks/use-affiliate-dashboard.ts"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { AffiliateAPI } from \"@/utils/api\";\nimport { useToast } from \"@/components/ui/toast\";\n\nexport type AffiliateStats = {\n  currentCommission: number;\n  pendingPayout: number;\n  paidPayout: number;\n  referrals: number;\n};\n\nexport type AffiliateLink = {\n  token: string;\n  url: string;\n  active: boolean;\n  createdAt?: string | null;\n};\n\nexport type AffiliateDashboardSummary = {\n  percent?: number;\n  amount?: number;\n  tenants?: string[];\n  [key: string]: unknown;\n};\n\ntype DashboardState = {\n  loading: boolean;\n  error: string | null;\n  stats: AffiliateStats;\n  dash: AffiliateDashboardSummary | null;\n  links: AffiliateLink[];\n  canCreateMore: boolean;\n  monthLabel: string;\n  payoutMonth: string;\n  payoutPercent: number;\n  requestingPayout: boolean;\n  setPayoutMonth: (value: string) => void;\n  setPayoutPercent: (value: number) => void;\n  actions: {\n    refresh: () => Promise<void>;\n    createLink: () => Promise<void>;\n    deactivate: (token: string) => Promise<void>;\n    rotate: (token: string) => Promise<void>;\n    copyLink: (url: string) => Promise<void>;\n    requestPayout: () => Promise<void>;\n  };\n};\n\nconst DEFAULT_STATS: AffiliateStats = {\n  currentCommission: 0,\n  pendingPayout: 0,\n  paidPayout: 0,\n  referrals: 0,\n};\n\nconst DEFAULT_MONTH = new Date().toISOString().slice(0, 7);\nconst MAX_ACTIVE_LINKS = 2;\n\nfunction toNumber(value: unknown): number {\n  if (typeof value === \"number\" && !Number.isNaN(value)) return value;\n  if (typeof value === \"string\") {\n    const parsed = Number.parseFloat(value);\n    return Number.isFinite(parsed) ? parsed : 0;\n  }\n  return 0;\n}\n\nfunction extractStats(data: any): AffiliateStats {\n  const source = data?.stats ?? data ?? {};\n  return {\n    currentCommission:\n      toNumber(source.currentCommission ?? source.current_commission ?? source.current ?? 0),\n    pendingPayout: toNumber(source.pendingPayout ?? source.pending_payout ?? 0),\n    paidPayout: toNumber(source.paidPayout ?? source.paid_payout ?? source.paid ?? 0),\n    referrals: toNumber(source.referrals ?? source.total_referrals ?? source.affiliates ?? 0),\n  };\n}\n\nfunction normalizeLinks(payload: any): AffiliateLink[] {\n  const list = Array.isArray(payload)\n    ? payload\n    : Array.isArray(payload?.links)\n    ? payload.links\n    : [];\n\n  return list\n    .map((item: any) => ({\n      token: String(item?.token ?? item?.code ?? \"\"),\n      url: String(item?.url ?? item?.link ?? item?.register_url ?? \"\"),\n      active: Boolean(item?.active ?? item?.is_active ?? item?.status === \"active\"),\n      createdAt: item?.created_at ?? item?.createdAt ?? null,\n    }))\n    .filter((item: AffiliateLink) => item.token && item.url);\n}\n\nfunction extractMonthLabel(data: any): string {\n  const month =\n    data?.monthLabel ??\n    data?.month_label ??\n    data?.current_month_label ??\n    data?.stats?.month_label ??\n    null;\n  if (month) return String(month);\n  return new Intl.DateTimeFormat(\"en-US\", { month: \"long\", year: \"numeric\" }).format(new Date());\n}\n\nfunction extractPercent(data: any): number {\n  return toNumber(\n    data?.percent ??\n      data?.commission_percent ??\n      data?.stats?.percent ??\n      data?.current_percent ??\n      5\n  );\n}\n\nfunction getErrorMessage(error: unknown): string {\n  if (typeof error === \"string\") return error;\n  if (error instanceof Error) return error.message;\n  try {\n    return JSON.stringify(error);\n  } catch {\n    return \"Unexpected error\";\n  }\n}\n\nexport function useAffiliateDashboard(): DashboardState {\n  const { show } = useToast();\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [stats, setStats] = useState<AffiliateStats>(DEFAULT_STATS);\n  const [dash, setDash] = useState<AffiliateDashboardSummary | null>(null);\n  const [links, setLinks] = useState<AffiliateLink[]>([]);\n  const [canCreateMore, setCanCreateMore] = useState<boolean>(true);\n  const [monthLabel, setMonthLabel] = useState<string>(extractMonthLabel(null));\n  const [payoutMonth, setPayoutMonthState] = useState<string>(DEFAULT_MONTH);\n  const [payoutPercent, setPayoutPercentState] = useState<number>(5);\n  const [requestingPayout, setRequestingPayout] = useState<boolean>(false);\n\n  const hasInitialized = useRef(false);\n\n  const refreshLinks = useCallback(async () => {\n    const response = await AffiliateAPI.getLinks();\n    const normalized = normalizeLinks(response);\n    setLinks(normalized);\n    const activeCount = normalized.filter((link) => link.active).length;\n    setCanCreateMore(activeCount < MAX_ACTIVE_LINKS);\n  }, []);\n\n  const refreshDashboard = useCallback(async () => {\n    const response = await AffiliateAPI.dashboard();\n    setStats(extractStats(response));\n    const snapshot =\n      response?.dash ??\n      response?.current_month ??\n      response?.summary ??\n      response?.stats?.current_month ??\n      null;\n    setDash(snapshot ?? null);\n    setMonthLabel(extractMonthLabel(response));\n    const percent = extractPercent(response);\n    const nextMonth = response?.next_payout_month ?? response?.payout_month ?? null;\n\n    if (!hasInitialized.current) {\n      setPayoutPercentState(percent > 0 ? percent : 5);\n      setPayoutMonthState(typeof nextMonth === \"string\" && nextMonth ? nextMonth : DEFAULT_MONTH);\n      hasInitialized.current = true;\n    }\n  }, []);\n\n  const refresh = useCallback(async () => {\n    try {\n      setLoading(true);\n      await Promise.all([refreshDashboard(), refreshLinks()]);\n      setError(null);\n    } catch (err) {\n      const message = getErrorMessage(err);\n      console.error(\"[useAffiliateDashboard] refresh failed\", err);\n      setError(message);\n    } finally {\n      setLoading(false);\n    }\n  }, [refreshDashboard, refreshLinks]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  const handleCreateLink = useCallback(async () => {\n    try {\n      await AffiliateAPI.createLink();\n      await refreshLinks();\n      show({ variant: \"success\", title: \"Link created\", description: \"A new referral link is now active.\" });\n    } catch (err) {\n      const message = getErrorMessage(err);\n      show({ variant: \"destructive\", title: \"Failed to create link\", description: message });\n    }\n  }, [refreshLinks, show]);\n\n  const handleRotateLink = useCallback(\n    async (token: string) => {\n      try {\n        await AffiliateAPI.rotate(token);\n        await refreshLinks();\n        show({ variant: \"success\", title: \"Link rotated\", description: \"The referral link has been refreshed.\" });\n      } catch (err) {\n        const message = getErrorMessage(err);\n        show({ variant: \"destructive\", title: \"Failed to rotate\", description: message });\n      }\n    },\n    [refreshLinks, show]\n  );\n\n  const handleDeactivateLink = useCallback(\n    async (token: string) => {\n      try {\n        await AffiliateAPI.deactivate(token);\n        await refreshLinks();\n        show({ variant: \"success\", title: \"Link deactivated\", description: \"The referral link is now inactive.\" });\n      } catch (err) {\n        const message = getErrorMessage(err);\n        show({ variant: \"destructive\", title: \"Failed to deactivate\", description: message });\n      }\n    },\n    [refreshLinks, show]\n  );\n\n  const handleCopyLink = useCallback(\n    async (url: string) => {\n      try {\n        if (typeof navigator !== \"undefined\" && navigator.clipboard) {\n          await navigator.clipboard.writeText(url);\n          show({ variant: \"success\", title: \"Copied\", description: \"Referral link copied to clipboard.\" });\n        } else {\n          throw new Error(\"Clipboard API unavailable\");\n        }\n      } catch (err) {\n        const message = getErrorMessage(err);\n        show({ variant: \"destructive\", title: \"Copy failed\", description: message });\n      }\n    },\n    [show]\n  );\n\n  const handleRequestPayout = useCallback(async () => {\n    setRequestingPayout(true);\n    try {\n      await AffiliateAPI.requestPayout(payoutMonth || undefined, payoutPercent || 5);\n      show({ variant: \"success\", title: \"Payout requested\", description: \"Finance will review your request shortly.\" });\n      await refreshDashboard();\n    } catch (err) {\n      const message = getErrorMessage(err);\n      show({ variant: \"destructive\", title: \"Request failed\", description: message });\n    } finally {\n      setRequestingPayout(false);\n    }\n  }, [payoutMonth, payoutPercent, refreshDashboard, show]);\n\n  const actions = useMemo(\n    () => ({\n      refresh,\n      createLink: handleCreateLink,\n      deactivate: handleDeactivateLink,\n      rotate: handleRotateLink,\n      copyLink: handleCopyLink,\n      requestPayout: handleRequestPayout,\n    }),\n    [refresh, handleCreateLink, handleDeactivateLink, handleRotateLink, handleCopyLink, handleRequestPayout]\n  );\n\n  return {\n    loading,\n    error,\n    stats,\n    dash,\n    links,\n    canCreateMore,\n    monthLabel,\n    payoutMonth,\n    payoutPercent,\n    requestingPayout,\n    setPayoutMonth: setPayoutMonthState,\n    setPayoutPercent: setPayoutPercentState,\n    actions,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/_context/affiliate-dashboard-context.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext } from \"react\";\nimport {\n  useAffiliateDashboard,\n  type AffiliateLink,\n  type AffiliateStats,\n  type AffiliateDashboardSummary,\n} from \"../_hooks/use-affiliate-dashboard\";\n\nconst AffiliateDashboardContext = createContext<ReturnType<typeof useAffiliateDashboard> | null>(null);\n\nexport function AffiliateDashboardProvider({ children }: { children: React.ReactNode }) {\n  const value = useAffiliateDashboard();\n  return <AffiliateDashboardContext.Provider value={value}>{children}</AffiliateDashboardContext.Provider>;\n}\n\nexport function useAffiliateDashboardContext() {\n  const context = useContext(AffiliateDashboardContext);\n  if (!context) {\n    throw new Error(\"useAffiliateDashboardContext must be used within AffiliateDashboardProvider\");\n  }\n  return context;\n}\n\nexport type { AffiliateStats, AffiliateLink, AffiliateDashboardSummary };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;;;AAHA;;;AAUA,MAAM,0CAA4B,IAAA,8KAAa,EAAkD;AAE1F,SAAS,2BAA2B,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IACzC,MAAM,QAAQ,IAAA,qNAAqB;IACnC,qBAAO,6LAAC,0BAA0B,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC5D;GAHgB;;QACA,qNAAqB;;;KADrB;AAKT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/layout.tsx"],"sourcesContent":["// Dashboard layout (sidebar, nav)\n\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { getAuthJSON } from \"@/utils/api\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAffiliateDashboardContext } from \"./dashboard/affiliate/_context/affiliate-dashboard-context\";\n\ntype Me = {\n  id: string;\n  email: string;\n  username: string;\n  role?: string;\n  tenant_id?: string;\n  roles?: { role: { name: string } }[];\n  kyc_status?: string | null;\n  subscription_status?: string | null;\n  subscription_blocked?: boolean | null;\n  subscription_next_due_date?: string | null;\n  latest_payment_status?: string | null;\n};\n\nfunction deriveRoles(user: Me | null | undefined): string[] {\n  const roles = new Set<string>();\n  if (user?.role) roles.add(user.role.toLowerCase());\n  user?.roles?.forEach((entry) => {\n    const name = entry?.role?.name;\n    if (name) roles.add(name.toLowerCase());\n  });\n  return Array.from(roles);\n}\n\nexport default function DashboardLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<Me | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [banner, setBanner] = useState<\n    | null\n    | {\n        kind: \"kyc_pending\" | \"payment\";\n        title: string;\n        description: string;\n        actionHref?: string;\n        actionLabel?: string;\n      }\n  >(null);\n  const roles = deriveRoles(user);\n  const roleName = roles[0] || \"\";\n  const isAffiliate = roles.includes(\"affiliate\");\n\n  useEffect(() => {\n    let active = true;\n    async function check() {\n      try {\n        const me = await getAuthJSON<Me>(\"/auth/me\");\n        if (!active) return;\n        setUser(me);\n        // If KYC is pending and user is an owner/staff, keep them on status page only\n        const primaryRole = (me?.role || me?.roles?.[0]?.role?.name || \"\").toLowerCase();\n        if (primaryRole !== \"admin\" && pathname.startsWith(\"/dashboard/admin\")) {\n          router.replace(\"/dashboard/owner\");\n          return;\n        }\n        if ([\"pharmacy_owner\", \"owner\", \"cashier\", \"manager\"].includes(primaryRole)) {\n          const needsKyc = me?.kyc_status !== \"approved\";\n          const needsPayment = me?.kyc_status === \"approved\" && me?.subscription_status && me.subscription_status !== \"active\";\n          const ownerKycPath = \"/dashboard/owner/kyc\";\n          const ownerPaymentPath = \"/dashboard/owner/payment\";\n          if (needsKyc && pathname !== ownerKycPath) {\n            router.replace(ownerKycPath);\n            return;\n          }\n          if (!needsKyc && needsPayment && pathname !== ownerPaymentPath) {\n            router.replace(ownerPaymentPath);\n            return;\n          }\n          if (!needsKyc && !needsPayment && (pathname === ownerKycPath || pathname === ownerPaymentPath)) {\n            router.replace(\"/dashboard/owner\");\n            return;\n          }\n        }\n        // One-time referral track removed (handled server-side)\n      } catch (e: any) {\n        if (!active) return;\n        setError(\"Unauthorized\");\n        router.replace(\"/login\");\n      } finally {\n        if (active) setLoading(false);\n      }\n    }\n    // If no token, redirect immediately\n    if (typeof window !== \"undefined\" && !localStorage.getItem(\"access_token\")) {\n      setLoading(false);\n      router.replace(\"/login\");\n      return;\n    }\n    check();\n    return () => {\n      active = false;\n    };\n  }, [router, pathname]);\n\n  useEffect(() => {\n    if (!user) {\n      setBanner(null);\n      return;\n    }\n    const userRoles = deriveRoles(user);\n    const isOwner = userRoles.includes(\"pharmacy_owner\") || userRoles.includes(\"owner\");\n    const isCashier = userRoles.includes(\"cashier\");\n    if (!(isOwner || isCashier)) {\n      setBanner(null);\n      return;\n    }\n\n    if (user.kyc_status && user.kyc_status !== \"approved\") {\n      setBanner({\n        kind: \"kyc_pending\",\n        title: \"KYC review in progress\",\n        description: \"Thanks for submitting your application. Our compliance team is reviewing your documents — you will receive an email once it is approved.\",\n      });\n      return;\n    }\n\n    const status = user.subscription_status || \"active\";\n    if ([\"awaiting_payment\", \"pending_verification\", \"payment_rejected\"].includes(status)) {\n      const copies: Record<string, { title: string; description: string }> = {\n        awaiting_payment: {\n          title: \"Subscription payment required\",\n          description: \"Complete your first subscription payment and submit the receipt code so the admin team can activate your access.\",\n        },\n        pending_verification: {\n          title: \"Payment awaiting verification\",\n          description: \"We have received your payment code. The admin team is verifying it — you will be notified once access is restored.\",\n        },\n        payment_rejected: {\n          title: \"Payment could not be verified\",\n          description: \"The last payment submission was rejected. Please double-check the receipt code and submit it again.\",\n        },\n      };\n      const copy = copies[status];\n      setBanner({\n        kind: \"payment\",\n        title: copy.title,\n        description: copy.description,\n        actionHref: \"/dashboard/owner/billing\",\n        actionLabel: \"View payment guide\",\n      });\n      return;\n    }\n\n    setBanner(null);\n  }, [user]);\n\n  function logout() {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n    }\n    router.replace(isAffiliate ? \"/auth/affiliate-login\" : \"/login\");\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-pulse text-gray-500\">Loading dashboard...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return null; // Redirected\n  }\n\n  return (\n    <Shell user={user} onLogout={logout}>\n      {banner && (\n        <div className=\"mb-4 p-3 border rounded bg-amber-50 text-amber-800 text-sm flex flex-col md:flex-row md:items-center md:justify-between gap-3\">\n          <div>\n            <div className=\"font-medium\">{banner.title}</div>\n            <div className=\"text-xs md:text-sm\">{banner.description}</div>\n          </div>\n          {banner.actionHref && banner.actionLabel && (\n            <a href={banner.actionHref} className=\"inline-flex items-center justify-center rounded border border-amber-600 px-3 py-1 text-xs font-medium text-amber-700 hover:bg-amber-100\">\n              {banner.actionLabel}\n            </a>\n          )}\n        </div>\n      )}\n      {children}\n    </Shell>\n  );\n}\n\nfunction Shell({\n  user,\n  onLogout,\n  children,\n}: {\n  user: Me | null;\n  onLogout: () => void;\n  children: React.ReactNode;\n}) {\n  const pathname = usePathname();\n  const affiliateCtx = useAffiliateDashboardContext();\n  const roles = deriveRoles(user);\n  const baseRole = (user?.role || \"\").toLowerCase();\n  const primaryRole = baseRole || roles[0] || \"\";\n  const isOwner = baseRole === \"pharmacy_owner\" || baseRole === \"owner\" || roles.includes(\"pharmacy_owner\") || roles.includes(\"owner\");\n  const isCashier = baseRole === \"cashier\" || roles.includes(\"cashier\");\n  const isManager = baseRole === \"manager\" || roles.includes(\"manager\");\n  const isAffiliate = baseRole === \"affiliate\" || roles.includes(\"affiliate\");\n  const isAdmin = baseRole === \"admin\";\n  const isOwnerOrManager = isOwner || isManager || isCashier;\n  const subscriptionStatus = user?.subscription_status || \"active\";\n  const requiresPayment = isOwnerOrManager && user?.kyc_status === \"approved\" && subscriptionStatus !== \"active\";\n  const kycPending = isOwnerOrManager && user?.kyc_status && user.kyc_status !== \"approved\";\n\n  const nav = isAffiliate\n    ? [\n        { href: \"/dashboard/affiliate\", label: \"Affiliate overview\" },\n        { href: \"/dashboard/affiliate/payouts\", label: \"Payouts\" },\n        { href: \"/dashboard/affiliate/commissions\", label: \"Commissions\" },\n        { href: \"/dashboard/affiliate/affiliates\", label: \"Affiliates\" },\n        { href: \"/dashboard/affiliate/register\", label: \"Register\" },\n      ]\n    : isAdmin\n    ? [\n        { href: \"/dashboard/admin\", label: \"Admin Overview\" },\n        { href: \"/dashboard/admin/users\", label: \"Users\" },\n        { href: \"/dashboard/admin/pharmacies\", label: \"Pharmacies\" },\n        { href: \"/dashboard/admin/affiliates\", label: \"Affiliates\" },\n        { href: \"/dashboard/admin/payouts\", label: \"Payouts\" },\n        { href: \"/dashboard/admin/audit\", label: \"Audit Log\" },\n      ]\n    : isOwnerOrManager\n    ? (kycPending\n        ? [{ href: \"/dashboard/owner/kyc\", label: \"KYC\" }]\n        : requiresPayment\n        ? [{ href: \"/dashboard/owner/payment\", label: \"Payment\" }]\n        : [\n            { href: \"/dashboard/owner\", label: \"Owner Overview\" },\n            { href: \"/dashboard/owner/billing\", label: \"Billing\" },\n            { href: \"/dashboard/inventory\", label: \"Inventory\" },\n            { href: \"/dashboard/pos\", label: \"POS\" },\n            { href: \"/dashboard/settings\", label: \"Settings\" },\n            { href: \"/dashboard/about\", label: \"About\" },\n          ])\n    : [\n        { href: \"/dashboard\", label: \"Overview\" },\n        { href: \"/dashboard/inventory\", label: \"Inventory\" },\n        { href: \"/dashboard/pos\", label: \"POS\" },\n        { href: \"/dashboard/affiliate\", label: \"Affiliate\" },\n        { href: \"/dashboard/settings\", label: \"Settings\" },\n        { href: \"/dashboard/about\", label: \"About\" },\n      ];\n\n  return (\n    <div className=\"min-h-screen grid grid-cols-12\">\n      <aside className=\"col-span-12 md:col-span-2 border-r p-4 space-y-6 bg-white\">\n        <div className=\"space-y-1\">\n          <div className=\"text-lg font-semibold\">\n            {isAffiliate ? \"Affiliate Portal\" : isAdmin ? \"Admin Console\" : \"Zemen Dashboard\"}\n          </div>\n          <div className=\"text-xs text-gray-500\">\n            {isAffiliate ? \"Track referrals & payouts\" : isAdmin ? \"Manage platform data\" : \"Secure area\"}\n          </div>\n        </div>\n\n        <div className=\"space-y-1 text-sm\">\n          {user ? (\n            <div>\n              <div className=\"font-medium\">{user.username}</div>\n              <div className=\"text-xs text-gray-500 truncate\">{user.email}</div>\n              {primaryRole && <div className=\"text-2xs uppercase text-gray-400\">{primaryRole}</div>}\n            </div>\n          ) : null}\n        </div>\n\n        <nav className=\"space-y-1\">\n          {nav.map((item) => {\n            const active = pathname === item.href || pathname?.startsWith(item.href + \"/\");\n            return (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={\n                  \"block rounded px-3 py-2 text-sm \" +\n                  (active\n                    ? \"bg-emerald-50 text-emerald-700 border border-emerald-200\"\n                    : \"hover:bg-gray-50 text-gray-700\")\n                }\n              >\n                {item.label}\n              </Link>\n            );\n          })}\n        </nav>\n\n        <div className=\"pt-4\">\n          <Button variant=\"outline\" onClick={onLogout} className=\"w-full text-red-600 border-red-200 hover:bg-red-50\">\n            Logout\n          </Button>\n        </div>\n      </aside>\n\n      <div className=\"col-span-12 md:col-span-10 flex flex-col min-h-screen bg-gray-50\">\n        <header className=\"flex items-center justify-between border-b bg-white p-4\">\n          <div className=\"text-sm font-medium text-gray-800 md:text-base\">\n            {nav.find((n) => pathname?.startsWith(n.href))?.label || \"Overview\"}\n          </div>\n          {isAffiliate ? (\n            <div className=\"flex items-center gap-3 text-xs text-gray-500 md:text-sm\">\n              <div className=\"hidden items-center gap-2 sm:flex\">\n                <span className=\"text-gray-400\">Signed in as</span>\n                <span className=\"rounded-full bg-gray-100 px-3 py-1 font-medium text-gray-700\">\n                  {user?.email || \"—\"}\n                </span>\n              </div>\n              <div className=\"rounded-full bg-emerald-50 px-3 py-1 text-xs font-medium text-emerald-600\">\n                Period: {affiliateCtx?.monthLabel ?? \"Current\"}\n              </div>\n            </div>\n          ) : (\n            !isAdmin && (\n              <div className=\"text-sm text-gray-500\">Tenant: {user?.tenant_id || \"N/A\"}</div>\n            )\n          )}\n        </header>\n\n        <main className=\"p-6 flex-1\">{children}</main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}