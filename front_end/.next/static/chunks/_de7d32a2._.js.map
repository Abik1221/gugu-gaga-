{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,KAA0C;QAA1C,EAAE,YAAY,EAAE,EAA0B,GAA1C;IACvB,qBAAO,6LAAC;QAAI,WAAW,AAAC,qCAA8C,OAAV;;;;;;AAC9D;KAFgB;AAIT,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC,GAAxD;IAChC,qBACE,6LAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,6LAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,6LAAC;wBAAW,WAAU;kCACpB,cAAA,6LAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB;MAdgB","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,2KAAgB,MACnC,QAA+B;QAA9B,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC3B,qBACE,6LAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"bg-white rounded-xl shadow p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"mb-2\", className)} {...props} />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h4\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-emerald-700\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"text-gray-700\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nexport { Card, CardHeader, CardTitle, CardContent };\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,kCAAkC;QAC/C,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,QAAQ;QAAa,GAAG,KAAK;;;;;;;;AAE5D,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,iBAAiB;QAAa,GAAG,KAAK;;;;;;;;AAErE,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/admin/pharmacies/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { AdminAPI } from \"@/utils/api\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/components/ui/toast\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\n\ntype AdminPharmacy = {\n  id: number;\n  tenant_id: string;\n  name: string;\n  address?: string | null;\n  owner_email?: string | null;\n  owner_phone?: string | null;\n  owner_approved?: boolean | null;\n  kyc_id?: number | null;\n  kyc_status?: string | null;\n  subscription?: { blocked?: boolean | null; next_due_date?: string | null; status?: string | null } | null;\n  created_at?: string | null;\n  pending_payment_code?: string | null;\n  pending_payment_submitted_at?: string | null;\n  latest_payment_code?: string | null;\n  latest_payment_status?: string | null;\n  latest_payment_submitted_at?: string | null;\n  latest_payment_verified_at?: string | null;\n  status_category: \"pending_kyc\" | \"awaiting_payment\" | \"pending_verification\" | \"active\" | \"blocked\" | string;\n  status_label: string;\n  status_priority: number;\n  pending_payment?: {\n    code?: string | null;\n    status?: string | null;\n    submitted_at?: string | null;\n    submitted_by_user_id?: number | null;\n  } | null;\n  latest_payment?: {\n    code?: string | null;\n    status?: string | null;\n    submitted_at?: string | null;\n    verified_at?: string | null;\n  } | null;\n  kyc?: {\n    application_id?: number | null;\n    status?: string | null;\n    applicant_user_id?: number | null;\n    id_number?: string | null;\n    pharmacy_license_number?: string | null;\n    license_document_name?: string | null;\n    license_document_mime?: string | null;\n    license_document_available: boolean;\n    notes?: string | null;\n    submitted_at?: string | null;\n    pharmacy_name?: string | null;\n    pharmacy_address?: string | null;\n    owner_email?: string | null;\n    owner_phone?: string | null;\n  } | null;\n  owner_password_hash?: string | null;\n};\n\ntype PendingActionState = {\n  type: \"approve\" | \"reject\" | \"verify\" | \"rejectPayment\";\n  tenantId: string;\n  name: string;\n  kycId?: number | null;\n  pendingPayment?: AdminPharmacy[\"pending_payment\"];\n};\n\ntype ConfirmOptions = {\n  issueTempPassword: boolean;\n  tempPassword: string;\n};\n\nconst STATUS_SECTIONS: { key: AdminPharmacy[\"status_category\"]; title: string }[] = [\n  { key: \"pending_kyc\", title: \"Pending KYC\" },\n  { key: \"awaiting_payment\", title: \"Awaiting Payment\" },\n  { key: \"pending_verification\", title: \"Awaiting Verification\" },\n  { key: \"active\", title: \"Active Pharmacies\" },\n  { key: \"blocked\", title: \"Blocked / Rejected\" },\n];\n\nconst STATUS_TONE: Record<string, \"primary\" | \"muted\" | \"outline\" | \"danger\"> = {\n  pending_kyc: \"primary\",\n  awaiting_payment: \"outline\",\n  pending_verification: \"primary\",\n  active: \"muted\",\n  blocked: \"danger\",\n};\n\nfunction generatePassword(length = 12): string {\n  const alphabet = \"ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789\";\n  let result = \"\";\n  for (let i = 0; i < length; i++) {\n    result += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n  }\n  return result;\n}\n\nfunction sortPharmacies(list: AdminPharmacy[]): AdminPharmacy[] {\n  return [...list].sort((a, b) => {\n    if (a.status_priority !== b.status_priority) {\n      return a.status_priority - b.status_priority;\n    }\n    const timeA = a.created_at ? new Date(a.created_at).getTime() : 0;\n    const timeB = b.created_at ? new Date(b.created_at).getTime() : 0;\n    return timeB - timeA;\n  });\n}\n\nfunction formatDateTime(value?: string | null, options: Intl.DateTimeFormatOptions = {}) {\n  if (!value) return \"-\";\n  try {\n    return new Date(value).toLocaleString(undefined, { dateStyle: \"medium\", timeStyle: \"short\", ...options });\n  } catch (e) {\n    return value;\n  }\n}\n\nexport default function AdminPharmaciesPage() {\n  const { show } = useToast();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [items, setItems] = useState<AdminPharmacy[]>([]);\n  const [total, setTotal] = useState(0);\n  const [q, setQ] = useState(\"\");\n  const [selectedTenant, setSelectedTenant] = useState<string | null>(null);\n  const [pendingAction, setPendingAction] = useState<PendingActionState | null>(null);\n  const [processing, setProcessing] = useState(false);\n  const [recentCredentials, setRecentCredentials] = useState<{ tenantId: string; name: string; tempPassword: string } | null>(null);\n  const [confirmOptions, setConfirmOptions] = useState<ConfirmOptions>({ issueTempPassword: false, tempPassword: \"\" });\n\n  const handleDialogCancel = () => {\n    setPendingAction(null);\n    setConfirmOptions({ issueTempPassword: false, tempPassword: \"\" });\n  };\n\n  function openAction(action: PendingActionState) {\n    setPendingAction(action);\n    setConfirmOptions({ issueTempPassword: false, tempPassword: \"\" });\n  }\n\n  async function handleCopyPassword(password: string) {\n    try {\n      await navigator.clipboard.writeText(password);\n      show({ variant: \"success\", title: \"Copied\", description: \"Temporary password copied to clipboard\" });\n    } catch (err: any) {\n      show({ variant: \"destructive\", title: \"Copy failed\", description: err?.message || \"Unable to copy password\" });\n    }\n  }\n\n  async function refresh(page = 1) {\n    setLoading(true);\n    try {\n      const data = (await AdminAPI.pharmacies(page, 20, q)) as { items?: AdminPharmacy[]; total?: number };\n      const sorted = sortPharmacies(data.items || []);\n      setItems(sorted);\n      setTotal(data.total || sorted.length);\n      setError(null);\n    } catch (e: any) {\n      setError(e.message || \"Failed to load pharmacies\");\n      show({ variant: \"destructive\", title: \"Error\", description: e.message || \"Failed to load\" });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => { refresh(1); }, []);\n\n  const grouped = useMemo(() => {\n    const map = new Map<string, AdminPharmacy[]>();\n    STATUS_SECTIONS.forEach((section) => map.set(section.key, []));\n    items.forEach((item) => {\n      const bucket = map.get(item.status_category) ?? map.get(\"blocked\") ?? [];\n      bucket.push(item);\n      map.set(item.status_category, bucket);\n    });\n    return map;\n  }, [items]);\n\n  function updateTenant(tenantId: string, updater: (prev: AdminPharmacy) => AdminPharmacy) {\n    setItems((prev) => {\n      const updated = prev.map((item) => (item.tenant_id === tenantId ? updater(item) : item));\n      return sortPharmacies(updated);\n    });\n  }\n\n  return (\n    <>\n      {recentCredentials && (\n        <div className=\"mb-4 rounded border border-emerald-500/60 bg-emerald-50 p-3 text-sm flex flex-col md:flex-row md:items-center md:justify-between gap-3\">\n          <div>\n            <div className=\"font-semibold text-emerald-800\">Temporary credentials issued</div>\n            <div className=\"text-xs text-emerald-700\">\n              {recentCredentials.name} (tenant {recentCredentials.tenantId}) — share the password securely with the owner.\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"font-mono text-emerald-900 text-sm\">{recentCredentials.tempPassword}</span>\n            <Button size=\"sm\" variant=\"outline\" onClick={() => handleCopyPassword(recentCredentials.tempPassword)}>Copy</Button>\n          </div>\n        </div>\n      )}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h1 className=\"text-xl font-semibold\">Admin · Pharmacies</h1>\n          <div className=\"flex gap-2\">\n            <Input placeholder=\"Search by name\" value={q} onChange={(e)=>setQ(e.target.value)} />\n            <Button onClick={()=>refresh(1)}>Search</Button>\n          </div>\n        </div>\n        {loading ? (\n          <Skeleton className=\"h-64\" />\n        ) : error ? (\n          <div className=\"text-sm text-red-600\">{error}</div>\n        ) : items.length === 0 ? (\n          <div className=\"border rounded p-6 text-center text-gray-500\">No pharmacies found.</div>\n        ) : (\n          <div className=\"space-y-6\">\n            {STATUS_SECTIONS.map((section) => {\n              const sectionItems = grouped.get(section.key) || [];\n              if (sectionItems.length === 0) return null;\n              return (\n                <div key={section.key} className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <h2 className=\"text-lg font-semibold\">{section.title}</h2>\n                    <span className=\"text-xs text-muted-foreground\">{sectionItems.length} {sectionItems.length === 1 ? \"pharmacy\" : \"pharmacies\"}</span>\n                  </div>\n                  <div className=\"grid gap-4 md:grid-cols-2 xl:grid-cols-3\">\n                    {sectionItems.map((ph) => {\n                      const isSelected = selectedTenant === ph.tenant_id;\n                      const statusTone = STATUS_TONE[ph.status_category] || \"muted\";\n                      const canApprove = ph.status_category === \"pending_kyc\" && !!ph.kyc_id;\n                      const canReject = ph.status_category === \"pending_kyc\" && !!ph.kyc_id;\n                      const pendingCode = ph.pending_payment?.code || ph.pending_payment_code;\n                      const canVerify = ph.status_category === \"pending_verification\" && !!pendingCode;\n                      const canRejectPayment = ph.status_category === \"pending_verification\" && !!pendingCode;\n                      const kyc = ph.kyc;\n\n                      return (\n                        <Card\n                          key={ph.id}\n                          className={cn(\"transition-shadow\", isSelected && \"border-blue-500 shadow-lg\")}\n                          onClick={() => setSelectedTenant(ph.tenant_id)}\n                        >\n                          <CardHeader className=\"flex flex-row items-start justify-between gap-4\">\n                            <div className=\"space-y-1\">\n                              <CardTitle className=\"text-lg\">{ph.name}</CardTitle>\n                              <div className=\"text-xs text-muted-foreground font-mono\">{ph.tenant_id}</div>\n                            </div>\n                            <div className=\"flex flex-wrap gap-2 justify-end\">\n                              <StatusPill tone={statusTone}>{ph.status_label}</StatusPill>\n                              {ph.owner_approved && <StatusPill tone=\"outline\">Owner approved</StatusPill>}\n                            </div>\n                          </CardHeader>\n                          <CardContent className=\"space-y-4\">\n                            <div className=\"grid gap-2\">\n                              <InfoRow label=\"Owner\" value={ph.owner_email || \"-\"} description={ph.owner_phone} />\n                              <InfoRow label=\"Created\" value={formatDateTime(ph.created_at)} />\n                              <InfoRow label=\"Address\" value={ph.address || \"-\"} />\n                              <InfoRow\n                                label=\"Subscription\"\n                                value={ph.subscription?.status ? ph.subscription.status.replace(\"_\", \" \").toUpperCase() : \"-\"}\n                                description={ph.subscription?.next_due_date ? `Next due: ${formatDateTime(ph.subscription.next_due_date, { dateStyle: \"medium\" })}` : undefined}\n                              />\n                              {pendingCode && (\n                                <InfoRow\n                                  label=\"Pending payment\"\n                                  value={pendingCode}\n                                  description={ph.pending_payment?.submitted_at ? `Submitted ${formatDateTime(ph.pending_payment?.submitted_at)}` : undefined}\n                                />\n                              )}\n                              <InfoRow\n                                label=\"Latest payment\"\n                                value={ph.latest_payment?.code || ph.latest_payment_code || \"—\"}\n                                description={ph.latest_payment?.status ? `${ph.latest_payment?.status?.toUpperCase?.()}${ph.latest_payment?.submitted_at ? ` · ${formatDateTime(ph.latest_payment?.submitted_at)}` : \"\"}` : undefined}\n                              />\n                              {kyc && (\n                                <div className=\"rounded border p-3 space-y-2 bg-muted/50\">\n                                  <div className=\"text-sm font-semibold\">KYC Details</div>\n                                  <div className=\"grid gap-2 md:grid-cols-2\">\n                                    <InfoRow label=\"KYC Status\" value={kyc.status?.toUpperCase() || \"-\"} />\n                                    <InfoRow label=\"Submitted\" value={formatDateTime(kyc.submitted_at)} />\n                                    <InfoRow label=\"ID Number\" value={kyc.id_number || \"-\"} />\n                                    <InfoRow label=\"License Number\" value={kyc.pharmacy_license_number || \"-\"} />\n                                    {kyc.pharmacy_name && <InfoRow label=\"Registered Pharmacy Name\" value={kyc.pharmacy_name} />}\n                                    {kyc.pharmacy_address && <InfoRow label=\"Registered Address\" value={kyc.pharmacy_address} />}\n                                    {kyc.owner_email && <InfoRow label=\"Owner Email (submitted)\" value={kyc.owner_email} />}\n                                    {kyc.owner_phone && <InfoRow label=\"Owner Phone (submitted)\" value={kyc.owner_phone} />}\n                                  </div>\n                                  {kyc.notes && <div className=\"text-xs text-muted-foreground\">Notes: {kyc.notes}</div>}\n                                  {kyc.license_document_available && kyc.application_id && (\n                                    <Button\n                                      variant=\"outline\"\n                                      size=\"sm\"\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        const appId = kyc.application_id;\n                                        if (typeof appId !== \"number\") return;\n                                        AdminAPI.downloadPharmacyLicense(appId).catch((err) =>\n                                          show({ variant: \"destructive\", title: \"Download failed\", description: err.message || \"Unable to download license\" }),\n                                        );\n                                      }}\n                                    >\n                                      Download License\n                                    </Button>\n                                  )}\n                                </div>\n                              )}\n                              {ph.owner_password_hash && (\n                                <InfoRow label=\"Owner Password Hash\" value={ph.owner_password_hash} masked />\n                              )}\n                            </div>\n\n                            <div className=\"h-px bg-border\" />\n\n                            <div className=\"flex flex-wrap gap-2\">\n                              <Button\n                                disabled={!canApprove}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  openAction({ type: \"approve\", tenantId: ph.tenant_id, kycId: ph.kyc_id, name: ph.name });\n                                }}\n                              >Approve & Notify</Button>\n                              <Button\n                                variant=\"outline\"\n                                disabled={!canReject}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  openAction({ type: \"reject\", tenantId: ph.tenant_id, kycId: ph.kyc_id, name: ph.name });\n                                }}\n                              >Reject</Button>\n                              <Button\n                                variant=\"secondary\"\n                                disabled={!canVerify}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  openAction({ type: \"verify\", tenantId: ph.tenant_id, name: ph.name, pendingPayment: ph.pending_payment });\n                                }}\n                              >Verify Payment</Button>\n                              <Button\n                                variant=\"outline\"\n                                disabled={!canRejectPayment}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  openAction({ type: \"rejectPayment\", tenantId: ph.tenant_id, name: ph.name, pendingPayment: ph.pending_payment });\n                                }}\n                              >Reject Payment</Button>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n      {pendingAction && (\n        <ConfirmDialog\n          action={pendingAction}\n          loading={processing}\n          onCancel={() => {\n            if (processing) return;\n            handleDialogCancel();\n          }}\n          onConfirm={async () => {\n            if (processing) return;\n            setProcessing(true);\n            try {\n              switch (pendingAction.type) {\n                case \"approve\": {\n                  if (pendingAction.kycId == null) {\n                    show({ variant: \"destructive\", title: \"Missing application\", description: \"No KYC record found for this tenant.\" });\n                    setProcessing(false);\n                    return;\n                  }\n                  const trimmedPassword = confirmOptions.tempPassword.trim();\n                  if (confirmOptions.issueTempPassword && trimmedPassword && trimmedPassword.length < 6) {\n                    show({ variant: \"destructive\", title: \"Password too short\", description: \"Temporary passwords must be at least 6 characters.\" });\n                    setProcessing(false);\n                    return;\n                  }\n                  const res = await AdminAPI.approvePharmacy(pendingAction.tenantId, pendingAction.kycId, {\n                    issue_temp_password: confirmOptions.issueTempPassword,\n                    temp_password: confirmOptions.issueTempPassword ? (trimmedPassword || undefined) : undefined,\n                  });\n                  const generated = (res as any)?.temporary_password as string | undefined;\n                  if (generated) {\n                    setRecentCredentials({ tenantId: pendingAction.tenantId, name: pendingAction.name, tempPassword: generated });\n                  } else if (confirmOptions.issueTempPassword && trimmedPassword) {\n                    setRecentCredentials({ tenantId: pendingAction.tenantId, name: pendingAction.name, tempPassword: trimmedPassword });\n                  } else {\n                    setRecentCredentials(null);\n                  }\n                  show({ variant: \"success\", title: \"Pharmacy approved\", description: `${pendingAction.name} will be notified to pay` });\n                  refresh();\n                  break;\n                }\n                case \"reject\":\n                  await AdminAPI.rejectPharmacy(pendingAction.tenantId, pendingAction.kycId!);\n                  show({ variant: \"success\", title: \"Pharmacy rejected\", description: pendingAction.name });\n                  refresh();\n                  break;\n                case \"verify\": {\n                  const res = await AdminAPI.verifyPayment(pendingAction.tenantId, pendingAction.pendingPayment?.code || undefined);\n                  show({ variant: \"success\", title: \"Payment verified\", description: `${pendingAction.name} notified` });\n                  updateTenant(pendingAction.tenantId, (prev) => ({\n                    ...prev,\n                    status_category: \"active\",\n                    status_label: \"Active\",\n                    status_priority: 40,\n                    subscription: {\n                      ...(prev.subscription || {}),\n                      blocked: false,\n                      status: \"active\",\n                      next_due_date: res?.next_due_date || prev.subscription?.next_due_date || null,\n                    },\n                    pending_payment: null,\n                    pending_payment_code: null,\n                    pending_payment_submitted_at: null,\n                    latest_payment: {\n                      code: pendingAction.pendingPayment?.code || res?.payment_code || prev.latest_payment?.code || prev.latest_payment_code,\n                      status: \"verified\",\n                      submitted_at: pendingAction.pendingPayment?.submitted_at || prev.latest_payment?.submitted_at || prev.latest_payment_submitted_at,\n                      verified_at: new Date().toISOString(),\n                    },\n                    latest_payment_code: pendingAction.pendingPayment?.code || res?.payment_code || prev.latest_payment_code,\n                    latest_payment_status: \"verified\",\n                    latest_payment_submitted_at: pendingAction.pendingPayment?.submitted_at || prev.latest_payment_submitted_at,\n                    latest_payment_verified_at: new Date().toISOString(),\n                  }));\n                  break;\n                }\n                case \"rejectPayment\":\n                  await AdminAPI.rejectPayment(pendingAction.tenantId, pendingAction.pendingPayment?.code || undefined);\n                  show({ variant: \"success\", title: \"Payment rejected\", description: `${pendingAction.name} informed to retry` });\n                  refresh();\n                  break;\n              }\n              handleDialogCancel();\n            } catch (err: any) {\n              show({ variant: \"destructive\", title: \"Action failed\", description: err?.message || \"Something went wrong\" });\n            } finally {\n              setProcessing(false);\n            }\n          }}\n          options={confirmOptions}\n          setOptions={(opts) => setConfirmOptions(opts)}\n        />\n      )}\n    </>\n  );\n}\n\n\nfunction InfoRow({ label, value, description, className, masked }: { label: string; value: React.ReactNode; description?: React.ReactNode; className?: string; masked?: boolean }) {\n  const [showValue, setShowValue] = useState(!masked);\n  return (\n    <div className={cn(\"space-y-1 rounded border p-3\", className)}>\n      <div className=\"flex items-center justify-between gap-2\">\n        <div className=\"text-xs uppercase tracking-wide text-muted-foreground\">{label}</div>\n        {masked && (\n          <button type=\"button\" className=\"text-xs text-blue-600 underline\" onClick={() => setShowValue((prev) => !prev)}>\n            {showValue ? \"Hide\" : \"Show\"}\n          </button>\n        )}\n      </div>\n      <div className=\"text-sm font-medium break-all\">\n        {masked && !showValue ? \"••••••••\" : value}\n      </div>\n      {description && <div className=\"text-xs text-muted-foreground\">{description}</div>}\n    </div>\n  );\n}\n\nfunction StatusPill({ children, tone = \"primary\" }: { children: React.ReactNode; tone?: \"primary\" | \"muted\" | \"outline\" | \"danger\" }) {\n  const styles =\n    tone === \"primary\"\n      ? \"bg-blue-100 text-blue-700\"\n      : tone === \"danger\"\n      ? \"bg-red-100 text-red-700\"\n      : tone === \"outline\"\n      ? \"border border-muted-foreground/40 text-muted-foreground\"\n      : \"bg-muted text-muted-foreground\";\n  return <span className={cn(\"rounded-full px-2 py-0.5 text-xs font-medium\", styles)}>{children}</span>;\n}\n\n\nfunction ConfirmDialog({\n  action,\n  onConfirm,\n  onCancel,\n  loading,\n  options,\n  setOptions,\n}: {\n  action: PendingActionState;\n  onConfirm: () => void;\n  onCancel: () => void;\n  loading: boolean;\n  options: ConfirmOptions;\n  setOptions: (opts: ConfirmOptions) => void;\n}) {\n  const copy = {\n    approve: {\n      title: \"Approve pharmacy\",\n      description: `Are you sure you want to approve ${action.name} and notify them to pay?`,\n      confirm: \"Yes, approve\",\n    },\n    reject: {\n      title: \"Reject pharmacy\",\n      description: `Reject ${action.name}'s application? They will be notified immediately.`,\n      confirm: \"Yes, reject\",\n    },\n    verify: {\n      title: \"Verify payment\",\n      description: `Confirm that ${action.name} has paid and unblock their subscription?`,\n      confirm: \"Yes, verify\",\n    },\n    rejectPayment: {\n      title: \"Reject payment\",\n      description: `Reject ${action.name}'s submitted payment and ask them to retry?`,\n      confirm: \"Yes, reject payment\",\n    },\n  } as const;\n\n  const meta = copy[action.type];\n  const paymentDetails = action.pendingPayment;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40 px-4\">\n      <div className=\"w-full max-w-md rounded-lg bg-white p-6 shadow-xl\">\n        <h2 className=\"text-lg font-semibold\">{meta.title}</h2>\n        <p className=\"mt-2 text-sm text-muted-foreground\">{meta.description}</p>\n        {paymentDetails && (action.type === \"verify\" || action.type === \"rejectPayment\") && (\n          <div className=\"mt-4 rounded border bg-muted/30 p-3 text-xs\">\n            <div className=\"font-medium text-sm mb-1\">Pending payment details</div>\n            <div className=\"flex justify-between\"><span>Code:</span> <span className=\"font-mono\">{paymentDetails.code}</span></div>\n            <div className=\"flex justify-between\"><span>Submitted:</span> <span>{formatDateTime(paymentDetails.submitted_at)}</span></div>\n          </div>\n        )}\n        {action.type === \"approve\" && (\n          <div className=\"mt-4 space-y-3 border rounded bg-muted/30 p-3\">\n            <div className=\"flex items-center justify-between gap-3\">\n              <label className=\"text-sm font-medium\">Issue temporary password</label>\n              <input\n                type=\"checkbox\"\n                checked={Boolean(options.issueTempPassword)}\n                onChange={(e) => setOptions({ ...options, issueTempPassword: e.target.checked })}\n              />\n            </div>\n            {options.issueTempPassword && (\n              <div className=\"space-y-1\">\n                <label className=\"text-xs uppercase tracking-wide text-muted-foreground\" htmlFor=\"temp-password-input\">Password</label>\n                <input\n                  id=\"temp-password-input\"\n                  type=\"text\"\n                  value={options.tempPassword ?? \"\"}\n                  onChange={(e) => setOptions({ ...options, tempPassword: e.target.value })}\n                  className=\"w-full rounded border border-border px-2 py-1 text-sm\"\n                  placeholder=\"Auto-generate if left blank\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"text-xs text-blue-600 underline\"\n                  onClick={() => setOptions({ ...options, tempPassword: generatePassword() })}\n                >\n                  Generate strong password\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        <div className=\"mt-6 flex justify-end gap-3\">\n          <Button variant=\"outline\" onClick={onCancel} disabled={loading}>\n            Cancel\n          </Button>\n          <Button onClick={onConfirm} disabled={loading}>\n            {loading ? \"Processing...\" : meta.confirm}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}