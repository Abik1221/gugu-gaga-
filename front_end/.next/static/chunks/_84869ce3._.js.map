{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,2KAAgB,MACnC,QAA+B;QAA9B,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC3B,qBACE,6LAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,KAA0C;QAA1C,EAAE,YAAY,EAAE,EAA0B,GAA1C;IACvB,qBAAO,6LAAC;QAAI,WAAW,AAAC,qCAA8C,OAAV;;;;;;AAC9D;KAFgB;AAIT,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC,GAAxD;IAChC,qBACE,6LAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,6LAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,6LAAC;wBAAW,WAAU;kCACpB,cAAA,6LAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB;MAdgB","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/owner/agent/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { AuthAPI, ChatAPI } from \"@/utils/api\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { useToast } from \"@/components/ui/toast\";\r\n\r\ntype ThreadSummary = {\r\n  id: number;\r\n  title?: string | null;\r\n};\r\n\r\ntype ChatMessageRecord = {\r\n  id: number;\r\n  role: string;\r\n  content: string;\r\n};\r\n\r\nconst ROLE_LABELS: Record<string, string> = {\r\n  user: \"You\",\r\n  owner: \"You\",\r\n  assistant: \"Assistant\",\r\n};\r\n\r\nconst ROLE_TONE: Record<string, string> = {\r\n  user: \"bg-gradient-to-r from-emerald-500 to-teal-500 text-white shadow-lg shadow-emerald-500/20\",\r\n  owner: \"bg-gradient-to-r from-emerald-500 to-teal-500 text-white shadow-lg shadow-emerald-500/20\",\r\n  assistant: \"bg-white/90 border border-white/40 text-slate-900 backdrop-blur\",\r\n};\r\n\r\nfunction normalizeThreadTitle(thread: ThreadSummary, index: number): string {\r\n  const raw = (thread.title || \"\").trim();\r\n  if (raw) return raw;\r\n  return `Conversation #${index + 1}`;\r\n}\r\n\r\nfunction parseAssistantPayload(content: string): any | null {\r\n  if (!content) return null;\r\n  try {\r\n    return JSON.parse(content);\r\n  } catch {\r\n    if (content.startsWith(\"{\") && content.includes(\"'\")) {\r\n      try {\r\n        const sanitized = content.replace(/'/g, '\"');\r\n        return JSON.parse(sanitized);\r\n      } catch {\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction AssistantContent({ payload }: { payload: any }) {\r\n  if (!payload || typeof payload !== \"object\") {\r\n    return null;\r\n  }\r\n\r\n  const rows = Array.isArray(payload.rows) ? payload.rows : null;\r\n  const hasRows = rows && rows.length > 0;\r\n\r\n  const remaining = MAX_PROMPT_LENGTH - messageDraft.length;\r\n  const isOverLimit = remaining < 0;\r\n\r\n  return (\r\n    <div className=\"space-y-3 text-sm\">\r\n      {payload.intent && (\r\n        <div className=\"flex items-center gap-2 rounded border border-emerald-100 bg-emerald-50 px-3 py-2 text-emerald-700\">\r\n          <span className=\"text-xs font-semibold uppercase tracking-wide\">Intent</span>\r\n          <span className=\"font-medium\">{String(payload.intent)}</span>\r\n        </div>\r\n      )}\r\n      {payload.error && (\r\n        <div className=\"rounded border border-red-100 bg-red-50 px-3 py-2 text-sm text-red-700\">\r\n          Unable to run the analysis at the moment. ({String(payload.error)})\r\n        </div>\r\n      )}\r\n      {payload.answer && typeof payload.answer === \"string\" && (\r\n        <p className=\"whitespace-pre-wrap leading-relaxed text-gray-800\">{payload.answer}</p>\r\n      )}\r\n      {hasRows ? (\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200 text-xs\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                {Object.keys(rows![0]).map((key) => (\r\n                  <th\r\n                    key={key}\r\n                    className=\"px-3 py-2 text-left font-semibold uppercase tracking-wide text-gray-500\"\r\n                  >\r\n                    {key}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-gray-100 bg-white\">\r\n              {rows!.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  {Object.keys(rows![0]).map((key) => (\r\n                    <td key={key} className=\"px-3 py-2 text-gray-700\">\r\n                      {row[key] === null || row[key] === undefined\r\n                        ? \"â€”\"\r\n                        : typeof row[key] === \"number\"\r\n                        ? row[key].toLocaleString(\"en-US\")\r\n                        : String(row[key])}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : null}\r\n      {!payload.error && rows && rows.length === 0 && (\r\n        <div className=\"rounded border border-gray-200 bg-gray-50 px-3 py-2 text-xs text-gray-600\">\r\n          The query completed but returned no rows.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function OwnerAgentPage() {\r\n  const { show } = useToast();\r\n\r\n  const [tenantId, setTenantId] = useState<string | null>(null);\r\n  const [threads, setThreads] = useState<ThreadSummary[]>([]);\r\n  const [threadsLoading, setThreadsLoading] = useState(false);\r\n  const [selectedThreadId, setSelectedThreadId] = useState<number | null>(null);\r\n  const [messages, setMessages] = useState<ChatMessageRecord[]>([]);\r\n  const [messagesLoading, setMessagesLoading] = useState(false);\r\n  const [messageDraft, setMessageDraft] = useState(\"\");\r\n  const [creatingThread, setCreatingThread] = useState(false);\r\n  const [newThreadTitle, setNewThreadTitle] = useState(\"\");\r\n  const [sending, setSending] = useState(false);\r\n  const [assistantThinking, setAssistantThinking] = useState(false);\r\n  const [bootstrapLoading, setBootstrapLoading] = useState(true);\r\n  const [globalError, setGlobalError] = useState<string | null>(null);\r\n\r\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const selectedThread = useMemo(\r\n    () => threads.find((thread) => thread.id === selectedThreadId) || null,\r\n    [threads, selectedThreadId],\r\n  );\r\n\r\n  const loadThreads = useCallback(\r\n    async (tid: string) => {\r\n      setThreadsLoading(true);\r\n      try {\r\n        const data = await ChatAPI.listThreads(tid);\r\n        const safe = Array.isArray(data) ? (data as ThreadSummary[]) : [];\r\n        setThreads(safe);\r\n        if (safe.length === 0) {\r\n          setSelectedThreadId(null);\r\n        }\r\n        setGlobalError(null);\r\n      } catch (error: any) {\r\n        setGlobalError(error?.message || \"Unable to load conversations\");\r\n      } finally {\r\n        setThreadsLoading(false);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const loadMessages = useCallback(\r\n    async (tid: string, threadId: number) => {\r\n      setMessagesLoading(true);\r\n      try {\r\n        const data = await ChatAPI.listMessages(tid, threadId);\r\n        const safe = Array.isArray(data) ? (data as ChatMessageRecord[]) : [];\r\n        setMessages(safe);\r\n      } catch (error: any) {\r\n        show({\r\n          variant: \"destructive\",\r\n          title: \"Failed to load thread\",\r\n          description: error?.message || \"Unable to fetch messages.\",\r\n        });\r\n      } finally {\r\n        setMessagesLoading(false);\r\n      }\r\n    },\r\n    [show],\r\n  );\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n    async function bootstrap() {\r\n      setBootstrapLoading(true);\r\n      try {\r\n        const profile = await AuthAPI.me();\r\n        if (!active) return;\r\n        const tid = profile?.tenant_id || null;\r\n        if (!tid) {\r\n          setGlobalError(\"You do not have an active tenant to chat against.\");\r\n          return;\r\n        }\r\n        setTenantId(tid);\r\n        await loadThreads(tid);\r\n      } catch (error: any) {\r\n        if (!active) return;\r\n        setGlobalError(error?.message || \"Unable to load owner profile.\");\r\n      } finally {\r\n        if (active) setBootstrapLoading(false);\r\n      }\r\n    }\r\n    bootstrap();\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loadThreads]);\r\n\r\n  useEffect(() => {\r\n    if (selectedThreadId && !threads.some((thread) => thread.id === selectedThreadId)) {\r\n      setSelectedThreadId(threads[0]?.id ?? null);\r\n    } else if (!selectedThreadId && threads.length > 0) {\r\n      setSelectedThreadId(threads[0].id);\r\n    }\r\n  }, [threads, selectedThreadId]);\r\n\r\n  useEffect(() => {\r\n    if (!tenantId || !selectedThreadId) {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n    loadMessages(tenantId, selectedThreadId);\r\n  }, [tenantId, selectedThreadId, loadMessages]);\r\n\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages, assistantThinking]);\r\n\r\n  const handleCreateThread = async () => {\r\n    if (!tenantId) return;\r\n    const title = newThreadTitle.trim();\r\n    setCreatingThread(true);\r\n    try {\r\n      const created = await ChatAPI.createThread(tenantId, title || \"Owner conversation\");\r\n      setNewThreadTitle(\"\");\r\n      await loadThreads(tenantId);\r\n      if (created?.id) {\r\n        setSelectedThreadId(created.id);\r\n      }\r\n      setMessages([]);\r\n    } catch (error: any) {\r\n      show({\r\n        variant: \"destructive\",\r\n        title: \"Could not create thread\",\r\n        description: error?.message || \"Please try again.\",\r\n      });\r\n    } finally {\r\n      setCreatingThread(false);\r\n    }\r\n  };\r\n\r\n  const MAX_PROMPT_LENGTH = 300;\r\n  const remaining = MAX_PROMPT_LENGTH - messageDraft.length;\r\n  const isOverLimit = remaining < 0;\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!tenantId || !selectedThreadId) return;\r\n    const prompt = messageDraft.trim();\r\n    if (!prompt) return;\r\n    if (prompt.length > MAX_PROMPT_LENGTH) {\r\n      show({\r\n        variant: \"destructive\",\r\n        title: \"Prompt too long\",\r\n        description: `Limit is ${MAX_PROMPT_LENGTH} characters. Please shorten your question.`,\r\n      });\r\n      return;\r\n    }\r\n    setMessageDraft(\"\");\r\n    setSending(true);\r\n    setAssistantThinking(true);\r\n    try {\r\n      await ChatAPI.sendMessage(tenantId, selectedThreadId, prompt);\r\n      await loadMessages(tenantId, selectedThreadId);\r\n      await loadThreads(tenantId);\r\n    } catch (error: any) {\r\n      show({\r\n        variant: \"destructive\",\r\n        title: \"Message failed\",\r\n        description: error?.message || \"Unable to send message.\",\r\n      });\r\n      setMessageDraft(prompt);\r\n    } finally {\r\n      setSending(false);\r\n      setAssistantThinking(false);\r\n    }\r\n  };\r\n\r\n  const handleComposerKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (event.key === \"Enter\" && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const isLoadingThreads = threadsLoading || bootstrapLoading;\r\n  const isLoadingMessages = messagesLoading || bootstrapLoading;\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <div className=\"flex flex-col gap-3 rounded-3xl border border-white/15 bg-white/10 p-6 shadow-[0_28px_120px_-60px_rgba(16,185,129,0.75)] backdrop-blur-xl\">\r\n        <h1 className=\"text-3xl font-semibold leading-tight text-white\">Zemen AI Assistant</h1>\r\n        <p className=\"max-w-3xl text-sm leading-relaxed text-emerald-100/80\">\r\n          Ask questions about sales, inventory, and staff performance. The assistant runs read-only\r\n          analytics on your tenant data and summarises the results for quick insight.\r\n        </p>\r\n      </div>\r\n\r\n      {globalError && (\r\n        <div className=\"rounded border border-red-200 bg-red-50 p-3 text-sm text-red-700\">\r\n          {globalError}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid gap-6 lg:grid-cols-[320px,1fr]\">\r\n        <div className=\"flex flex-col gap-5 rounded-3xl border border-white/15 bg-white/10 p-5 shadow-[0_24px_90px_-50px_rgba(14,165,233,0.45)] backdrop-blur-xl\">\r\n          <div className=\"flex items-center justify-between text-emerald-100/80\">\r\n            <h2 className=\"text-sm font-semibold uppercase tracking-[0.3em] text-emerald-100\">Conversations</h2>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => tenantId && loadThreads(tenantId)}\r\n              disabled={!tenantId || isLoadingThreads}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            <Input\r\n              placeholder=\"Conversation title\"\r\n              value={newThreadTitle}\r\n              onChange={(event) => setNewThreadTitle(event.target.value)}\r\n            />\r\n            <Button onClick={handleCreateThread} disabled={!tenantId || creatingThread}>\r\n              {creatingThread ? \"Creatingâ€¦\" : \"Start new conversation\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"h-px w-full bg-gray-100\" />\r\n          {isLoadingThreads ? (\r\n            <div className=\"space-y-2\">\r\n              {Array.from({ length: 5 }).map((_, index) => (\r\n                <Skeleton key={index} className=\"h-12 w-full\" />\r\n              ))}\r\n            </div>\r\n          ) : threads.length === 0 ? (\r\n            <div className=\"rounded-2xl border border-white/15 bg-white/5 p-4 text-center text-sm text-emerald-100/80\">\r\n              No conversations yet. Start a new one to ask the assistant anything about your pharmacy.\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-2\">\r\n              {threads.map((thread, index) => {\r\n                const title = normalizeThreadTitle(thread, index);\r\n                const isActive = thread.id === selectedThreadId;\r\n                return (\r\n                  <button\r\n                    key={thread.id}\r\n                    type=\"button\"\r\n                    onClick={() => setSelectedThreadId(thread.id)}\r\n                    className={`group w-full rounded-2xl border px-3 py-2 text-left text-sm font-medium transition ${\r\n                      isActive\r\n                        ? \"border-transparent bg-gradient-to-r from-emerald-500/25 via-teal-500/20 to-sky-500/25 text-white shadow-lg\"\r\n                        : \"border-white/15 bg-white/5 text-emerald-100/80 hover:border-emerald-200/50 hover:bg-white/10\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"font-semibold text-white/90\">{title}</div>\r\n                    <div className=\"text-xs uppercase tracking-[0.3em] text-emerald-100/60\">Thread #{thread.id}</div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-5 rounded-3xl border border-white/15 bg-white/10 p-5 shadow-[0_28px_110px_-60px_rgba(16,185,129,0.7)] backdrop-blur-xl\">\r\n          <div className=\"flex flex-col gap-1\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-sm font-semibold uppercase tracking-[0.3em] text-emerald-100\">\r\n                {selectedThread ? normalizeThreadTitle(selectedThread, 0) : \"Conversation\"}\r\n              </h2>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline\"\r\n                  onClick={() => tenantId && selectedThreadId && loadMessages(tenantId, selectedThreadId)}\r\n                  disabled={!tenantId || !selectedThreadId || isLoadingMessages}\r\n                >\r\n                  Refresh\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-xs text-emerald-100/70\">\r\n              The assistant uses safe, read-only queries. Ask for sales summaries, inventory gaps, or staff\r\n              performance insights.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex-1 overflow-hidden rounded-3xl border border-white/15 bg-white/5\">\r\n            {isLoadingMessages ? (\r\n              <div className=\"p-4 space-y-3\">\r\n                {Array.from({ length: 5 }).map((_, index) => (\r\n                  <Skeleton key={index} className=\"h-16 w-full\" />\r\n                ))}\r\n              </div>\r\n            ) : !selectedThreadId ? (\r\n              <div className=\"flex h-full items-center justify-center p-6 text-sm text-emerald-100/70\">\r\n                Select a conversation to view messages.\r\n              </div>\r\n            ) : messages.length === 0 ? (\r\n              <div className=\"flex h-full items-center justify-center p-6 text-sm text-emerald-100/70\">\r\n                Ask your first question to begin.\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex h-[55vh] flex-col gap-3 overflow-y-auto p-4 pr-6\">\r\n                {messages.map((message) => {\r\n                  const roleClass = ROLE_TONE[message.role] || ROLE_TONE.assistant;\r\n                  const label = ROLE_LABELS[message.role] || message.role;\r\n                  const assistantPayload =\r\n                    message.role === \"assistant\" ? parseAssistantPayload(message.content) : null;\r\n                  return (\r\n                    <div\r\n                      key={message.id}\r\n                      className={`flex ${\r\n                        message.role === \"assistant\" ? \"justify-start\" : \"justify-end\"\r\n                      }`}\r\n                    >\r\n                      <div\r\n                        className={`max-w-xl rounded-2xl px-3 py-2 text-sm shadow ${roleClass}`}\r\n                      >\r\n                        <div className=\"mb-1 text-xs font-semibold uppercase tracking-wide opacity-70\">\r\n                          {label}\r\n                        </div>\r\n                        {assistantPayload ? (\r\n                          <AssistantContent payload={assistantPayload} />\r\n                        ) : (\r\n                          <p className=\"whitespace-pre-wrap leading-relaxed\">\r\n                            {message.content}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {assistantThinking && (\r\n                  <div className=\"flex justify-start\">\r\n                    <div className=\"max-w-xs rounded-2xl border border-white/20 bg-white/80 px-3 py-2 text-sm text-emerald-800 shadow\">\r\n                      Assistant is analysing your dataâ€¦\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <form\r\n            className=\"flex flex-col gap-3 rounded-3xl border border-white/15 bg-white/10 p-4 backdrop-blur-xl\"\r\n          >\r\n            <div className=\"flex items-center justify-between text-xs font-semibold uppercase tracking-[0.3em] text-emerald-100/80\">\r\n              <span>Ask a question</span>\r\n              <span className={`tracking-normal ${isOverLimit ? \"text-red-300\" : \"text-emerald-200\"}`}>\r\n                {remaining >= 0 ? `${remaining} characters left` : `${Math.abs(remaining)} over limit`}\r\n              </span>\r\n            </div>\r\n            <textarea\r\n              className=\"min-h-[120px] w-full resize-y rounded-2xl border border-white/15 bg-white/10 p-3 text-sm text-emerald-100/90 shadow-inner backdrop-blur focus:border-emerald-300/60 focus:outline-none focus:ring-2 focus:ring-emerald-200/40\"\r\n              placeholder=\"e.g. Show me the top selling medicines this week\"\r\n              value={messageDraft}\r\n              maxLength={MAX_PROMPT_LENGTH + 100}\r\n              onChange={(event) => setMessageDraft(event.target.value)}\r\n              onKeyDown={handleComposerKeyDown}\r\n            />\r\n            <Button onClick={handleSendMessage} disabled={!tenantId || !selectedThreadId || sending || isOverLimit}>\r\n              {sending ? \"Sendingâ€¦\" : \"Send\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}