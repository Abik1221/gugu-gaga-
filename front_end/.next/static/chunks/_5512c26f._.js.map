{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,2KAAgB,MACnC,QAA+B;QAA9B,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC3B,qBACE,6LAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/utils/api.ts"],"sourcesContent":["export const API_BASE =\r\n  process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000\";\r\nexport const TENANT_HEADER =\r\n  process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\nconst API_BASE_NORMALIZED = API_BASE.replace(/\\/+$/, \"\");\r\nlet API_BASE_PATH = \"\";\r\ntry {\r\n  const parsed = new URL(API_BASE_NORMALIZED);\r\n  API_BASE_PATH = parsed.pathname.replace(/^\\/+/, \"\").replace(/\\/+$/, \"\");\r\n} catch {\r\n  API_BASE_PATH = \"\";\r\n}\r\n\r\nfunction buildHeaders(\r\n  initHeaders?: HeadersInit,\r\n  tenantId?: string\r\n): HeadersInit {\r\n  const headers: Record<string, string> = {\r\n    ...(initHeaders as Record<string, string>),\r\n  };\r\n  if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n  return headers;\r\n}\r\n\r\nfunction resolveApiUrl(path: string): string {\r\n  if (/^https?:\\/\\//i.test(path)) {\r\n    return path;\r\n  }\r\n\r\n  if (path.startsWith(\"?\") || path.startsWith(\"#\")) {\r\n    return `${API_BASE_NORMALIZED}${path}`;\r\n  }\r\n\r\n  const normalizedPath = path.replace(/^\\/+/, \"\");\r\n  let relativePath = normalizedPath;\r\n\r\n  if (API_BASE_PATH) {\r\n    const prefix = `${API_BASE_PATH}/`;\r\n    if (relativePath.startsWith(prefix)) {\r\n      relativePath = relativePath.slice(prefix.length);\r\n    } else if (relativePath === API_BASE_PATH) {\r\n      relativePath = \"\";\r\n    }\r\n  }\r\n\r\n  if (!relativePath) {\r\n    return API_BASE_NORMALIZED;\r\n  }\r\n\r\n  return `${API_BASE_NORMALIZED}/${relativePath}`;\r\n}\r\n\r\nexport async function postForm<T = any>(\r\n  path: string,\r\n  data: Record<string, string>,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const body = new URLSearchParams(data);\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      tenantId\r\n    ),\r\n    body,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    let parsed: any = null;\r\n    try {\r\n      parsed = await res.json();\r\n    } catch {\r\n      parsed = await res.text().catch(() => null);\r\n    }\r\n\r\n    let msg = \"\";\r\n    if (!parsed) msg = `Request failed with ${res.status}`;\r\n    else if (typeof parsed === \"string\") msg = parsed;\r\n    else if (Array.isArray(parsed)) msg = parsed.join(\", \");\r\n    else if (parsed?.detail) msg = parsed.detail;\r\n    else if (parsed?.message) msg = parsed.message;\r\n    else if (parsed?.error) msg = parsed.error;\r\n    else if (parsed?.errors) {\r\n      msg = Object.keys(parsed.errors)\r\n        .map(\r\n          (k) =>\r\n            `${k}: ${\r\n              Array.isArray(parsed.errors[k])\r\n                ? parsed.errors[k].join(\", \")\r\n                : parsed.errors[k]\r\n            }`\r\n        )\r\n        .join(\" | \");\r\n    } else msg = JSON.stringify(parsed);\r\n\r\n    const err: any = new Error(msg || `Request failed with ${res.status}`);\r\n    err.status = res.status;\r\n    err.body = parsed;\r\n    console.error(\"[postForm] failed\", { path, status: res.status, parsed });\r\n    throw err;\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postJSON<T = any>(\r\n  path: string,\r\n  body: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      const text = await res.text().catch(() => \"\");\r\n      throw new Error(text || `Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function putAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"PUT\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(bodyData),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      const text = await res.text().catch(() => \"\");\r\n      throw new Error(text || `Request failed with ${res.status}`);\r\n    }\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postMultipart<T = any>(\r\n  path: string,\r\n  formData: FormData,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(undefined, tenantId),\r\n    body: formData,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      throw new Error(`Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport function getAccessToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"access_token\");\r\n}\r\n\r\nfunction getTenantId(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"tenant_id\");\r\n}\r\n\r\nfunction getRefreshToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"refresh_token\");\r\n}\r\n\r\nasync function refreshTokens(): Promise<boolean> {\r\n  const rt = getRefreshToken();\r\n  if (!rt) return false;\r\n  const BASE = \"http://localhost:8000\";\r\n  const url = `${BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n    rt\r\n  )}`;\r\n  const res = await fetch(url, { method: \"POST\" });\r\n  if (!res.ok) return false;\r\n  try {\r\n    const data = (await res.json()) as {\r\n      access_token: string;\r\n      refresh_token: string;\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    }\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function authFetch(\r\n  path: string,\r\n  init?: RequestInit,\r\n  retry = true,\r\n  tenantId?: string\r\n): Promise<Response> {\r\n  const token = getAccessToken();\r\n  const activeTenantId = tenantId ?? getTenantId() ?? undefined;\r\n  const headers: HeadersInit = buildHeaders(\r\n    {\r\n      ...(init?.headers || {}),\r\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    },\r\n    activeTenantId\r\n  );\r\n  let res = await fetch(resolveApiUrl(path), { ...(init || {}), headers });\r\n\r\n  if (res.status === 401 && retry) {\r\n    const ok = await refreshTokens();\r\n    if (ok) {\r\n      const newToken = getAccessToken();\r\n      const retryTenantId = tenantId ?? getTenantId() ?? undefined;\r\n      const retryHeaders: HeadersInit = buildHeaders(\r\n        {\r\n          ...(init?.headers || {}),\r\n          ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n        },\r\n        retryTenantId\r\n      );\r\n      res = await fetch(resolveApiUrl(path), {\r\n        ...(init || {}),\r\n        headers: retryHeaders,\r\n      });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport async function getAuthJSON<T = any>(\r\n  path: string,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(path, undefined, true, tenantId);\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\n// ----------------- AuthAPI -----------------\r\nexport const AuthAPI = {\r\n  registerAffiliate: (body: any) => postJSON(\"/api/v1/auth/register/affiliate\", body),\r\n  registerPharmacy: (body: any) => postJSON(\"/api/v1/auth/register/pharmacy\", body),\r\n\r\n  registerVerify: async (email: string, code: string) => {\r\n    try {\r\n      return await postForm(\"/api/v1/auth/register/verify\", { email, code });\r\n    } catch (err: any) {\r\n      if (err?.status === 422) {\r\n        console.warn(\"[AuthAPI.registerVerify] 422, retrying with JSON\", {\r\n          body: err.body,\r\n        });\r\n        try {\r\n          return await postJSON(\"/api/v1/auth/register/verify\", { email, code });\r\n        } catch (err2: any) {\r\n          const e: any = new Error(\r\n            err2?.message || err?.message || \"Verification failed\"\r\n          );\r\n          e.original = err;\r\n          e.retry = err2;\r\n          throw e;\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  verifyRegistration: (email: string, code: string) =>\r\n    postForm(\"/api/v1/auth/register/verify\", { email, code }),\r\n  login: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\"/api/v1/auth/login\", { username: email, password }, tenantId),\r\n  loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\r\n      \"/api/v1/auth/login/request-code\",\r\n      { username: email, password },\r\n      tenantId\r\n    ),\r\n  loginVerify: (email: string, code: string, tenantId?: string) =>\r\n    postJSON(\"/api/v1/auth/login/verify\", { email, code }, tenantId),\r\n  me: () => getAuthJSON(\"/api/v1/auth/me\"),\r\n};\r\n\r\n// ----------------- AffiliateAPI -----------------\r\nexport const AffiliateAPI = {\r\n  getLinks: () => getAuthJSON(\"/api/v1/affiliate/register-link\"),\r\n  createLink: () => getAuthJSON(\"/api/v1/affiliate/register-link?create_new=true\"),\r\n  deactivate: (token: string) =>\r\n    postAuthJSON(\r\n      `/api/v1/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n      {}\r\n    ),\r\n  rotate: (token: string) =>\r\n    postAuthJSON(`/api/v1/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n  dashboard: () => getAuthJSON(\"/api/v1/affiliate/dashboard\"),\r\n  payouts: (status?: string) =>\r\n    getAuthJSON(\r\n      `/api/v1/affiliate/payouts${\r\n        status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n      }`\r\n    ),\r\n  requestPayout: (month?: string, percent = 5) =>\r\n    postAuthJSON(\"/api/v1/affiliate/payouts/request\", { month, percent }),\r\n  updateProfile: (body: any) => postAuthJSON(\"/api/v1/affiliate/profile\", body),\r\n};\r\n\r\n// ----------------- AdminAPI -----------------\r\nexport const AdminAPI = {\r\n  pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/api/v1/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/api/v1/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  approvePharmacy: (tenantId: string, applicationId: number, body?: any) =>\r\n    postAuthJSON(\r\n      `/api/v1/admin/pharmacies/${applicationId}/approve`,\r\n      body || {},\r\n      tenantId\r\n    ),\r\n  rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n    postAuthJSON(`/api/v1/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n  verifyPayment: (tenantId: string, code?: string | null) =>\r\n    postAuthJSON(`/api/v1/admin/payments/verify`, { code: code || null }, tenantId),\r\n  rejectPayment: (tenantId: string, code?: string | null) =>\r\n    postAuthJSON(`/api/v1/admin/payments/reject`, { code: code || null }, tenantId),\r\n  analyticsOverview: (days = 30) =>\r\n    getAuthJSON(`/api/v1/admin/analytics/overview?days=${days}`),\r\n  approveAffiliate: (userId: number) =>\r\n    postAuthJSON(`/api/v1/admin/affiliates/${userId}/approve`, {}),\r\n  rejectAffiliate: (userId: number) =>\r\n    postAuthJSON(`/api/v1/admin/affiliates/${userId}/reject`, {}),\r\n};\r\n\r\n// ----------------- StaffAPI -----------------\r\nexport const StaffAPI = {\r\n  createCashier: (tenantId: string, body: any) =>\r\n    postAuthJSON(\"/api/v1/staff\", body, tenantId),\r\n  list: (tenantId: string) => getAuthJSON(\"/api/v1/staff\", tenantId),\r\n  update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n    authFetch(\r\n      `/api/v1/staff/${userId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      },\r\n      true,\r\n      tenantId\r\n    ).then(async (res) => {\r\n      if (!res.ok) throw new Error(await res.text());\r\n      return res.json();\r\n    }),\r\n  remove: (tenantId: string, userId: number) =>\r\n    authFetch(`/api/v1/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n      async (res) => {\r\n        if (!res.ok) throw new Error(await res.text());\r\n        return res.json();\r\n      }\r\n    ),\r\n};\r\n\r\n// ----------------- BillingAPI -----------------\r\nexport const BillingAPI = {\r\n  submitPaymentCode: (tenantId: string, code: string) =>\r\n    postAuthJSON(\"/api/v1/owner/billing/payment-code\", { code }, tenantId),\r\n};\r\n\r\n// ----------------- UploadAPI -----------------\r\nexport const UploadAPI = {\r\n  uploadKyc: async (file: File) => {\r\n    const fd = new FormData();\r\n    fd.append(\"file\", file);\r\n    return postMultipart(\"/uploads/kyc\", fd);\r\n  },\r\n};\r\n\r\n// ----------------- KYCAPI -----------------\r\nexport const KYCAPI = {\r\n  status: (tenantId: string) => getAuthJSON(\"/api/v1/owner/kyc/status\", tenantId),\r\n  update: (tenantId: string, body: any) =>\r\n    putAuthJSON(\"/api/v1/owner/kyc/status\", body, tenantId),\r\n};\r\n\r\n// ----------------- PharmaciesAPI -----------------\r\nexport const PharmaciesAPI = {\r\n  list: (page = 1, pageSize = 20, q?: string) =>\r\n    getAuthJSON(\r\n      `/api/v1/pharmacies?page=${page}&page_size=${pageSize}${\r\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n      }`\r\n    ),\r\n  get: (id: number) => getAuthJSON(`/api/v1/pharmacies/${id}`),\r\n  update: (id: number, body: { name?: string; address?: string }) =>\r\n    authFetch(`/api/v1/pharmacies/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    }).then(async (res) => {\r\n      if (!res.ok) throw new Error(await res.text());\r\n      return res.json();\r\n    }),\r\n};\r\n\r\n// ----------------- ChatAPI -----------------\r\nexport const ChatAPI = {\r\n  listThreads: (tenantId: string) => getAuthJSON(`/api/v1/chat/threads`, tenantId),\r\n  createThread: (tenantId: string, title: string) =>\r\n    postAuthJSON(`/api/v1/chat/threads`, { title }, tenantId),\r\n  listMessages: (tenantId: string, threadId: number) =>\r\n    getAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, tenantId),\r\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n    postAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n  usage: (tenantId: string, days = 30) =>\r\n    getAuthJSON(`/api/v1/chat/usage?days=${days}`, tenantId),\r\n};\r\n\r\nexport type OwnerAnalyticsResponse = {\r\n  totals: {\r\n    total_revenue: number;\r\n    average_ticket: number;\r\n    units_sold: number;\r\n    sale_count: number;\r\n    active_cashiers: number;\r\n  };\r\n  deltas: {\r\n    revenue_vs_last_period: number;\r\n    avg_ticket_vs_last_period: number;\r\n    units_vs_last_period: number;\r\n  };\r\n  revenue_trend: { period: string; revenue: number }[];\r\n  top_products: { name: string; revenue: number; quantity: number }[];\r\n  inventory_health: { label: string; count: number }[];\r\n  recent_payments: {\r\n    id: number;\r\n    status: string;\r\n    status_label: string;\r\n    code?: string | null;\r\n    created_at: string;\r\n    created_at_formatted: string;\r\n  }[];\r\n};\r\n\r\nexport const OwnerAnalyticsAPI = {\r\n  overview: (tenantId: string) =>\r\n    getAuthJSON<OwnerAnalyticsResponse>(\"/api/v1/owner/analytics/overview\", tenantId),\r\n};\r\n\r\n// Other API objects (AffiliateAPI, AdminAPI, etc.) remain unchanged\r\n\r\n// export const API_BASE =\r\n//   process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\r\n// export const TENANT_HEADER =\r\n//   process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\n// function buildHeaders(\r\n//   initHeaders?: HeadersInit,\r\n//   tenantId?: string\r\n// ): HeadersInit {\r\n//   const headers: Record<string, string> = {\r\n//     ...(initHeaders as Record<string, string>),\r\n//   };\r\n//   if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n//   return headers;\r\n// }\r\n\r\n// export async function putAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postForm<T = any>(\r\n//   path: string,\r\n//   data: Record<string, string>,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const body = new URLSearchParams(data);\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(\r\n//       {\r\n//         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n//       },\r\n//       tenantId\r\n//     ),\r\n//     body,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postJSON<T = any>(\r\n//   path: string,\r\n//   body: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n//     body: JSON.stringify(body),\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postMultipart<T = any>(\r\n//   path: string,\r\n//   formData: FormData,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(undefined, tenantId),\r\n//     body: formData,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       let message = `Request failed with ${res.status}`;\r\n//       throw new Error(message);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export function getAccessToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"access_token\");\r\n// }\r\n\r\n// function getRefreshToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"refresh_token\");\r\n// }\r\n\r\n// async function refreshTokens(): Promise<boolean> {\r\n//   const rt = getRefreshToken();\r\n//   if (!rt) return false;\r\n//   const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n//     rt\r\n//   )}`;\r\n//   const res = await fetch(url, { method: \"POST\" });\r\n//   if (!res.ok) return false;\r\n//   try {\r\n//     const data = (await res.json()) as {\r\n//       access_token: string;\r\n//       refresh_token: string;\r\n//       token_type: string;\r\n//       expires_in: number;\r\n//     };\r\n//     if (typeof window !== \"undefined\") {\r\n//       localStorage.setItem(\"access_token\", data.access_token);\r\n//       localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n//     }\r\n//     return true;\r\n//   } catch {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// async function authFetch(\r\n//   path: string,\r\n//   init?: RequestInit,\r\n//   retry = true,\r\n//   tenantId?: string\r\n// ): Promise<Response> {\r\n//   const token = getAccessToken();\r\n//   const headers: HeadersInit = buildHeaders(\r\n//     {\r\n//       ...(init?.headers || {}),\r\n//       ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n//     },\r\n//     tenantId\r\n//   );\r\n//   const res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\r\n//   if (res.status === 401 && retry) {\r\n//     const ok = await refreshTokens();\r\n//     if (ok) {\r\n//       const newToken = getAccessToken();\r\n//       const retryHeaders: HeadersInit = buildHeaders(\r\n//         {\r\n//           ...(init?.headers || {}),\r\n//           ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n//         },\r\n//         tenantId\r\n//       );\r\n//       return fetch(`${API_BASE}${path}`, {\r\n//         ...(init || {}),\r\n//         headers: retryHeaders,\r\n//       });\r\n//     }\r\n//   }\r\n//   return res;\r\n// }\r\n\r\n// export async function getAuthJSON<T = any>(\r\n//   path: string,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(path, undefined, true, tenantId);\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// // Convenience wrappers for key flows\r\n// export const AuthAPI = {\r\n//   registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\r\n//   registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\r\n//   registerVerify: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   verifyRegistration: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   login: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\"/auth/login\", { username: email, password }, tenantId),\r\n//   loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\r\n//       \"/auth/login/request-code\",\r\n//       { username: email, password },\r\n//       tenantId\r\n//     ),\r\n//   loginVerify: (email: string, code: string, tenantId?: string) =>\r\n//     postJSON(\"/auth/login/verify\", { email, code }, tenantId),\r\n//   me: () => getAuthJSON(\"/auth/me\"),\r\n// };\r\n\r\n// export const AffiliateAPI = {\r\n//   getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\r\n//   createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\r\n//   deactivate: (token: string) =>\r\n//     postAuthJSON(\r\n//       `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n//       {}\r\n//     ),\r\n//   rotate: (token: string) =>\r\n//     postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n//   dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\r\n//   payouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/affiliate/payouts${\r\n//         status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   requestPayout: (month?: string, percent = 5) =>\r\n//     postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\r\n//   updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\r\n// };\r\n\r\n// export const AdminAPI = {\r\n//   pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   approvePharmacy: (\r\n//     tenantId: string,\r\n//     applicationId: number,\r\n//     body?: { issue_temp_password?: boolean; temp_password?: string }\r\n//   ) =>\r\n//     postAuthJSON(\r\n//       `/admin/pharmacies/${applicationId}/approve`,\r\n//       body || {},\r\n//       tenantId\r\n//     ),\r\n//   rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n//     postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n//   verifyPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\r\n//   rejectPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\r\n//   analyticsOverview: (days = 30) =>\r\n//     getAuthJSON(`/admin/analytics/overview?days=${days}`),\r\n//   downloadPharmacyLicense: async (applicationId: number) => {\r\n//     const res = await authFetch(\r\n//       `/admin/pharmacies/${applicationId}/license`,\r\n//       { method: \"GET\" },\r\n//       true\r\n//     );\r\n//     if (!res.ok) {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `HTTP ${res.status}`);\r\n//     }\r\n//     const blob = await res.blob();\r\n//     let filename = `license-${applicationId}`;\r\n//     const disposition = res.headers.get(\"Content-Disposition\") || \"\";\r\n//     const match = disposition.match(\r\n//       /filename\\*=UTF-8''([^;]+)|filename=\"?([^\";]+)\"?/i\r\n//     );\r\n//     const extracted = match?.[1] || match?.[2];\r\n//     if (extracted) {\r\n//       try {\r\n//         filename = decodeURIComponent(extracted);\r\n//       } catch {\r\n//         filename = extracted;\r\n//       }\r\n//     }\r\n//     const url = window.URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = filename;\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//     document.body.removeChild(link);\r\n//     window.URL.revokeObjectURL(url);\r\n//   },\r\n//   approveAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\r\n//   rejectAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\r\n//   listAffiliatePayouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliate/payouts${\r\n//         status ? `?status=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   markPayoutPaid: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/mark-paid`, {}),\r\n//   approvePayout: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/approve`, {}),\r\n//   usage: (days = 30) => getAuthJSON(`/admin/usage?days=${days}`),\r\n//   audit: (params?: { tenant_id?: string; action?: string; limit?: number }) =>\r\n//     getAuthJSON(\r\n//       `/admin/audit${(() => {\r\n//         const qs = new URLSearchParams();\r\n//         if (params?.tenant_id) qs.set(\"tenant_id\", params.tenant_id);\r\n//         if (params?.action) qs.set(\"action\", params.action);\r\n//         if (params?.limit) qs.set(\"limit\", String(params.limit));\r\n//         const s = qs.toString();\r\n//         return s ? `?${s}` : \"\";\r\n//       })()}`\r\n//     ),\r\n// };\r\n\r\n// export const StaffAPI = {\r\n//   createCashier: (tenantId: string, body: any) =>\r\n//     postAuthJSON(\"/staff\", body, tenantId),\r\n//   list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\r\n//   update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n//     authFetch(\r\n//       `/staff/${userId}`,\r\n//       {\r\n//         method: \"PATCH\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(body),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     ).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n//   remove: (tenantId: string, userId: number) =>\r\n//     authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n//       async (res) => {\r\n//         if (!res.ok) {\r\n//           const t = await res.text();\r\n//           throw new Error(t || `HTTP ${res.status}`);\r\n//         }\r\n//         return res.json();\r\n//       }\r\n//     ),\r\n// };\r\n\r\n// export const BillingAPI = {\r\n//   submitPaymentCode: (tenantId: string, code: string) =>\r\n//     postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\r\n// };\r\n\r\n// export const UploadAPI = {\r\n//   uploadKyc: async (\r\n//     file: File\r\n//   ): Promise<{ path: string; size: number; filename: string }> => {\r\n//     const fd = new FormData();\r\n//     fd.append(\"file\", file);\r\n//     return await postMultipart(`/uploads/kyc`, fd);\r\n//   },\r\n// };\r\n\r\n// export const KYCAPI = {\r\n//   status: (tenantId: string) => getAuthJSON(`/owner/kyc/status`, tenantId),\r\n//   update: (tenantId: string, body: any) =>\r\n//     putAuthJSON(`/owner/kyc/status`, body, tenantId),\r\n// };\r\n\r\n// export const PharmaciesAPI = {\r\n//   list: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\r\n//   update: (id: number, body: { name?: string; address?: string }) =>\r\n//     authFetch(`/pharmacies/${id}`, {\r\n//       method: \"PATCH\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(body),\r\n//     }).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n// };\r\n\r\n// export const ChatAPI = {\r\n//   listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\r\n//   createThread: (tenantId: string, title: string) =>\r\n//     postAuthJSON(`/chat/threads`, { title }, tenantId),\r\n//   listMessages: (tenantId: string, threadId: number) =>\r\n//     getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\r\n//   sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n//     postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n//   usage: (tenantId: string, days = 30) =>\r\n//     getAuthJSON(`/chat/usage?days=${days}`, tenantId),\r\n//   sendStream: async (\r\n//     tenantId: string,\r\n//     threadId: number,\r\n//     prompt: string,\r\n//     onEvent: (evt: { event: string; data?: any }) => void\r\n//   ): Promise<void> => {\r\n//     const res = await authFetch(\r\n//       `/chat/threads/${threadId}/messages/stream`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ prompt }),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     );\r\n//     if (!res.ok || !res.body) {\r\n//       const t = await res.text().catch(() => \"\");\r\n//       throw new Error(t || `HTTP ${res.status}`);\r\n//     }\r\n//     const reader = res.body.getReader();\r\n//     const decoder = new TextDecoder();\r\n//     let buf = \"\";\r\n//     while (true) {\r\n//       const { done, value } = await reader.read();\r\n//       if (done) break;\r\n//       buf += decoder.decode(value, { stream: true });\r\n//       let idx;\r\n//       while ((idx = buf.indexOf(\"\\n\\n\")) !== -1) {\r\n//         const chunk = buf.slice(0, idx).trim();\r\n//         buf = buf.slice(idx + 2);\r\n//         if (chunk.startsWith(\"data:\")) {\r\n//           try {\r\n//             const jsonStr = chunk.slice(5).trim();\r\n//             const obj = JSON.parse(jsonStr);\r\n//             onEvent(obj);\r\n//           } catch {}\r\n//         }\r\n//       }\r\n//     }\r\n//   },\r\n// };\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 946, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28auth%29/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useToast } from \"@/components/ui/toast\";\r\nimport { AuthAPI, UploadAPI } from \"@/utils/api\";\r\n\r\ntype Tab = \"pharmacy\" | \"affiliate\";\r\n\r\nexport default function RegisterPage() {\r\n  const router = useRouter();\r\n  const qp = useSearchParams();\r\n  const { show } = useToast();\r\n  const tabParam = qp.get(\"tab\") as Tab | null;\r\n  const [tab, setTab] = useState<Tab>(\r\n    tabParam === \"affiliate\" ? \"affiliate\" : \"pharmacy\"\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const affiliateToken = qp.get(\"token\") || qp.get(\"ref\") || undefined;\r\n\r\n  // Pharmacy form\r\n  const [pharmacyName, setPharmacyName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [ownerEmail, setOwnerEmail] = useState(\"\");\r\n  const [ownerPhone, setOwnerPhone] = useState(\"\");\r\n  const [ownerPassword, setOwnerPassword] = useState(\"\");\r\n  const [idNumber, setIdNumber] = useState(\"\");\r\n  const [licenseNumber, setLicenseNumber] = useState(\"\");\r\n  const [kycNotes, setKycNotes] = useState(\"\");\r\n  const [kycFile, setKycFile] = useState<File | null>(null);\r\n  const [kycUploadPath, setKycUploadPath] = useState<string | null>(null);\r\n\r\n  // Affiliate form\r\n  const [affEmail, setAffEmail] = useState(\"\");\r\n  const [affPassword, setAffPassword] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [bankName, setBankName] = useState(\"\");\r\n  const [bankAccountName, setBankAccountName] = useState(\"\");\r\n  const [bankAccountNumber, setBankAccountNumber] = useState(\"\");\r\n  const [iban, setIban] = useState(\"\");\r\n\r\n  const fieldErrors = useMemo(() => ({} as Record<string, string>), []);\r\n\r\n  async function submitPharmacy(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(null);\r\n    setLoading(true);\r\n    try {\r\n      if (!pharmacyName.trim()) throw new Error(\"Pharmacy name is required\");\r\n      if (!ownerEmail || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(ownerEmail))\r\n        throw new Error(\"Valid owner email required\");\r\n      if (!ownerPassword || ownerPassword.length < 6)\r\n        throw new Error(\"Password must be at least 6 characters\");\r\n      if (!idNumber.trim() || !licenseNumber.trim())\r\n        throw new Error(\"ID number and license number are required\");\r\n      let docPath: string | undefined = undefined;\r\n      if (kycFile) {\r\n        const up = await UploadAPI.uploadKyc(kycFile);\r\n        docPath = up.path;\r\n        setKycUploadPath(up.path);\r\n      }\r\n      const registerRes = await AuthAPI.registerPharmacy({\r\n        pharmacy_name: pharmacyName,\r\n        address: address || undefined,\r\n        owner_email: ownerEmail,\r\n        owner_phone: ownerPhone || undefined,\r\n        owner_password: ownerPassword,\r\n        id_number: idNumber,\r\n        pharmacy_license_number: licenseNumber,\r\n        kyc_notes: kycNotes || undefined,\r\n        pharmacy_license_document_path: docPath,\r\n        affiliate_token: affiliateToken,\r\n      });\r\n      const auth = await AuthAPI.login(\r\n        ownerEmail,\r\n        ownerPassword,\r\n        registerRes?.tenant_id\r\n      );\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"access_token\", auth.access_token);\r\n        if (auth.refresh_token)\r\n          localStorage.setItem(\"refresh_token\", auth.refresh_token);\r\n        if (registerRes?.tenant_id)\r\n          localStorage.setItem(\"tenant_id\", registerRes.tenant_id);\r\n      }\r\n      const me = await AuthAPI.me();\r\n      if (typeof window !== \"undefined\" && me?.tenant_id) {\r\n        localStorage.setItem(\"tenant_id\", me.tenant_id);\r\n      }\r\n      setSuccess(\"Application received. Redirecting to your dashboard...\");\r\n      show({\r\n        variant: \"success\",\r\n        title: \"Submitted\",\r\n        description: \"Your dashboard will update once KYC is approved.\",\r\n      });\r\n      setTimeout(() => router.replace(\"/dashboard/owner\"), 600);\r\n    } catch (err: any) {\r\n      setError(err.message || \"Failed to submit\");\r\n      show({\r\n        variant: \"destructive\",\r\n        title: \"Failed\",\r\n        description: err.message || \"Please try again\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function submitAffiliate(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(null);\r\n    setLoading(true);\r\n    try {\r\n      if (!affEmail || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(affEmail))\r\n        throw new Error(\"Valid email required\");\r\n      if (!affPassword || affPassword.length < 6)\r\n        throw new Error(\"Password must be at least 6 characters\");\r\n      await AuthAPI.registerAffiliate({\r\n        email: affEmail,\r\n        password: affPassword,\r\n        affiliate_full_name: fullName || undefined,\r\n        bank_name: bankName || undefined,\r\n        bank_account_name: bankAccountName || undefined,\r\n        bank_account_number: bankAccountNumber || undefined,\r\n      });\r\n      setSuccess(\"Affiliate registered. Please verify your email.\");\r\n      show({\r\n        variant: \"success\",\r\n        title: \"Registered\",\r\n        description: \"Check your email for verification code\",\r\n      });\r\n      setTimeout(\r\n        () => router.replace(`/verify?email=${encodeURIComponent(affEmail)}`),\r\n        1200\r\n      );\r\n    } catch (err: any) {\r\n      const message = err?.message || \"Registration failed\";\r\n      setError(message);\r\n      show({ variant: \"destructive\", title: \"Failed\", description: message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center py-12 px-4\">\r\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-lg p-8 mt-12\">\r\n        <div className=\"text-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Zemen Pharma</h1>\r\n          <p className=\"text-sm text-gray-500 mt-2\">Create your account</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          {!tabParam && (\r\n            <div className=\"flex justify-center gap-2\">\r\n              <button\r\n                className={`cursor-pointer px-4 py-2 rounded-full text-sm font-medium transition ${\r\n                  tab === \"pharmacy\"\r\n                    ? \"bg-emerald-600 text-white\"\r\n                    : \"bg-gray-200 text-gray-600 hover:bg-gray-300\"\r\n                }`}\r\n                onClick={() => setTab(\"pharmacy\")}\r\n              >\r\n                Pharmacy\r\n              </button>\r\n              <button\r\n                className={`cursor-pointerpx-4 py-2 rounded-full text-sm font-medium transition ${\r\n                  tab === \"affiliate\"\r\n                    ? \"bg-emerald-600 text-white\"\r\n                    : \"bg-gray-200 text-gray-600 hover:bg-gray-300\"\r\n                }`}\r\n                onClick={() => setTab(\"affiliate\")}\r\n              >\r\n                Affiliate\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 rounded-md bg-red-50 border border-red-200 p-3 text-sm text-red-700\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        {success && (\r\n          <div className=\"mb-4 rounded-md bg-green-50 border border-green-200 p-3 text-sm text-green-700\">\r\n            {success}\r\n          </div>\r\n        )}\r\n\r\n        {tab === \"pharmacy\" ? (\r\n          <form onSubmit={submitPharmacy} className=\"space-y-4\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Pharmacy Name\r\n                </label>\r\n                <Input\r\n                  value={pharmacyName}\r\n                  onChange={(e) => setPharmacyName(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Address\r\n                </label>\r\n                <Input\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Owner Email\r\n                </label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={ownerEmail}\r\n                  onChange={(e) => setOwnerEmail(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Owner Phone\r\n                </label>\r\n                <Input\r\n                  value={ownerPhone}\r\n                  onChange={(e) => setOwnerPhone(e.target.value)}\r\n                  placeholder=\"+2519...\"\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Password\r\n                </label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={ownerPassword}\r\n                  onChange={(e) => setOwnerPassword(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  National/Company ID\r\n                </label>\r\n                <Input\r\n                  value={idNumber}\r\n                  onChange={(e) => setIdNumber(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Pharmacy License Number\r\n                </label>\r\n                <Input\r\n                  value={licenseNumber}\r\n                  onChange={(e) => setLicenseNumber(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Pharmacy License Document (Image, required)\r\n                </label>\r\n                <div className=\"mt-1 flex items-center gap-3\">\r\n                  <label className=\"inline-flex items-center gap-2 px-3 py-2 bg-gray-100 border border-gray-300 rounded-md cursor-pointer text-sm text-gray-700 hover:bg-gray-200\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".jpg,.jpeg,.png\"\r\n                      onChange={(e) => setKycFile(e.target.files?.[0] || null)}\r\n                      className=\"hidden\"\r\n                      required\r\n                    />\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-4 w-4\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V7M16 3v4M8 3v4m0 0h8\"\r\n                      />\r\n                    </svg>\r\n                    <span>{kycFile ? kycFile.name : \"Choose file\"}</span>\r\n                  </label>\r\n                  {kycUploadPath && (\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      Uploaded: {kycUploadPath}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Notes to Reviewer\r\n                </label>\r\n                <textarea\r\n                  className=\"mt-1 w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                  rows={3}\r\n                  value={kycNotes}\r\n                  onChange={(e) => setKycNotes(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {affiliateToken && (\r\n              <div className=\"text-xs text-gray-500\">\r\n                Referral token detected.\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center justify-center gap-3\">\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"cursor-pointer bg-emerald-600 hover:bg-emerald-700 text-white\"\r\n              >\r\n                {loading ? (\r\n                  <svg\r\n                    className=\"animate-spin h-4 w-4 mr-2\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    ></circle>\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8v8z\"\r\n                    ></path>\r\n                  </svg>\r\n                ) : null}\r\n                {loading ? \"Submitting...\" : \"Submit Application\"}\r\n              </Button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                href=\"/auth?tab=signin\"\r\n                className=\"text-sm text-gray-600 hover:underline\"\r\n              >\r\n                Sign in\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={submitAffiliate} className=\"space-y-4\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Email\r\n                </label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={affEmail}\r\n                  onChange={(e) => setAffEmail(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Password\r\n                </label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={affPassword}\r\n                  onChange={(e) => setAffPassword(e.target.value)}\r\n                  required\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Full Name (for payouts)\r\n                </label>\r\n                <Input\r\n                  value={fullName}\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Bank Name\r\n                </label>\r\n                <Input\r\n                  value={bankName}\r\n                  onChange={(e) => setBankName(e.target.value)}\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Bank Account Name\r\n                </label>\r\n                <Input\r\n                  value={bankAccountName}\r\n                  onChange={(e) => setBankAccountName(e.target.value)}\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald- regolare border-emerald-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">\r\n                  Bank Account Number\r\n                </label>\r\n                <Input\r\n                  value={bankAccountNumber}\r\n                  onChange={(e) => setBankAccountNumber(e.target.value)}\r\n                  className=\"mt-1 border-gray-300 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-center gap-3\">\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"cursor-pointer bg-emerald-600 hover:bg-emerald-700 text-white\"\r\n              >\r\n                {loading ? (\r\n                  <svg\r\n                    className=\"animate-spin h-4 w-4 mr-2\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    ></circle>\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8v8z\"\r\n                    ></path>\r\n                  </svg>\r\n                ) : null}\r\n                {loading ? \"Registering...\" : \"Register as Affiliate\"}\r\n              </Button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Link\r\n                href=\"/affiliate-login\"\r\n                className=\"text-sm text-gray-600 hover:underline\"\r\n              >\r\n                Already have an affiliate account? Sign in\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        )}\r\n\r\n        <p className=\"mt-6 text-center text-xs text-gray-500\">\r\n          By creating an account you agree to our{\" \"}\r\n          <a href=\"/terms\" className=\"underline hover:text-emerald-600\">\r\n            Terms\r\n          </a>{\" \"}\r\n          and{\" \"}\r\n          <a href=\"/privacy\" className=\"underline hover:text-emerald-600\">\r\n            Privacy Policy\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAYe,SAAS;;IACtB,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,KAAK,IAAA,wJAAe;IAC1B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,yIAAQ;IACzB,MAAM,WAAW,GAAG,GAAG,CAAC;IACxB,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,yKAAQ,EAC5B,aAAa,cAAc,cAAc;IAE3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAgB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAgB;IACtD,MAAM,iBAAiB,GAAG,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,UAAU;IAE3D,gBAAgB;IAChB,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAC;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAC;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAC;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAc;IACpD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAgB;IAElE,iBAAiB;IACjB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAC;IACvD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,yKAAQ,EAAC;IAC3D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IAEjC,MAAM,cAAc,IAAA,wKAAO;6CAAC,IAAM,CAAC,CAAC,CAA2B;4CAAG,EAAE;IAEpE,eAAe,eAAe,CAAkB;QAC9C,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QACX,WAAW;QACX,IAAI;YACF,IAAI,CAAC,aAAa,IAAI,IAAI,MAAM,IAAI,MAAM;YAC1C,IAAI,CAAC,cAAc,CAAC,6BAA6B,IAAI,CAAC,aACpD,MAAM,IAAI,MAAM;YAClB,IAAI,CAAC,iBAAiB,cAAc,MAAM,GAAG,GAC3C,MAAM,IAAI,MAAM;YAClB,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,cAAc,IAAI,IACzC,MAAM,IAAI,MAAM;YAClB,IAAI,UAA8B;YAClC,IAAI,SAAS;gBACX,MAAM,KAAK,MAAM,4HAAS,CAAC,SAAS,CAAC;gBACrC,UAAU,GAAG,IAAI;gBACjB,iBAAiB,GAAG,IAAI;YAC1B;YACA,MAAM,cAAc,MAAM,0HAAO,CAAC,gBAAgB,CAAC;gBACjD,eAAe;gBACf,SAAS,WAAW;gBACpB,aAAa;gBACb,aAAa,cAAc;gBAC3B,gBAAgB;gBAChB,WAAW;gBACX,yBAAyB;gBACzB,WAAW,YAAY;gBACvB,gCAAgC;gBAChC,iBAAiB;YACnB;YACA,MAAM,OAAO,MAAM,0HAAO,CAAC,KAAK,CAC9B,YACA,eACA,wBAAA,kCAAA,YAAa,SAAS;YAExB,wCAAmC;gBACjC,aAAa,OAAO,CAAC,gBAAgB,KAAK,YAAY;gBACtD,IAAI,KAAK,aAAa,EACpB,aAAa,OAAO,CAAC,iBAAiB,KAAK,aAAa;gBAC1D,IAAI,wBAAA,kCAAA,YAAa,SAAS,EACxB,aAAa,OAAO,CAAC,aAAa,YAAY,SAAS;YAC3D;YACA,MAAM,KAAK,MAAM,0HAAO,CAAC,EAAE;YAC3B,IAAI,aAAkB,gBAAe,eAAA,yBAAA,GAAI,SAAS,GAAE;gBAClD,aAAa,OAAO,CAAC,aAAa,GAAG,SAAS;YAChD;YACA,WAAW;YACX,KAAK;gBACH,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;YACA,WAAW,IAAM,OAAO,OAAO,CAAC,qBAAqB;QACvD,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;YACxB,KAAK;gBACH,SAAS;gBACT,OAAO;gBACP,aAAa,IAAI,OAAO,IAAI;YAC9B;QACF,SAAU;YACR,WAAW;QACb;IACF;IAEA,eAAe,gBAAgB,CAAkB;QAC/C,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QACX,WAAW;QACX,IAAI;YACF,IAAI,CAAC,YAAY,CAAC,6BAA6B,IAAI,CAAC,WAClD,MAAM,IAAI,MAAM;YAClB,IAAI,CAAC,eAAe,YAAY,MAAM,GAAG,GACvC,MAAM,IAAI,MAAM;YAClB,MAAM,0HAAO,CAAC,iBAAiB,CAAC;gBAC9B,OAAO;gBACP,UAAU;gBACV,qBAAqB,YAAY;gBACjC,WAAW,YAAY;gBACvB,mBAAmB,mBAAmB;gBACtC,qBAAqB,qBAAqB;YAC5C;YACA,WAAW;YACX,KAAK;gBACH,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;YACA,WACE,IAAM,OAAO,OAAO,CAAC,AAAC,iBAA6C,OAA7B,mBAAmB,aACzD;QAEJ,EAAE,OAAO,KAAU;YACjB,MAAM,UAAU,CAAA,gBAAA,0BAAA,IAAK,OAAO,KAAI;YAChC,SAAS;YACT,KAAK;gBAAE,SAAS;gBAAe,OAAO;gBAAU,aAAa;YAAQ;QACvE,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;sCACjD,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;8BAG5C,6LAAC;oBAAI,WAAU;8BACZ,CAAC,0BACA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAW,AAAC,wEAIX,OAHC,QAAQ,aACJ,8BACA;gCAEN,SAAS,IAAM,OAAO;0CACvB;;;;;;0CAGD,6LAAC;gCACC,WAAW,AAAC,uEAIX,OAHC,QAAQ,cACJ,8BACA;gCAEN,SAAS,IAAM,OAAO;0CACvB;;;;;;;;;;;;;;;;;gBAON,uBACC,6LAAC;oBAAI,WAAU;8BACZ;;;;;;gBAGJ,yBACC,6LAAC;oBAAI,WAAU;8BACZ;;;;;;gBAIJ,QAAQ,2BACP,6LAAC;oBAAK,UAAU;oBAAgB,WAAU;;sCACxC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4CAC/C,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4CAC1C,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,aAAY;4CACZ,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4CAChD,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4CAChD,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;;sEACf,6LAAC;4DACC,MAAK;4DACL,QAAO;4DACP,UAAU,CAAC;oEAAiB;uEAAX,WAAW,EAAA,kBAAA,EAAE,MAAM,CAAC,KAAK,cAAd,sCAAA,eAAgB,CAAC,EAAE,KAAI;;4DACnD,WAAU;4DACV,QAAQ;;;;;;sEAEV,6LAAC;4DACC,OAAM;4DACN,WAAU;4DACV,MAAK;4DACL,SAAQ;4DACR,QAAO;sEAEP,cAAA,6LAAC;gEACC,eAAc;gEACd,gBAAe;gEACf,aAAa;gEACb,GAAE;;;;;;;;;;;sEAGN,6LAAC;sEAAM,UAAU,QAAQ,IAAI,GAAG;;;;;;;;;;;;gDAEjC,+BACC,6LAAC;oDAAI,WAAU;;wDAAwB;wDAC1B;;;;;;;;;;;;;;;;;;;8CAKnB,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC;4CACC,WAAU;4CACV,MAAM;4CACN,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;wBAKhD,gCACC,6LAAC;4BAAI,WAAU;sCAAwB;;;;;;sCAKzC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,wIAAM;gCACL,MAAK;gCACL,UAAU;gCACV,WAAU;;oCAET,wBACC,6LAAC;wCACC,WAAU;wCACV,OAAM;wCACN,MAAK;wCACL,SAAQ;;0DAER,6LAAC;gDACC,WAAU;gDACV,IAAG;gDACH,IAAG;gDACH,GAAE;gDACF,QAAO;gDACP,aAAY;;;;;;0DAEd,6LAAC;gDACC,WAAU;gDACV,MAAK;gDACL,GAAE;;;;;;;;;;;+CAGJ;oCACH,UAAU,kBAAkB;;;;;;;;;;;;sCAGjC,6LAAC;4BAAI,WAAU;;gCAAc;gCACF;8CACzB,6LAAC,0KAAI;oCACH,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;yCAML,6LAAC;oBAAK,UAAU;oBAAiB,WAAU;;sCACzC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4CAC9C,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;4CAClD,WAAU;;;;;;;;;;;;8CAGd,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA0C;;;;;;sDAG3D,6LAAC,sIAAK;4CACJ,OAAO;4CACP,UAAU,CAAC,IAAM,qBAAqB,EAAE,MAAM,CAAC,KAAK;4CACpD,WAAU;;;;;;;;;;;;;;;;;;sCAKhB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,wIAAM;gCACL,MAAK;gCACL,UAAU;gCACV,WAAU;;oCAET,wBACC,6LAAC;wCACC,WAAU;wCACV,OAAM;wCACN,MAAK;wCACL,SAAQ;;0DAER,6LAAC;gDACC,WAAU;gDACV,IAAG;gDACH,IAAG;gDACH,GAAE;gDACF,QAAO;gDACP,aAAY;;;;;;0DAEd,6LAAC;gDACC,WAAU;gDACV,MAAK;gDACL,GAAE;;;;;;;;;;;+CAGJ;oCACH,UAAU,mBAAmB;;;;;;;;;;;;sCAGlC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,0KAAI;gCACH,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;8BAOP,6LAAC;oBAAE,WAAU;;wBAAyC;wBACZ;sCACxC,6LAAC;4BAAE,MAAK;4BAAS,WAAU;sCAAmC;;;;;;wBAEzD;wBAAI;wBACL;sCACJ,6LAAC;4BAAE,MAAK;4BAAW,WAAU;sCAAmC;;;;;;wBAE5D;;;;;;;;;;;;;;;;;;AAMd;GAvewB;;QACP,kJAAS;QACb,wJAAe;QACT,yIAAQ;;;KAHH","debugId":null}}]
}