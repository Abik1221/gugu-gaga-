{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/utils/api.ts"],"sourcesContent":["export const API_BASE =\r\n  process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000\";\r\nexport const TENANT_HEADER =\r\n  process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\nconst API_BASE_NORMALIZED = API_BASE.replace(/\\/+$/, \"\");\r\nlet API_BASE_PATH = \"\";\r\ntry {\r\n  const parsed = new URL(API_BASE_NORMALIZED);\r\n  API_BASE_PATH = parsed.pathname.replace(/^\\/+/, \"\").replace(/\\/+$/, \"\");\r\n} catch {\r\n  API_BASE_PATH = \"\";\r\n}\r\n\r\nfunction buildHeaders(\r\n  initHeaders?: HeadersInit,\r\n  tenantId?: string\r\n): HeadersInit {\r\n  const headers: Record<string, string> = {\r\n    ...(initHeaders as Record<string, string>),\r\n  };\r\n  if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n  return headers;\r\n}\r\n\r\nfunction resolveApiUrl(path: string): string {\r\n  if (/^https?:\\/\\//i.test(path)) {\r\n    return path;\r\n  }\r\n\r\n  if (path.startsWith(\"?\") || path.startsWith(\"#\")) {\r\n    return `${API_BASE_NORMALIZED}${path}`;\r\n  }\r\n\r\n  const normalizedPath = path.replace(/^\\/+/, \"\");\r\n  let relativePath = normalizedPath;\r\n\r\n  \r\n  if (API_BASE_PATH) {\r\n    const prefix = `${API_BASE_PATH}/`;\r\n    if (relativePath.startsWith(prefix)) {\r\n      relativePath = relativePath.slice(prefix.length);\r\n    } else if (relativePath === API_BASE_PATH) {\r\n      relativePath = \"\";\r\n    }\r\n  }\r\n\r\n  if (!relativePath) {\r\n    return API_BASE_NORMALIZED;\r\n  }\r\n\r\n  return `${API_BASE_NORMALIZED}/${relativePath}`;\r\n}\r\n\r\nexport async function postForm<T = any>(\r\n  path: string,\r\n  data: Record<string, string>,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const body = new URLSearchParams(data);\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      tenantId\r\n    ),\r\n    body,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    let parsed: any = null;\r\n    try {\r\n      parsed = await res.json();\r\n    } catch {\r\n      parsed = await res.text().catch(() => null);\r\n    }\r\n\r\n    let msg = \"\";\r\n    if (!parsed) msg = `Request failed with ${res.status}`;\r\n    else if (typeof parsed === \"string\") msg = parsed;\r\n    else if (Array.isArray(parsed)) msg = parsed.join(\", \");\r\n    else if (parsed?.detail) msg = parsed.detail;\r\n    else if (parsed?.message) msg = parsed.message;\r\n    else if (parsed?.error) msg = parsed.error;\r\n    else if (parsed?.errors) {\r\n      msg = Object.keys(parsed.errors)\r\n        .map(\r\n          (k) =>\r\n            `${k}: ${\r\n              Array.isArray(parsed.errors[k])\r\n                ? parsed.errors[k].join(\", \")\r\n                : parsed.errors[k]\r\n            }`\r\n        )\r\n        .join(\" | \");\r\n    } else msg = JSON.stringify(parsed);\r\n\r\n    const err: any = new Error(msg || `Request failed with ${res.status}`);\r\n    err.status = res.status;\r\n    err.body = parsed;\r\n    console.error(\"[postForm] failed\", { path, status: res.status, parsed });\r\n    throw err;\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postJSON<T = any>(\r\n  path: string,\r\n  body: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const requestInit = {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(body),\r\n  } satisfies RequestInit;\r\n\r\n  try {\r\n    const res = await fetch(resolveApiUrl(path), requestInit);\r\n\r\n    if (!res.ok) {\r\n      let parsed: any = null;\r\n      let message = \"\";\r\n      try {\r\n        parsed = await res.json();\r\n        if (typeof parsed === \"string\") message = parsed;\r\n        else if (Array.isArray(parsed)) message = parsed.join(\", \");\r\n        else message = parsed?.error || parsed?.detail || parsed?.message || \"\";\r\n        if (!message && parsed) message = JSON.stringify(parsed);\r\n      } catch {\r\n        parsed = null;\r\n        message = await res.text().catch(() => \"\");\r\n      }\r\n\r\n      const error: any = new Error(message || `Request failed with ${res.status}`);\r\n      error.status = res.status;\r\n      if (parsed !== null) error.body = parsed;\r\n      throw error;\r\n    }\r\n\r\n    return (await res.json()) as T;\r\n  } catch (error: any) {\r\n    if (typeof window !== \"undefined\" && !navigator.onLine) {\r\n      const { queueRequest } = await import(\"@/lib/offline/queue\");\r\n      await queueRequest(path, requestInit, {\r\n        tenantId,\r\n        requiresAuth: true,\r\n        description: requestInit.body ? `POST ${path}` : undefined,\r\n      });\r\n      const offlineError: any = new Error(\"Request queued until you are back online.\");\r\n      offlineError.offline = true;\r\n      throw offlineError;\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function putAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => \"\");\r\n    throw new Error(text || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postMultipart<T = any>(\r\n  path: string,\r\n  formData: FormData,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(undefined, tenantId),\r\n    body: formData,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      throw new Error(`Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport function getAccessToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"access_token\");\r\n}\r\n\r\nfunction getTenantId(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"tenant_id\");\r\n}\r\n\r\nfunction getRefreshToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"refresh_token\");\r\n}\r\n\r\nasync function refreshTokens(): Promise<boolean> {\r\n  const rt = getRefreshToken();\r\n  if (!rt) return false;\r\n  const res = await fetch(resolveApiUrl(\"/api/v1/auth/refresh\"), {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify({ refresh_token: rt }),\r\n  });\r\n  if (!res.ok) {\r\n    return false;\r\n  }\r\n  try {\r\n    const data = (await res.json()) as {\r\n      access_token: string;\r\n      refresh_token: string;\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    }\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function authFetch<T>(\r\n  path: string,\r\n  init?: RequestInit,\r\n  retry = true,\r\n  tenantId?: string\r\n): Promise<Response> {\r\n  const token = getAccessToken();\r\n  const activeTenantId = tenantId ?? getTenantId() ?? undefined;\r\n  const headers: HeadersInit = buildHeaders(\r\n    {\r\n      ...(init?.headers || {}),\r\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    },\r\n    activeTenantId\r\n  );\r\n  let res = await fetch(resolveApiUrl(path), { ...(init || {}), headers });\r\n\r\n  if (res.status === 401 && retry) {\r\n    const ok = await refreshTokens();\r\n    if (ok) {\r\n      const newToken = getAccessToken();\r\n      const retryTenantId = tenantId ?? getTenantId() ?? undefined;\r\n      const retryHeaders: HeadersInit = buildHeaders(\r\n        {\r\n          ...(init?.headers || {}),\r\n          ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n        },\r\n        retryTenantId\r\n      );\r\n      res = await fetch(resolveApiUrl(path), {\r\n        ...(init || {}),\r\n        headers: retryHeaders,\r\n      });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport async function getAuthJSON<T = any>(\r\n  path: string,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(path, undefined, true, tenantId);\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\n// ----------------- AuthAPI -----------------\r\nexport type AuthProfile = {\r\n  id: number;\r\n  email: string;\r\n  username?: string | null;\r\n  first_name?: string | null;\r\n  last_name?: string | null;\r\n  phone?: string | null;\r\n  role?: string | null;\r\n  tenant_id?: string | null;\r\n  kyc_status?: string | null;\r\n  subscription_status?: string | null;\r\n  subscription_blocked?: boolean | null;\r\n  subscription_next_due_date?: string | null;\r\n  latest_payment_status?: string | null;\r\n};\r\n\r\nexport type AuthTokenResponse = {\r\n  access_token: string;\r\n  refresh_token: string;\r\n  token_type: string;\r\n  session_id: number;\r\n};\r\n\r\nexport type SessionInfo = {\r\n  id: number;\r\n  created_at: string;\r\n  last_seen_at: string;\r\n  expires_at: string;\r\n  revoked_at?: string | null;\r\n  is_revoked: boolean;\r\n  user_agent?: string | null;\r\n  ip_address?: string | null;\r\n  is_current: boolean;\r\n};\r\n\r\nexport type TenantActivityRecord = {\r\n  id: number;\r\n  tenant_id: string;\r\n  actor_user_id?: number | null;\r\n  action: string;\r\n  message: string;\r\n  target_type?: string | null;\r\n  target_id?: string | null;\r\n  metadata?: Record<string, unknown> | null;\r\n  created_at: string;\r\n};\r\n\r\nexport const AuthAPI = {\r\n  registerAffiliate: (body: any) => postJSON(\"/api/v1/auth/register/affiliate\", body),\r\n  registerPharmacy: (body: any) => postJSON(\"/api/v1/auth/register/pharmacy\", body),\r\n\r\n  registerVerify: async (email: string, code: string) => {\r\n    try {\r\n      return await postForm(\"/api/v1/auth/register/verify\", { email, code });\r\n    } catch (err: any) {\r\n      if (err?.status === 422) {\r\n        console.warn(\"[AuthAPI.registerVerify] 422, retrying with JSON\", {\r\n          body: err.body,\r\n        });\r\n        try {\r\n          return await postJSON(\"/api/v1/auth/register/verify\", { email, code });\r\n        } catch (err2: any) {\r\n          const e: any = new Error(\r\n            err2?.message || err?.message || \"Verification failed\"\r\n          );\r\n          e.original = err;\r\n          e.retry = err2;\r\n          throw e;\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  verifyRegistration: (email: string, code: string) =>\r\n    postForm(\"/api/v1/auth/register/verify\", { email, code }),\r\n  login: (email: string, password: string, tenantId?: string) =>\r\n    postForm<AuthTokenResponse>(\r\n      \"/api/v1/auth/login\",\r\n      {\r\n        username: email,\r\n        password,\r\n        grant_type: \"password\",\r\n      },\r\n      tenantId\r\n    ).then(\r\n      (resp) => {\r\n        if (typeof window !== \"undefined\") {\r\n          localStorage.setItem(\"access_token\", resp.access_token);\r\n          localStorage.setItem(\"refresh_token\", resp.refresh_token);\r\n          if (tenantId) {\r\n            localStorage.setItem(\"tenant_id\", tenantId);\r\n          }\r\n        }\r\n        return resp;\r\n      }\r\n    ),\r\n  loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\r\n      \"/api/v1/auth/login/request-code\",\r\n      { username: email, password, grant_type: \"password\" },\r\n      tenantId\r\n    ),\r\n  loginVerify: (email: string, code: string, tenantId?: string) =>\r\n    postJSON<AuthTokenResponse>(\"/api/v1/auth/login/verify\", { email, code }, tenantId).then((resp) => {\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"access_token\", resp.access_token);\n        localStorage.setItem(\"refresh_token\", resp.refresh_token);\n        if (tenantId) {\n          localStorage.setItem(\"tenant_id\", tenantId);\n        }\n      }\n      return resp;\n    }),\n  refresh: (refreshToken: string) =>\n    postJSON<AuthTokenResponse>(\"/api/v1/auth/refresh\", { refresh_token: refreshToken }),\n  sessions: () => getAuthJSON<SessionInfo[]>(\"/api/v1/auth/sessions\"),\n  revokeSession: (sessionId: number) =>\n    authFetch(`/api/v1/auth/sessions/${sessionId}`, { method: \"DELETE\" }).then((res) => {\n      if (!res.ok) throw new Error(\"Failed to revoke session\");\n    }),\n  changePassword: (body: { current_password: string; new_password: string }) =>\n    postAuthJSON<{ status: string }>(\"/api/v1/auth/change-password\", body),\n  me: () =>\n    getAuthJSON<AuthProfile>(\"/api/v1/auth/me\").then((profile) => {\n      if (typeof window !== \"undefined\") {\n        if (profile?.tenant_id) {\n          localStorage.setItem(\"tenant_id\", profile.tenant_id);\n        }\n      }\n      return profile;\n    }),\n};\n\nexport const TenantAPI = {\n  activity: async (params?: { action?: string[]; limit?: number; offset?: number }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.limit) searchParams.set(\"limit\", params.limit.toString());\n    if (params?.offset) searchParams.set(\"offset\", params.offset.toString());\n    params?.action?.forEach((action) => searchParams.append(\"action\", action));\n    const qs = searchParams.toString();\n    const url = `/api/v1/tenant/activity${qs ? `?${qs}` : \"\"}`;\n    const tenantId = getTenantId() ?? undefined;\n    const res = await authFetch(url, undefined, true, tenantId);\n    if (res.status === 404 || res.status === 204) {\n      return [];\n    }\n    if (!res.ok) {\n      const text = await res.text().catch(() => \"\");\n      throw new Error(text || `Request failed with ${res.status}`);\n    }\n    const contentType = res.headers.get(\"content-type\") || \"\";\n    if (!contentType.includes(\"application/json\")) {\n      return [];\n    }\n    try {\n      return (await res.json()) as TenantActivityRecord[];\n    } catch {\n      return [];\n    }\n  },\n};\n\n// ----------------- IntegrationsAPI -----------------\nexport type IntegrationProviderOut = {\n  key: string;\n  name: string;\n  category: string;\n  capability: {\n    resources: string[];\n    supports_webhooks: boolean;\n    supports_delta_sync: boolean;\n  };\n  requires_oauth: boolean;\n};\n\nexport type IntegrationConnectionOut = {\n  id: number;\n  tenant_id: string;\n  provider_key: string;\n  provider_name: string;\n  display_name: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n  last_synced_at?: string | null;\n  resource_scope?: string[] | null;\n};\n\nexport type IntegrationOAuthStartResponse = {\n  authorization_url: string;\n  state: string;\n  expires_in_seconds: number;\n};\n\nexport type IntegrationSyncJobOut = {\n  id: number;\n  connection_id: number;\n  direction: string;\n  resource: string;\n  status: string;\n  started_at?: string | null;\n  finished_at?: string | null;\n  error_message?: string | null;\n};\n\nexport const IntegrationsAPI = {\n  listProviders: () => getAuthJSON<IntegrationProviderOut[]>(\"/api/v1/integrations/providers\"),\n  listConnections: (tenantId: string) =>\n    getAuthJSON<IntegrationConnectionOut[]>(\"/api/v1/integrations/connections\", tenantId),\n  startOAuth: (tenantId: string, providerKey: string, resources?: string[]) =>\n    postAuthJSON<IntegrationOAuthStartResponse>(\n      \"/api/v1/integrations/oauth/start\",\n      { provider_key: providerKey, resources, display_name: undefined },\n      tenantId\n    ),\n  completeOAuth: (code: string, state: string, providerKey?: string) =>\n    postJSON<IntegrationConnectionOut>(\n      \"/api/v1/integrations/oauth/callback\",\n      { code, state, provider_key: providerKey }\n    ),\n  disconnect: (tenantId: string, connectionId: number) =>\n    authFetch(`/api/v1/integrations/connections/${connectionId}`, { method: \"DELETE\" }, true, tenantId).then(\n      async (res) => {\n        if (!res.ok) {\n          const text = await res.text().catch(() => \"\");\n          throw new Error(text || `HTTP ${res.status}`);\n        }\n        return res.json();\n      }\n    ),\n  triggerSync: (tenantId: string, connectionId: number, resource: string, direction: \"incoming\" | \"outgoing\") =>\n    postAuthJSON<IntegrationSyncJobOut>(\n      `/api/v1/integrations/connections/${connectionId}/sync`,\n      { resource, direction },\n      tenantId\n    ),\n};\n\nexport const AffiliateAPI = {\n  getLinks: () => getAuthJSON(\"/api/v1/affiliate/register-link\"),\n  createLink: () => getAuthJSON(\"/api/v1/affiliate/register-link?create_new=true\"),\n  deactivate: (token: string) =>\n    postAuthJSON(\n      `/api/v1/affiliate/links/${encodeURIComponent(token)}/deactivate`,\n      {}\n    ),\n  rotate: (token: string) =>\n    postAuthJSON(`/api/v1/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\n  dashboard: () => getAuthJSON(\"/api/v1/affiliate/dashboard\"),\n  payouts: (status?: string) =>\n    getAuthJSON(\n      `/api/v1/affiliate/payouts${\n        status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\n      }`\n    ),\n  requestPayout: (month?: string, percent = 5) =>\n    postAuthJSON(\"/api/v1/affiliate/payouts/request\", { month, percent }),\n  updateProfile: (body: any) => postAuthJSON(\"/api/v1/affiliate/profile\", body),\n};\n\n// ----------------- AdminAPI -----------------\nexport const AdminAPI = {\n  analyticsOverview: (days = 30) =>\n    getAuthJSON(`/api/v1/admin/analytics/overview?days=${days}`),\n  pharmacySummary: () => getAuthJSON(`/api/v1/admin/pharmacies/summary`),\n  pharmacies: (page = 1, pageSize = 20, q = \"\") =>\n    getAuthJSON(\n      `/api/v1/admin/pharmacies?page=${page}&page_size=${pageSize}&q=${encodeURIComponent(q)}`\n    ),\n  approvePharmacy: (tenantId: string, applicationId: number, body?: any) =>\n    postAuthJSON(`/api/v1/admin/pharmacies/${applicationId}/approve`, body || {}, tenantId),\n  rejectPharmacy: (tenantId: string, applicationId: number) =>\n    postAuthJSON(`/api/v1/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\n  verifyPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/api/v1/admin/payments/verify`, { code: code || null }, tenantId),\n  rejectPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/api/v1/admin/payments/reject`, { code: code || null }, tenantId),\n  approveAffiliate: (userId: number) => postAuthJSON(`/api/v1/admin/affiliates/${userId}/approve`, {}),\n  rejectAffiliate: (userId: number) => postAuthJSON(`/api/v1/admin/affiliates/${userId}/reject`, {}),\n};\n\n// ----------------- StaffAPI -----------------\nexport const StaffAPI = {\n  createCashier: (\n    tenantId: string,\n    body: {\n      email: string;\n      password: string;\n      phone?: string;\n      role?: string;\n      assigned_branch_id?: number | null;\n    }\n  ) => postAuthJSON(\"/api/v1/staff\", body, tenantId),\n  list: (tenantId: string) => getAuthJSON(\"/api/v1/staff\", tenantId),\n  update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\n    authFetch(\n      `/api/v1/staff/${userId}`,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      },\n      true,\n      tenantId\n    ).then(async (res) => {\n      if (!res.ok) {\n        const text = await res.text().catch(() => \"\");\n        throw new Error(text || `Request failed with ${res.status}`);\n      }\n      return res.json();\n    }),\n  remove: (tenantId: string, userId: number) =>\n    authFetch(\n      `/api/v1/staff/${userId}`,\n      { method: \"DELETE\" },\n      true,\n      tenantId\n    ).then(async (res) => {\n      if (!res.ok) {\n        const text = await res.text().catch(() => \"\");\n        throw new Error(text || `Request failed with ${res.status}`);\n      }\n      return res.json();\n    }),\n};\n\n// ----------------- Pharmacy models -----------------\nexport type PharmacyOut = {\n  id: number;\n  tenant_id: string;\n  name: string;\n  address?: string | null;\n};\n\nexport type PharmaciesListResponse = {\n  page: number;\n  page_size: number;\n  total: number;\n  items: PharmacyOut[];\n};\n\n// ----------------- BillingAPI -----------------\nexport const BillingAPI = {\n  submitPaymentCode: (tenantId: string, code: string) =>\n    postAuthJSON(\"/api/v1/owner/billing/payment-code\", { code }, tenantId),\n};\n\n// ----------------- UploadAPI -----------------\nexport const UploadAPI = {\n  uploadKyc: async (file: File) => {\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    return postMultipart(\"/uploads/kyc\", fd);\n  },\n};\n\n// ----------------- KYCAPI -----------------\nexport const KYCAPI = {\n  status: (tenantId: string) => getAuthJSON(\"/api/v1/owner/kyc/status\", tenantId),\n  update: (tenantId: string, body: any) =>\n    putAuthJSON(\"/api/v1/owner/kyc/status\", body, tenantId),\n};\n\n// ----------------- PharmaciesAPI -----------------\nexport const PharmaciesAPI = {\n  list: (\n    tenantId?: string,\n    params?: { page?: number; page_size?: number; q?: string }\n  ): Promise<PharmaciesListResponse> => {\n    const search = new URLSearchParams();\n    search.set(\"page\", String(params?.page ?? 1));\n    search.set(\"page_size\", String(params?.page_size ?? 20));\n    if (params?.q) search.set(\"q\", params.q);\n    const queryString = search.toString();\n    const path = `/api/v1/pharmacies${queryString ? `?${queryString}` : \"\"}`;\n    return getAuthJSON<PharmaciesListResponse>(path, tenantId);\n  },\n  get: (id: number, tenantId?: string) =>\n    getAuthJSON<PharmacyOut>(`/api/v1/pharmacies/${id}`, tenantId),\n  update: (id: number, body: { name?: string; address?: string }, tenantId?: string) =>\n    authFetch(`/api/v1/pharmacies/${id}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    }, true, tenantId).then(async (res) => {\n      if (!res.ok) throw new Error(await res.text());\n      return (await res.json()) as PharmacyOut;\n    }),\n};\n\n// ----------------- ChatAPI -----------------\nexport const ChatAPI = {\n  listThreads: (tenantId: string) => getAuthJSON(`/api/v1/chat/threads`, tenantId),\n  createThread: (tenantId: string, title?: string) =>\n    postAuthJSON(\n      `/api/v1/chat/threads`,\n      title ? { title } : {},\n      tenantId\n    ),\n  listMessages: (tenantId: string, threadId: number) =>\n    getAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, tenantId),\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\n    postAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, { prompt }, tenantId),\n  usage: (tenantId: string, days = 30) =>\n    getAuthJSON(`/api/v1/chat/usage?days=${days}`, tenantId),\n};\n\nexport type OwnerAnalyticsResponse = {\n  horizon: string;\n  totals: {\n    total_revenue: number;\n    average_ticket: number;\n    units_sold: number;\n    sale_count: number;\n    active_cashiers: number;\n    total_customers: number;\n    active_customers: number;\n    upcoming_refills: number;\n  };\n  deltas: {\n    revenue_vs_last_period: number;\n    avg_ticket_vs_last_period: number;\n    units_vs_last_period: number;\n  };\n  revenue_trend: { period: string; revenue: number }[];\n  top_products: { name: string; revenue: number; quantity: number }[];\n  inventory_health: { label: string; count: number }[];\n  recent_payments: {\n    id: number;\n    status: string;\n    status_label: string;\n    code?: string | null;\n    created_at: string;\n    created_at_formatted: string;\n  }[];\n  branch_comparison: {\n    branch: string | null;\n    revenue: number;\n    sale_count: number;\n    units_sold: number;\n  }[];\n  staff_productivity: {\n    user_id: number;\n    name: string;\n    email?: string | null;\n    role: string;\n    total_sales: number;\n    transactions: number;\n    units_sold: number;\n  }[];\n  staff_activity: {\n    id: number;\n    action: string;\n    actor_user_id?: number | null;\n    actor_name?: string | null;\n    actor_role?: string | null;\n    target_type?: string | null;\n    target_id?: string | null;\n    metadata?: Record<string, any> | null;\n    created_at: string;\n  }[];\n};\n\nexport const OwnerAnalyticsAPI = {\n  overview: (\n    tenantId: string,\n    options?: { horizon?: string; trendWeeks?: number }\n  ) => {\n    const params = new URLSearchParams();\n    if (options?.horizon) params.set(\"horizon\", options.horizon);\n    if (options?.trendWeeks) params.set(\"trend_weeks\", String(options.trendWeeks));\n    const query = params.toString();\n    const path = `/api/v1/owner/analytics/overview${query ? `?${query}` : \"\"}`;\n    return getAuthJSON<OwnerAnalyticsResponse>(path, tenantId);\n  },\n};\n\n// ----------------- OwnerChatAPI -----------------\nexport type OwnerChatThread = {\n  id: number;\n  title: string;\n  created_at: string;\n  updated_at: string;\n};\n\nexport type OwnerChatMessage = {\n  id: number;\n  thread_id: number;\n  role: \"owner\" | \"assistant\";\n  content: string;\n  created_at: string;\n};\n\r\nexport const OwnerChatAPI = {\r\n  listThreads: (tenantId: string) => getAuthJSON<OwnerChatThread[]>(\"/api/v1/owner/chat/threads\", tenantId),\r\n  createThread: (tenantId: string, title: string) =>\r\n    postAuthJSON<OwnerChatThread>(\"/api/v1/owner/chat/threads\", { title }, tenantId),\r\n  listMessages: (tenantId: string, threadId: number) =>\r\n    getAuthJSON<OwnerChatMessage[]>(`/api/v1/owner/chat/threads/${threadId}/messages`, tenantId),\r\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n    postAuthJSON<OwnerChatMessage>(`/api/v1/owner/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n};\r\n\r\n// ----------------- InventoryAPI -----------------\r\nexport type InventoryItem = {\r\n  id: number;\r\n  medicine_id: number;\r\n  medicine_name: string;\r\n  sku?: string | null;\r\n  branch?: string | null;\r\n  quantity: number;\r\n  pack_size: number;\r\n  packs: number;\r\n  singles: number;\r\n  reorder_level: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  sell_price?: number | null;\r\n};\r\n\r\nexport type InventoryListResponse = {\r\n  page: number;\r\n  page_size: number;\r\n  total: number;\r\n  items: InventoryItem[];\r\n};\r\n\r\ntype InventoryListOptions = {\r\n  q?: string;\r\n  branch?: string;\r\n  expiringInDays?: number;\r\n  lowStockOnly?: boolean;\r\n  page?: number;\r\n  pageSize?: number;\r\n};\r\n\r\ntype InventoryUpdatePayload = {\r\n  quantity?: number;\r\n  reorder_level?: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  sell_price?: number | null;\r\n};\r\n\r\ntype InventoryCreatePayload = {\r\n  medicine_id: number;\r\n  branch?: string | null;\r\n  pack_size: number;\r\n  packs_count?: number;\r\n  singles_count?: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  purchase_price?: number | null;\r\n  sell_price?: number | null;\r\n  reorder_level?: number;\r\n};\r\n\r\nexport const InventoryAPI = {\r\n  list: (tenantId?: string, options?: InventoryListOptions) => {\r\n    const params = new URLSearchParams();\r\n    if (options?.q) params.set(\"q\", options.q);\r\n    if (options?.branch) params.set(\"branch\", options.branch);\r\n    if (typeof options?.expiringInDays === \"number\") {\r\n      params.set(\"expiring_in_days\", String(options.expiringInDays));\r\n    }\r\n    if (options?.lowStockOnly) params.set(\"low_stock_only\", \"true\");\r\n    if (options?.page) params.set(\"page\", String(options.page));\r\n    if (options?.pageSize) params.set(\"page_size\", String(options.pageSize));\r\n    const query = params.toString();\r\n    const path = `/api/v1/inventory/items${query ? `?${query}` : \"\"}`;\r\n    return getAuthJSON<InventoryListResponse>(path, tenantId);\r\n  },\r\n  create: async (tenantId: string | undefined, payload: InventoryCreatePayload) => {\r\n    const form = new URLSearchParams();\r\n    form.set(\"medicine_id\", String(payload.medicine_id));\r\n    form.set(\"pack_size\", String(Math.max(1, payload.pack_size || 1)));\r\n    if (payload.branch) {\r\n      form.set(\"branch\", payload.branch);\r\n    }\r\n    if (typeof payload.packs_count === \"number\") {\r\n      form.set(\"packs_count\", String(Math.max(0, payload.packs_count)));\r\n    }\r\n    if (typeof payload.singles_count === \"number\") {\r\n      form.set(\"singles_count\", String(Math.max(0, payload.singles_count)));\r\n    }\r\n    if (payload.expiry_date) {\r\n      form.set(\"expiry_date\", payload.expiry_date);\r\n    }\r\n    if (payload.lot_number) {\r\n      form.set(\"lot_number\", payload.lot_number);\r\n    }\r\n    if (typeof payload.purchase_price === \"number\") {\r\n      form.set(\"purchase_price\", String(payload.purchase_price));\r\n    }\r\n    if (typeof payload.sell_price === \"number\") {\r\n      form.set(\"sell_price\", String(payload.sell_price));\r\n    }\r\n    if (typeof payload.reorder_level === \"number\") {\r\n      form.set(\"reorder_level\", String(Math.max(0, payload.reorder_level)));\r\n    }\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: form.toString(),\r\n      },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n  update: async (tenantId: string | undefined, itemId: number, payload: InventoryUpdatePayload) => {\r\n    const form = new URLSearchParams();\r\n    if (typeof payload.quantity === \"number\") {\r\n      form.set(\"quantity\", String(payload.quantity));\r\n    }\r\n    if (typeof payload.reorder_level === \"number\") {\r\n      form.set(\"reorder_level\", String(Math.max(0, payload.reorder_level)));\r\n    }\r\n    if (typeof payload.sell_price === \"number\") {\r\n      form.set(\"sell_price\", String(payload.sell_price));\r\n    }\r\n    if (payload.expiry_date !== undefined) {\r\n      form.set(\"expiry_date\", payload.expiry_date || \"\");\r\n    }\r\n    if (payload.lot_number !== undefined) {\r\n      form.set(\"lot_number\", payload.lot_number || \"\");\r\n    }\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items/${itemId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: form.toString(),\r\n      },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n  remove: async (tenantId: string | undefined, itemId: number) => {\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items/${itemId}`,\r\n      { method: \"DELETE\" },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n};\r\n\r\n// ----------------- MedicinesAPI -----------------\r\nexport type MedicineListItem = {\r\n  id: number;\r\n  name: string;\r\n  sku?: string | null;\r\n  category?: string | null;\r\n  manufacturer?: string | null;\r\n};\r\n\r\nexport type MedicinesListResponse = {\r\n  page: number;\r\n  page_size: number;\r\n  total: number;\r\n  items: MedicineListItem[];\r\n};\r\n\r\ntype MedicinesListOptions = {\r\n  q?: string;\r\n  page?: number;\r\n  pageSize?: number;\r\n};\r\n\r\nexport const MedicinesAPI = {\r\n  list: (tenantId?: string, options?: MedicinesListOptions) => {\r\n    const query = new URLSearchParams();\r\n    if (options?.q) {\r\n      query.set(\"q\", options.q);\r\n    }\r\n    if (options?.page) {\r\n      query.set(\"page\", String(options.page));\r\n    }\r\n    if (options?.pageSize) {\r\n      query.set(\"page_size\", String(Math.min(200, Math.max(1, options.pageSize))));\r\n    }\r\n    const path = `/api/v1/medicines${query.toString() ? `?${query.toString()}` : \"\"}`;\r\n    return getAuthJSON<MedicinesListResponse>(path, tenantId);\r\n  },\r\n};\r\n\r\n// ----------------- SalesAPI -----------------\r\ntype SaleLineInput = {\r\n  name_or_sku: string;\r\n  quantity_units: number;\r\n  unit_price?: number;\r\n};\r\n\r\nexport const SalesAPI = {\r\n  pos: (\r\n    tenantId: string | undefined,\r\n    payload: { lines: SaleLineInput[]; branch?: string | null }\r\n  ) => {\r\n    const { lines, branch } = payload;\r\n    const query = branch ? `?branch=${encodeURIComponent(branch)}` : \"\";\r\n    const path = `/api/v1/sales/pos${query}`;\r\n    return postAuthJSON<{ id: number; total: number }>(path, lines, tenantId);\r\n  },\r\n};\r\n\r\n// Other API objects (AffiliateAPI, AdminAPI, etc.) remain unchanged\r\n\r\n// export const API_BASE =\r\n//   process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\r\n// export const TENANT_HEADER =\r\n//   process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\n// function buildHeaders(\r\n//   initHeaders?: HeadersInit,\r\n//   tenantId?: string\r\n// ): HeadersInit {\r\n//   const headers: Record<string, string> = {\r\n//     ...(initHeaders as Record<string, string>),\r\n//   };\r\n//   if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n//   return headers;\r\n// }\r\n\r\n// export async function putAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postForm<T = any>(\r\n//   path: string,\r\n//   data: Record<string, string>,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const body = new URLSearchParams(data);\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(\r\n//       {\r\n//         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n//       },\r\n//       tenantId\r\n//     ),\r\n//     body,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postJSON<T = any>(\r\n//   path: string,\r\n//   body: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n//     body: JSON.stringify(body),\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postMultipart<T = any>(\r\n//   path: string,\r\n//   formData: FormData,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(undefined, tenantId),\r\n//     body: formData,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       let message = `Request failed with ${res.status}`;\r\n//       throw new Error(message);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export function getAccessToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"access_token\");\r\n// }\r\n\r\n// function getRefreshToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"refresh_token\");\r\n// }\r\n\r\n// async function refreshTokens(): Promise<boolean> {\r\n//   const rt = getRefreshToken();\r\n//   if (!rt) return false;\r\n//   const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n//     rt\r\n//   )}`;\r\n//   const res = await fetch(url, { method: \"POST\" });\r\n//   if (!res.ok) return false;\r\n//   try {\r\n//     const data = (await res.json()) as {\r\n//       access_token: string;\r\n//       refresh_token: string;\r\n//       token_type: string;\r\n//       expires_in: number;\r\n//     };\r\n//     if (typeof window !== \"undefined\") {\r\n//       localStorage.setItem(\"access_token\", data.access_token);\r\n//       localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n//     }\r\n//     return true;\r\n//   } catch {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// async function authFetch(\r\n//   path: string,\r\n//   init?: RequestInit,\r\n//   retry = true,\r\n//   tenantId?: string\r\n// ): Promise<Response> {\r\n//   const token = getAccessToken();\r\n//   const headers: HeadersInit = buildHeaders(\r\n//     {\r\n//       ...(init?.headers || {}),\r\n//       ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n//     },\r\n//     tenantId\r\n//   );\r\n//   const res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\r\n//   if (res.status === 401 && retry) {\r\n//     const ok = await refreshTokens();\r\n//     if (ok) {\r\n//       const newToken = getAccessToken();\r\n//       const retryHeaders: HeadersInit = buildHeaders(\r\n//         {\r\n//           ...(init?.headers || {}),\r\n//           ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n//         },\r\n//         tenantId\r\n//       );\r\n//       return fetch(`${API_BASE}${path}`, {\r\n//         ...(init || {}),\r\n//         headers: retryHeaders,\r\n//       });\r\n//     }\r\n//   }\r\n//   return res;\r\n// }\r\n\r\n// export async function getAuthJSON<T = any>(\r\n//   path: string,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(path, undefined, true, tenantId);\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// // Convenience wrappers for key flows\r\n// export const AuthAPI = {\r\n//   registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\r\n//   registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\r\n//   registerVerify: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   verifyRegistration: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   login: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\"/auth/login\", { username: email, password }, tenantId),\r\n//   loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\r\n//       \"/auth/login/request-code\",\r\n//       { username: email, password },\r\n//       tenantId\r\n//     ),\r\n//   loginVerify: (email: string, code: string, tenantId?: string) =>\r\n//     postJSON(\"/auth/login/verify\", { email, code }, tenantId),\r\n//   me: () => getAuthJSON(\"/auth/me\"),\r\n// };\r\n\r\n// export const AffiliateAPI = {\r\n//   getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\r\n//   createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\r\n//   deactivate: (token: string) =>\r\n//     postAuthJSON(\r\n//       `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n//       {}\r\n//     ),\r\n//   rotate: (token: string) =>\r\n//     postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n//   dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\r\n//   payouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/affiliate/payouts${\r\n//         status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   requestPayout: (month?: string, percent = 5) =>\r\n//     postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\r\n//   updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\r\n// };\r\n\r\n// export const AdminAPI = {\r\n//   pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   approvePharmacy: (\r\n//     tenantId: string,\r\n//     applicationId: number,\r\n//     body?: { issue_temp_password?: boolean; temp_password?: string }\r\n//   ) =>\r\n//     postAuthJSON(\r\n//       `/admin/pharmacies/${applicationId}/approve`,\r\n//       body || {},\r\n//       tenantId\r\n//     ),\r\n//   rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n//     postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n//   verifyPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\r\n//   rejectPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\r\n//   analyticsOverview: (days = 30) =>\r\n//     getAuthJSON(`/admin/analytics/overview?days=${days}`),\r\n//   downloadPharmacyLicense: async (applicationId: number) => {\r\n//     const res = await authFetch(\r\n//       `/admin/pharmacies/${applicationId}/license`,\r\n//       { method: \"GET\" },\r\n//       true\r\n//     );\r\n//     if (!res.ok) {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `HTTP ${res.status}`);\r\n//     }\r\n//     const blob = await res.blob();\r\n//     let filename = `license-${applicationId}`;\r\n//     const disposition = res.headers.get(\"Content-Disposition\") || \"\";\r\n//     const match = disposition.match(\r\n//       /filename\\*=UTF-8''([^;]+)|filename=\"?([^\";]+)\"?/i\r\n//     );\r\n//     const extracted = match?.[1] || match?.[2];\r\n//     if (extracted) {\r\n//       try {\r\n//         filename = decodeURIComponent(extracted);\r\n//       } catch {\r\n//         filename = extracted;\r\n//       }\r\n//     }\r\n//     const url = window.URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = filename;\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//     document.body.removeChild(link);\r\n//     window.URL.revokeObjectURL(url);\r\n//   },\r\n//   approveAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\r\n//   rejectAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\r\n//   listAffiliatePayouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliate/payouts${\r\n//         status ? `?status=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   markPayoutPaid: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/mark-paid`, {}),\r\n//   approvePayout: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/approve`, {}),\r\n//   usage: (days = 30) => getAuthJSON(`/admin/usage?days=${days}`),\r\n//   audit: (params?: { tenant_id?: string; action?: string; limit?: number }) =>\r\n//     getAuthJSON(\r\n//       `/admin/audit${(() => {\r\n//         const qs = new URLSearchParams();\r\n//         if (params?.tenant_id) qs.set(\"tenant_id\", params.tenant_id);\r\n//         if (params?.action) qs.set(\"action\", params.action);\r\n//         if (params?.limit) qs.set(\"limit\", String(params.limit));\r\n//         const s = qs.toString();\r\n//         return s ? `?${s}` : \"\";\r\n//       })()}`\r\n//     ),\r\n// };\r\n\r\n// export const StaffAPI = {\r\n//   createCashier: (tenantId: string, body: any) =>\r\n//     postAuthJSON(\"/staff\", body, tenantId),\r\n//   list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\r\n//   update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n//     authFetch(\r\n//       `/staff/${userId}`,\r\n//       {\r\n//         method: \"PATCH\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(body),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     ).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n//   remove: (tenantId: string, userId: number) =>\r\n//     authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n//       async (res) => {\r\n//         if (!res.ok) {\r\n//           const t = await res.text();\r\n//           throw new Error(t || `HTTP ${res.status}`);\r\n//         }\r\n//         return res.json();\r\n//       }\r\n//     ),\r\n// };\r\n\r\n// export const BillingAPI = {\r\n//   submitPaymentCode: (tenantId: string, code: string) =>\r\n//     postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\r\n// };\r\n\r\n// export const UploadAPI = {\r\n//   uploadKyc: async (\r\n//     file: File\r\n//   ): Promise<{ path: string; size: number; filename: string }> => {\r\n//     const fd = new FormData();\r\n//     fd.append(\"file\", file);\r\n//     return await postMultipart(`/uploads/kyc`, fd);\r\n//   },\r\n// };\r\n\r\n// export const KYCAPI = {\r\n//   status: (tenantId: string) => getAuthJSON(`/owner/kyc/status`, tenantId),\r\n//   update: (tenantId: string, body: any) =>\r\n//     putAuthJSON(`/owner/kyc/status`, body, tenantId),\r\n// };\r\n\r\n// export const PharmaciesAPI = {\r\n//   list: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\r\n//   update: (id: number, body: { name?: string; address?: string }) =>\r\n//     authFetch(`/pharmacies/${id}`, {\r\n//       method: \"PATCH\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(body),\r\n//     }).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n// };\r\n\r\n// export const ChatAPI = {\r\n//   listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\r\n//   createThread: (tenantId: string, title: string) =>\r\n//     postAuthJSON(`/chat/threads`, { title }, tenantId),\r\n//   listMessages: (tenantId: string, threadId: number) =>\r\n//     getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\r\n//   sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n//     postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n//   usage: (tenantId: string, days = 30) =>\r\n//     getAuthJSON(`/chat/usage?days=${days}`, tenantId),\r\n//   sendStream: async (\r\n//     tenantId: string,\r\n//     threadId: number,\r\n//     prompt: string,\r\n//     onEvent: (evt: { event: string; data?: any }) => void\r\n//   ): Promise<void> => {\r\n//     const res = await authFetch(\r\n//       `/chat/threads/${threadId}/messages/stream`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ prompt }),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     );\r\n//     if (!res.ok || !res.body) {\r\n//       const t = await res.text().catch(() => \"\");\r\n//       throw new Error(t || `HTTP ${res.status}`);\r\n//     }\r\n//     const reader = res.body.getReader();\r\n//     const decoder = new TextDecoder();\r\n//     let buf = \"\";\r\n//     while (true) {\r\n//       const { done, value } = await reader.read();\r\n//       if (done) break;\r\n//       buf += decoder.decode(value, { stream: true });\r\n//       let idx;\r\n//       while ((idx = buf.indexOf(\"\\n\\n\")) !== -1) {\r\n//         const chunk = buf.slice(0, idx).trim();\r\n//         buf = buf.slice(idx + 2);\r\n//         if (chunk.startsWith(\"data:\")) {\r\n//           try {\r\n//             const jsonStr = chunk.slice(5).trim();\r\n//             const obj = JSON.parse(jsonStr);\r\n//             onEvent(obj);\r\n//           } catch {}\r\n//         }\r\n//       }\r\n//     }\r\n//   },\r\n// };\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-xl text-sm font-semibold transition-all duration-200 disabled:pointer-events-none disabled:opacity-60 shadow-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-emerald-300/70 focus-visible:ring-offset-2 focus-visible:ring-offset-transparent aria-invalid:border-destructive aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 cursor-pointer\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-gradient-to-r from-emerald-500 via-emerald-600 to-teal-500 text-white shadow-lg shadow-emerald-500/25 hover:from-emerald-500/90 hover:via-emerald-600/90 hover:to-teal-500/90 hover:shadow-emerald-500/40\",\r\n        destructive:\r\n          \"bg-gradient-to-r from-red-500 to-rose-500 text-white shadow-lg shadow-red-500/30 hover:from-red-500/90 hover:to-rose-500/90 focus-visible:ring-red-400/40\",\r\n        outline:\r\n          \"border border-emerald-300/60 bg-white/80 text-emerald-700 backdrop-blur-sm shadow-sm hover:border-emerald-400 hover:bg-white\",\r\n        secondary:\r\n          \"bg-emerald-50 text-emerald-700 shadow-sm hover:bg-emerald-100\",\r\n        ghost:\r\n          \"text-emerald-500 hover:bg-emerald-50 hover:text-emerald-700\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n        \"icon-sm\": \"size-8\",\r\n        \"icon-lg\": \"size-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,giBACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/app/%28dashboard%29/layout.tsx"],"sourcesContent":["// Dashboard layout (sidebar, nav)\r\n\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { AuthAPI, type AuthProfile } from \"@/utils/api\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Activity, LogOut, Settings2 } from \"lucide-react\";\r\n\r\ntype RoleAssignment = {\r\n  role?: {\r\n    name?: string | null;\r\n  } | null;\r\n};\r\n\r\ntype Me = AuthProfile & {\r\n  username?: string | null;\r\n  roles?: RoleAssignment[] | null;\r\n};\r\n\r\nfunction deriveRoles(user: Me | null | undefined): string[] {\r\n  const roles = new Set<string>();\r\n  if (user?.role) roles.add(user.role.toLowerCase());\r\n  user?.roles?.forEach((entry) => {\r\n    const name = entry?.role?.name;\r\n    if (name) roles.add(name.toLowerCase());\r\n  });\r\n  return Array.from(roles);\r\n}\r\n\r\nexport default function DashboardLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  const isAdminRoute = pathname?.startsWith(\"/dashboard/admin\");\r\n  const loginPath = isAdminRoute\r\n    ? \"/superadin/zemnpharma/login\"\r\n    : `/auth?tab=signin&next=${encodeURIComponent(pathname || \"/dashboard\")}`;\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState<Me | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [banner, setBanner] = useState<\r\n    | null\r\n    | {\r\n        kind: \"kyc_pending\" | \"payment\";\r\n        title: string;\r\n        description: string;\r\n        actionHref?: string;\r\n        actionLabel?: string;\r\n      }\r\n  >(null);\r\n  const roles = deriveRoles(user);\r\n  const roleName = roles[0] || \"\";\r\n  const isAffiliate = roles.includes(\"affiliate\");\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n\r\n    async function check() {\r\n      try {\r\n        const response = await AuthAPI.me();\r\n        const me = response as Me;\r\n        if (cancelled) return;\r\n        setUser(me);\r\n        // If KYC is pending and user is an owner/staff, keep them on status page only\r\n        const primaryRole = (me?.role || me?.roles?.[0]?.role?.name || \"\").toLowerCase();\r\n        const roleSet = deriveRoles(me);\r\n        const isOwnerRole = roleSet.includes(\"pharmacy_owner\") || roleSet.includes(\"owner\");\r\n        const isCashierRole = roleSet.includes(\"cashier\");\r\n        const isManagerRole = roleSet.includes(\"manager\");\r\n        const isStaffRole = isCashierRole || isManagerRole;\r\n        if (isOwnerRole && pathname.startsWith(\"/dashboard/pos\")) {\r\n          router.replace(\"/dashboard/owner\");\r\n          return;\r\n        }\r\n        if (!isOwnerRole && pathname.startsWith(\"/dashboard/owner/staff\")) {\r\n          router.replace(isCashierRole ? \"/dashboard/pos\" : \"/dashboard\");\r\n          return;\r\n        }\r\n        if (!isOwnerRole && pathname.startsWith(\"/dashboard/owner\")) {\r\n          router.replace(isCashierRole ? \"/dashboard/pos\" : isManagerRole ? \"/dashboard/inventory\" : \"/dashboard\");\r\n          return;\r\n        }\r\n        if (primaryRole !== \"admin\" && pathname.startsWith(\"/dashboard/admin\")) {\r\n          router.replace(\"/dashboard/owner\");\r\n          return;\r\n        }\r\n        if ([\"pharmacy_owner\", \"owner\", \"cashier\", \"manager\"].includes(primaryRole)) {\r\n          const needsKyc = me?.kyc_status !== \"approved\";\r\n          const needsPayment = me?.kyc_status === \"approved\" && me?.subscription_status && me.subscription_status !== \"active\";\r\n          const ownerKycPath = \"/dashboard/owner/kyc\";\r\n          const ownerPaymentPath = \"/dashboard/owner/payment\";\r\n          if (needsKyc && pathname !== ownerKycPath) {\r\n            router.replace(ownerKycPath);\r\n            return;\r\n          }\r\n          if (!needsKyc && needsPayment && pathname !== ownerPaymentPath) {\r\n            router.replace(ownerPaymentPath);\r\n            return;\r\n          }\r\n          if (!needsKyc && !needsPayment && (pathname === ownerKycPath || pathname === ownerPaymentPath)) {\r\n            router.replace(\"/dashboard/owner\");\r\n            return;\r\n          }\r\n          if (!needsKyc && !needsPayment && (pathname === \"/dashboard\" || pathname === \"/dashboard/overview\")) {\r\n            router.replace(\"/dashboard/owner\");\r\n            return;\r\n          }\r\n        }\r\n        // One-time referral track removed (handled server-side)\r\n      } catch (e: any) {\r\n        if (cancelled) return;\r\n        setError(\"Unauthorized\");\r\n        router.replace(loginPath);\r\n      } finally {\r\n        if (!cancelled) setLoading(false);\r\n      }\r\n    }\r\n    // If no token, redirect immediately\r\n    if (typeof window !== \"undefined\" && !localStorage.getItem(\"access_token\")) {\r\n      setLoading(false);\r\n      router.replace(loginPath);\r\n      return;\r\n    }\r\n    check();\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [router, pathname, loginPath]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setBanner(null);\r\n      return;\r\n    }\r\n    const userRoles = deriveRoles(user);\r\n    const isOwner = userRoles.includes(\"pharmacy_owner\") || userRoles.includes(\"owner\");\r\n    const isCashier = userRoles.includes(\"cashier\");\r\n    if (!(isOwner || isCashier)) {\r\n      setBanner(null);\r\n      return;\r\n    }\r\n\r\n    if (user.kyc_status && user.kyc_status !== \"approved\") {\r\n      setBanner({\r\n        kind: \"kyc_pending\",\r\n        title: \"KYC review in progress\",\r\n        description: \"Thanks for submitting your application. Our compliance team is reviewing your documents — you will receive an email once it is approved.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const status = user.subscription_status || \"active\";\r\n    if ([\"awaiting_payment\", \"pending_verification\", \"payment_rejected\"].includes(status)) {\r\n      const copies: Record<string, { title: string; description: string }> = {\r\n        awaiting_payment: {\r\n          title: \"Subscription payment required\",\r\n          description: \"Complete your first subscription payment and submit the receipt code so the admin team can activate your access.\",\r\n        },\r\n        pending_verification: {\r\n          title: \"Payment awaiting verification\",\r\n          description: \"We have received your payment code. The admin team is verifying it — you will be notified once access is restored.\",\r\n        },\r\n        payment_rejected: {\r\n          title: \"Payment could not be verified\",\r\n          description: \"The last payment submission was rejected. Please double-check the receipt code and submit it again.\",\r\n        },\r\n      };\r\n      const copy = copies[status];\r\n      setBanner({\r\n        kind: \"payment\",\r\n        title: copy.title,\r\n        description: copy.description,\r\n        actionHref: \"/dashboard/owner/payment\",\r\n        actionLabel: \"Submit payment\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setBanner(null);\r\n  }, [user]);\r\n\r\n  function logout() {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"refresh_token\");\r\n    }\r\n    if (isAffiliate) {\r\n      router.replace(\"/affiliate-login\");\r\n      return;\r\n    }\r\n    if (roleName === \"admin\") {\r\n      router.replace(\"/superadin/zemnpharma/login\");\r\n      return;\r\n    }\r\n    router.replace(\"/auth?tab=signin\");\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950\">\r\n        <div className=\"animate-pulse text-emerald-200/70\">Loading dashboard...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return null; // Redirected\r\n  }\r\n\r\n  return (\r\n    <Shell user={user} onLogout={logout}>\r\n      {banner && (\r\n        <div className=\"mb-4 flex flex-col gap-3 rounded-2xl border border-amber-400/20 bg-amber-500/10 p-4 text-sm text-amber-100 backdrop-blur\">\r\n          <div>\r\n            <div className=\"text-sm font-semibold uppercase tracking-[0.3em] text-amber-200\">{banner.title}</div>\r\n            <div className=\"mt-1 text-xs md:text-sm text-amber-100/80\">{banner.description}</div>\r\n          </div>\r\n          {banner.actionHref && banner.actionLabel && (\r\n            <a\r\n              href={banner.actionHref}\r\n              className=\"inline-flex items-center justify-center rounded-full border border-amber-300/40 bg-amber-500/15 px-4 py-1 text-xs font-semibold uppercase tracking-[0.25em] text-amber-100 transition hover:border-amber-200/60 hover:bg-amber-500/25\"\r\n            >\r\n              {banner.actionLabel}\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n      {children}\r\n    </Shell>\r\n  );\r\n}\r\n\r\nfunction Shell({\r\n  user,\r\n  onLogout,\r\n  children,\r\n}: {\r\n  user: Me | null;\r\n  onLogout: () => void;\r\n  children: React.ReactNode;\r\n}) {\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  const roles = deriveRoles(user);\r\n  const baseRole = (user?.role || \"\").toLowerCase();\r\n  const primaryRole = baseRole || roles[0] || \"\";\r\n  const isOwner = baseRole === \"pharmacy_owner\" || baseRole === \"owner\" || roles.includes(\"pharmacy_owner\") || roles.includes(\"owner\");\r\n  const isCashier = baseRole === \"cashier\" || roles.includes(\"cashier\");\r\n  const isManager = baseRole === \"manager\" || roles.includes(\"manager\");\r\n  const isAffiliate = baseRole === \"affiliate\" || roles.includes(\"affiliate\");\r\n  const isAdmin = baseRole === \"admin\";\r\n  const isTenantStaff = isOwner || isManager || isCashier;\r\n  const subscriptionStatus = user?.subscription_status || \"active\";\r\n  const requiresPayment = isTenantStaff && user?.kyc_status === \"approved\" && subscriptionStatus !== \"active\";\r\n  const kycPending = isTenantStaff && user?.kyc_status && user.kyc_status !== \"approved\";\r\n  const ownerKycPath = \"/dashboard/owner/kyc\";\r\n  const ownerPaymentPath = \"/dashboard/owner/payment\";\r\n\r\n  if (user && isTenantStaff) {\r\n    if (kycPending && pathname !== ownerKycPath) {\r\n      router.replace(ownerKycPath);\r\n      return null;\r\n    }\r\n    if (!kycPending && requiresPayment && pathname !== ownerPaymentPath) {\r\n      router.replace(ownerPaymentPath);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  let nav: { href: string; label: string }[];\r\n  if (isAffiliate) {\r\n    nav = [{ href: \"/dashboard/affiliate\", label: \"Affiliate Dashboard\" }];\r\n  } else if (isAdmin) {\r\n    nav = [\r\n      { href: \"/dashboard/admin\", label: \"Admin Overview\" },\r\n      { href: \"/dashboard/admin/segments\", label: \"Pharmacy Segments\" },\r\n      { href: \"/dashboard/admin/users\", label: \"Users\" },\r\n      { href: \"/dashboard/admin/pharmacies\", label: \"Pharmacies\" },\r\n      { href: \"/dashboard/admin/affiliates\", label: \"Affiliates\" },\r\n      { href: \"/dashboard/admin/payouts\", label: \"Payouts\" },\r\n      { href: \"/dashboard/admin/audit\", label: \"Audit Log\" },\r\n    ];\r\n  } else if (isOwner) {\r\n    if (kycPending) {\r\n      nav = [{ href: \"/dashboard/owner/kyc\", label: \"KYC\" }];\r\n    } else if (requiresPayment) {\r\n      nav = [{ href: \"/dashboard/owner/payment\", label: \"Payment\" }];\r\n    } else {\r\n      nav = [\r\n        { href: \"/dashboard/owner\", label: \"Owner Overview\" },\r\n        { href: \"/dashboard/owner/agent\", label: \"AI Assistant\" },\r\n        { href: \"/dashboard/owner/branches\", label: \"Branches\" },\r\n        { href: \"/dashboard/inventory\", label: \"Inventory\" },\r\n        { href: \"/dashboard/owner/settings\", label: \"Settings\" },\r\n        { href: \"/dashboard/owner/staff\", label: \"Staff Management\" },\r\n      ];\r\n    }\r\n  } else if ((isManager || isCashier)) {\r\n    if (kycPending) {\r\n      nav = [{ href: \"/dashboard/owner/kyc\", label: \"KYC\" }];\r\n    } else if (requiresPayment) {\r\n      nav = [{ href: \"/dashboard/owner/payment\", label: \"Payment\" }];\r\n    } else {\r\n      nav = [\r\n        { href: \"/dashboard/pos\", label: \"Point of Sale\" },\r\n        { href: \"/dashboard/inventory\", label: \"Inventory\" },\r\n        { href: \"/dashboard/settings\", label: \"Settings\" },\r\n      ];\r\n    }\r\n  } else {\r\n    nav = [\r\n      { href: \"/dashboard\", label: \"Overview\" },\r\n      { href: \"/dashboard/inventory\", label: \"Inventory\" },\r\n      { href: \"/dashboard/pos\", label: \"POS\" },\r\n      { href: \"/dashboard/affiliate\", label: \"Affiliate\" },\r\n      { href: \"/dashboard/settings\", label: \"Settings\" },\r\n      { href: \"/dashboard/about\", label: \"About\" },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen overflow-hidden bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white\">\r\n      <div className=\"pointer-events-none absolute -top-24 left-[10%] h-72 w-72 rounded-full bg-emerald-500/20 blur-3xl\" />\r\n      <div className=\"pointer-events-none absolute top-1/2 right-[-10%] h-96 w-96 rounded-full bg-sky-500/20 blur-3xl\" />\r\n      <div className=\"pointer-events-none absolute bottom-[-20%] left-[35%] h-80 w-80 rounded-full bg-teal-500/25 blur-3xl\" />\r\n\r\n      <div className=\"relative mx-auto flex min-h-screen w-full max-w-7xl flex-col gap-6 px-4 py-8 lg:flex-row\">\r\n        <motion.aside\r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.45, ease: \"easeOut\" }}\r\n          className=\"sticky top-8 w-full self-start rounded-3xl border border-white/10 bg-white/10 p-6 shadow-[0_40px_120px_-50px_rgba(20,184,166,0.6)] backdrop-blur-2xl lg:w-[280px]\"\r\n        >\r\n          <div className=\"flex items-center gap-3 rounded-2xl border border-white/10 bg-white/10 px-4 py-3 text-sm font-semibold uppercase tracking-[0.25em] text-emerald-100/90\">\r\n            <span className=\"flex h-9 w-9 items-center justify-center rounded-xl bg-white/15 text-white\">\r\n              <Activity className=\"h-5 w-5\" />\r\n            </span>\r\n            <span>{isAffiliate ? \"Affiliate Portal\" : isAdmin ? \"Admin Console\" : \"Zemen Dashboard\"}</span>\r\n          </div>\r\n\r\n          <div className=\"mt-6 space-y-2 rounded-2xl border border-white/10 bg-black/30 p-4\">\r\n            {user ? (\r\n              <>\r\n                <p className=\"text-sm font-semibold text-white\">{user.username}</p>\r\n                <p className=\"text-xs text-emerald-100/70 truncate\">{user.email}</p>\r\n                {primaryRole && (\r\n                  <span className=\"inline-flex items-center rounded-full bg-emerald-500/15 px-3 py-1 text-[10px] font-semibold uppercase tracking-[0.3em] text-emerald-200\">\r\n                    {primaryRole}\r\n                  </span>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <p className=\"text-xs text-emerald-100/60\">Not authenticated</p>\r\n            )}\r\n          </div>\r\n\r\n          <nav className=\"mt-8 space-y-2\">\r\n            {nav.map((item) => {\r\n              const active = pathname === item.href || pathname?.startsWith(item.href + \"/\");\r\n              return (\r\n                <Link\r\n                  key={item.href}\r\n                  href={item.href}\r\n                  className={`group relative block overflow-hidden rounded-2xl border px-4 py-3 text-sm font-medium transition ${\r\n                    active\r\n                      ? \"border-transparent bg-gradient-to-r from-emerald-500/30 via-emerald-400/20 to-blue-500/30 text-white shadow-lg\"\r\n                      : \"border-white/10 bg-white/5 text-emerald-100 hover:border-emerald-200/40 hover:bg-white/10\"\r\n                  }`}\r\n                >\r\n                  <span className=\"flex items-center justify-between gap-2\">\r\n                    {item.label}\r\n                    <span className=\"text-xs uppercase tracking-[0.3em] text-emerald-200/70 transition group-hover:translate-x-1\">\r\n                      •\r\n                    </span>\r\n                  </span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </nav>\r\n\r\n          <div className=\"mt-8 rounded-2xl border border-white/10 bg-white/5 p-4 text-xs text-emerald-100/70\">\r\n            <p className=\"font-semibold text-emerald-100\">Need help?</p>\r\n            <p className=\"mt-1\">Explore the resource center or contact support if something feels off.</p>\r\n            <Link\r\n              href=\"/contact\"\r\n              className=\"mt-3 inline-flex items-center gap-2 text-[11px] font-semibold uppercase tracking-[0.3em] text-emerald-200 hover:text-emerald-100\"\r\n            >\r\n              <Settings2 className=\"h-4 w-4\" /> Support\r\n            </Link>\r\n          </div>\r\n\r\n          <Button\r\n            onClick={onLogout}\r\n            variant=\"outline\"\r\n            className=\"mt-6 w-full rounded-2xl border-red-400/30 bg-red-500/15 text-sm font-semibold text-red-100 shadow-[0_12px_40px_-25px_rgba(248,113,113,0.6)] transition hover:bg-red-500/25 hover:text-white\"\r\n          >\r\n            <LogOut className=\"mr-2 h-4 w-4\" /> Sign out\r\n          </Button>\r\n        </motion.aside>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 24 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.45, ease: \"easeOut\" }}\r\n          className=\"flex-1 rounded-3xl border border-white/10 bg-slate-900/70 shadow-[0_40px_120px_-50px_rgba(14,116,144,0.6)] backdrop-blur-2xl\"\r\n        >\r\n          <header className=\"flex flex-col gap-3 border-b border-white/10 p-6 text-sm text-emerald-100/80 sm:flex-row sm:items-center sm:justify-between\">\r\n            <span className=\"text-base font-semibold text-white\">\r\n              {nav.find((n) => pathname?.startsWith(n.href))?.label || \"Overview\"}\r\n            </span>\r\n            {!isAffiliate && !isAdmin && (\r\n              <span className=\"inline-flex items-center rounded-full border border-white/10 bg-white/10 px-3 py-1 text-[11px] uppercase tracking-[0.3em] text-emerald-200\">\r\n                Tenant: {user?.tenant_id || \"N/A\"}\r\n              </span>\r\n            )}\r\n          </header>\r\n          <main className=\"p-6 text-emerald-50/90\">{children}</main>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}