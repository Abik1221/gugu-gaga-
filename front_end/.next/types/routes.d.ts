// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/affiliate-login" | "/auth" | "/auth/affiliate-login" | "/contact" | "/dashboard" | "/dashboard/about" | "/dashboard/admin" | "/dashboard/admin/affiliates" | "/dashboard/admin/audit" | "/dashboard/admin/payouts" | "/dashboard/admin/pharmacies" | "/dashboard/admin/users" | "/dashboard/admin/users/[id]/roles" | "/dashboard/affiliate" | "/dashboard/affiliate/affiliates" | "/dashboard/affiliate/commissions" | "/dashboard/affiliate/payouts" | "/dashboard/affiliate/register" | "/dashboard/ai/chat" | "/dashboard/inventory" | "/dashboard/owner" | "/dashboard/owner/agent" | "/dashboard/owner/branches" | "/dashboard/owner/chat" | "/dashboard/owner/chat/[threadId]" | "/dashboard/owner/kyc" | "/dashboard/owner/payment" | "/dashboard/owner/pharmacies/[id]/settings" | "/dashboard/owner/settings" | "/dashboard/owner/staff" | "/dashboard/owner/staff/new" | "/dashboard/pos" | "/dashboard/receipts/[id]" | "/dashboard/settings" | "/inventory" | "/login" | "/pos" | "/products/[slug]" | "/register" | "/settings" | "/verify"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard/affiliate"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/affiliate-login": {}
  "/auth": {}
  "/auth/affiliate-login": {}
  "/contact": {}
  "/dashboard": {}
  "/dashboard/about": {}
  "/dashboard/admin": {}
  "/dashboard/admin/affiliates": {}
  "/dashboard/admin/audit": {}
  "/dashboard/admin/payouts": {}
  "/dashboard/admin/pharmacies": {}
  "/dashboard/admin/users": {}
  "/dashboard/admin/users/[id]/roles": { "id": string; }
  "/dashboard/affiliate": {}
  "/dashboard/affiliate/affiliates": {}
  "/dashboard/affiliate/commissions": {}
  "/dashboard/affiliate/payouts": {}
  "/dashboard/affiliate/register": {}
  "/dashboard/ai/chat": {}
  "/dashboard/inventory": {}
  "/dashboard/owner": {}
  "/dashboard/owner/agent": {}
  "/dashboard/owner/branches": {}
  "/dashboard/owner/chat": {}
  "/dashboard/owner/chat/[threadId]": { "threadId": string; }
  "/dashboard/owner/kyc": {}
  "/dashboard/owner/payment": {}
  "/dashboard/owner/pharmacies/[id]/settings": { "id": string; }
  "/dashboard/owner/settings": {}
  "/dashboard/owner/staff": {}
  "/dashboard/owner/staff/new": {}
  "/dashboard/pos": {}
  "/dashboard/receipts/[id]": { "id": string; }
  "/dashboard/settings": {}
  "/inventory": {}
  "/login": {}
  "/pos": {}
  "/products/[slug]": { "slug": string; }
  "/register": {}
  "/settings": {}
  "/verify": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard/affiliate": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
