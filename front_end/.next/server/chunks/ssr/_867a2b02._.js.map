{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"bg-white rounded-xl shadow p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"mb-2\", className)} {...props} />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h4\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-emerald-700\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"text-gray-700\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"mt-4 flex flex-wrap items-center justify-between gap-3\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport { Card, CardHeader, CardTitle, CardContent, CardFooter };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,kCAAkC;QAC/C,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,QAAQ;QAAa,GAAG,KAAK;;;;;;AAE5D,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,iBAAiB;QAAa,GAAG,KAAK;;;;;;AAErE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,EAAE,YAAY,EAAE,EAA0B;IACjE,qBAAO,8OAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,WAAW;;;;;;AACzE;AAEO,SAAS,kBAAkB,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC;IACxF,qBACE,8OAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,8OAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,8OAAC;wBAAW,WAAU;kCACpB,cAAA,8OAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,mNAAgB,CACnC,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,EAAE;IAC7B,qBACE,8OAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/settings/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { AuthAPI, type AuthProfile } from \"@/utils/api\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useToast } from \"@/components/ui/toast\";\r\n\r\ntype EditableFields = Pick<AuthProfile, \"username\" | \"first_name\" | \"last_name\" | \"phone\">;\r\nconst editableKeys: Array<keyof EditableFields> = [\"username\", \"first_name\", \"last_name\", \"phone\"];\r\ntype ThemeOption = \"light\" | \"dark\" | \"system\";\r\n\r\nconst THEME_STORAGE_KEY = \"dashboard_theme_preference\";\r\nconst PREF_STORAGE_KEY = \"dashboard_notification_prefs\";\r\n\r\nfunction toInputValue(value: string | null | undefined) {\r\n  return value ?? \"\";\r\n}\r\n\r\nfunction normalize(value: string | null | undefined) {\r\n  return (value ?? \"\").trim();\r\n}\r\n\r\nfunction sanitizePayloadValue(value: string) {\r\n  const trimmed = value.trim();\r\n  return trimmed === \"\" ? null : trimmed;\r\n}\r\n\r\nfunction ProfileField({ label, value }: { label: string; value: React.ReactNode }) {\r\n  return (\r\n    <div className=\"flex flex-col gap-1 rounded border border-gray-200 bg-white/80 p-3\">\r\n      <span className=\"text-xs uppercase tracking-wide text-gray-500\">{label}</span>\r\n      <span className=\"text-sm font-medium text-gray-900 break-words\">{value}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function DashboardSettingsPage() {\r\n  const { show } = useToast();\r\n  const [profile, setProfile] = useState<AuthProfile | null>(null);\r\n  const [form, setForm] = useState<Record<keyof EditableFields, string>>({\r\n    username: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [theme, setTheme] = useState<ThemeOption>(\"system\");\r\n  const [themeLoading, setThemeLoading] = useState(true);\r\n  const [notifications, setNotifications] = useState({\r\n    productUpdates: true,\r\n    inventoryAlerts: true,\r\n    securityEmails: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n    async function loadProfile() {\r\n      setLoading(true);\r\n      try {\r\n        const me = await AuthAPI.me();\r\n        if (!active) return;\r\n        setProfile(me);\r\n        setForm({\r\n          username: toInputValue(me.username),\r\n          first_name: toInputValue(me.first_name),\r\n          last_name: toInputValue(me.last_name),\r\n          phone: toInputValue(me.phone),\r\n        });\r\n        setError(null);\r\n      } catch (err: any) {\r\n        if (!active) return;\r\n        setError(err?.message || \"Unable to load profile\");\r\n      } finally {\r\n        if (active) setLoading(false);\r\n      }\r\n    }\r\n    loadProfile();\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedTheme = typeof window !== \"undefined\" ? (localStorage.getItem(THEME_STORAGE_KEY) as ThemeOption | null) : null;\r\n    const initialTheme: ThemeOption = storedTheme || \"system\";\r\n    setTheme(initialTheme);\r\n    applyTheme(initialTheme);\r\n    setThemeLoading(false);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      const storedPrefs = localStorage.getItem(PREF_STORAGE_KEY);\r\n      if (storedPrefs) {\r\n        try {\r\n          const parsed = JSON.parse(storedPrefs) as typeof notifications;\r\n          setNotifications((prev) => ({ ...prev, ...parsed }));\r\n        } catch {\r\n          // ignore invalid JSON\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (themeLoading) return;\r\n    applyTheme(theme);\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(THEME_STORAGE_KEY, theme);\r\n    }\r\n  }, [theme, themeLoading]);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n    const media = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    const listener = () => {\r\n      if (theme === \"system\") {\r\n        applyTheme(\"system\");\r\n      }\r\n    };\r\n    media.addEventListener(\"change\", listener);\r\n    return () => media.removeEventListener(\"change\", listener);\r\n  }, [theme]);\r\n\r\n  const isDirty = useMemo(() => {\r\n    if (!profile) return false;\r\n    return editableKeys.some((key) => normalize(form[key]) !== normalize(profile[key] as string | null | undefined));\r\n  }, [form, profile]);\r\n\r\n  const summaryFields = useMemo(() => {\r\n    if (!profile) return [];\r\n    return [\r\n      { label: \"Email\", value: profile.email },\r\n      { label: \"Tenant\", value: profile.tenant_id ?? \"—\" },\r\n      { label: \"Role\", value: profile.role ?? \"—\" },\r\n      { label: \"KYC Status\", value: profile.kyc_status ?? \"—\" },\r\n      { label: \"Subscription\", value: profile.subscription_status ?? \"—\" },\r\n    ];\r\n  }, [profile]);\r\n\r\n  const handleChange = (key: keyof EditableFields) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    setForm((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    if (!profile) return;\r\n    setForm({\r\n      username: toInputValue(profile.username),\r\n      first_name: toInputValue(profile.first_name),\r\n      last_name: toInputValue(profile.last_name),\r\n      phone: toInputValue(profile.phone),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!profile) return;\r\n\r\n    const payload: Partial<Record<keyof EditableFields, string | null>> = {};\r\n    editableKeys.forEach((key) => {\r\n      const next = normalize(form[key]);\r\n      const current = normalize(profile[key] as string | null | undefined);\r\n      if (next !== current) {\r\n        payload[key] = sanitizePayloadValue(form[key]);\r\n      }\r\n    });\r\n\r\n    if (Object.keys(payload).length === 0) {\r\n      show({ title: \"No changes to save\", description: \"Update the fields before saving.\" });\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      const updated = await AuthAPI.updateProfile(payload);\r\n      setProfile(updated);\r\n      setForm({\r\n        username: toInputValue(updated.username),\r\n        first_name: toInputValue(updated.first_name),\r\n        last_name: toInputValue(updated.last_name),\r\n        phone: toInputValue(updated.phone),\r\n      });\r\n      setError(null);\r\n      show({ variant: \"success\", title: \"Profile updated\", description: \"Your profile details were saved.\" });\r\n    } catch (err: any) {\r\n      show({ variant: \"destructive\", title: \"Update failed\", description: err?.message || \"Unable to update profile\" });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleThemeChange = (next: ThemeOption) => {\r\n    setTheme(next);\r\n    show({ variant: \"success\", title: \"Appearance updated\", description: `Theme set to ${next}.` });\r\n  };\r\n\r\n  const handleNotificationToggle = (key: keyof typeof notifications) => {\r\n    setNotifications((prev) => {\r\n      const updated = { ...prev, [key]: !prev[key] };\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(PREF_STORAGE_KEY, JSON.stringify(updated));\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n    show({\r\n      variant: \"default\",\r\n      title: \"Password reset\",\r\n      description: \"A password reset link will be available once the security service is connected.\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold\">Profile</h1>\r\n        <p className=\"text-gray-600\">Review and update the account details for this user and tenant.</p>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <Card className=\"border border-emerald-100 shadow-sm\">\r\n          <CardHeader>\r\n            <CardTitle>Loading profile…</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"grid gap-3 md:grid-cols-2\">\r\n              {Array.from({ length: 4 }).map((_, idx) => (\r\n                <Skeleton key={`form-${idx}`} className=\"h-16 w-full\" />\r\n              ))}\r\n            </div>\r\n            <div className=\"grid gap-3 md:grid-cols-2\">\r\n              {Array.from({ length: 4 }).map((_, idx) => (\r\n                <Skeleton key={`summary-${idx}`} className=\"h-16 w-full\" />\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      ) : error ? (\r\n        <Card className=\"border border-red-200 bg-red-50 shadow-sm\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-red-700\">Unable to load profile</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-sm text-red-700\">{error}</div>\r\n          </CardContent>\r\n        </Card>\r\n      ) : !profile ? (\r\n        <Card className=\"border border-gray-200 shadow-sm\">\r\n          <CardHeader>\r\n            <CardTitle>No profile data</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-sm text-gray-500\">We could not retrieve your profile details. Try refreshing the page.</div>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"grid gap-6 xl:grid-cols-2\">\r\n          <Card className=\"border border-emerald-100 shadow-sm\">\r\n            <CardHeader>\r\n              <CardTitle>Edit profile</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <p className=\"text-xs text-gray-500\">\r\n                  Update how your name and contact information appear across the pharmacy tools. Leave a field blank to clear it.\r\n                </p>\r\n                <div className=\"grid gap-4 md:grid-cols-2\">\r\n                  <div className=\"space-y-1\">\r\n                    <label className=\"text-xs font-medium text-gray-600\">Username</label>\r\n                    <Input value={form.username} onChange={handleChange(\"username\")} placeholder=\"Preferred username\" maxLength={64} />\r\n                  </div>\r\n                  <div className=\"space-y-1\">\r\n                    <label className=\"text-xs font-medium text-gray-600\">First name</label>\r\n                    <Input value={form.first_name} onChange={handleChange(\"first_name\")} placeholder=\"e.g. Alex\" maxLength={120} />\r\n                  </div>\r\n                  <div className=\"space-y-1\">\r\n                    <label className=\"text-xs font-medium text-gray-600\">Last name</label>\r\n                    <Input value={form.last_name} onChange={handleChange(\"last_name\")} placeholder=\"e.g. Bekele\" maxLength={120} />\r\n                  </div>\r\n                  <div className=\"space-y-1\">\r\n                    <label className=\"text-xs font-medium text-gray-600\">Phone</label>\r\n                    <Input value={form.phone} onChange={handleChange(\"phone\")} placeholder=\"e.g. +2519...\" maxLength={32} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex flex-wrap items-center justify-end gap-2\">\r\n                  <Button type=\"button\" variant=\"outline\" onClick={resetForm} disabled={!isDirty || saving}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button type=\"submit\" disabled={!isDirty || saving}>\r\n                    {saving ? \"Saving...\" : \"Save changes\"}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"border border-gray-200 shadow-sm\">\r\n            <CardHeader>\r\n              <CardTitle>Account summary</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"grid gap-3\">\r\n              {summaryFields.map((item) => (\r\n                <ProfileField key={item.label} label={item.label} value={item.value} />\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid gap-6 xl:grid-cols-2\">\r\n        <Card className=\"border border-gray-200 shadow-sm\">\r\n          <CardHeader>\r\n            <CardTitle>Appearance</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <p className=\"text-xs text-gray-500\">Choose how the dashboard looks across the app.</p>\r\n            <div className=\"grid gap-3 sm:grid-cols-3\">\r\n              {[\r\n                { value: \"light\", label: \"Light\" },\r\n                { value: \"dark\", label: \"Dark\" },\r\n                { value: \"system\", label: \"System\" },\r\n              ].map((option) => {\r\n                const active = theme === option.value;\r\n                return (\r\n                  <button\r\n                    key={option.value}\r\n                    type=\"button\"\r\n                    onClick={() => handleThemeChange(option.value as ThemeOption)}\r\n                    className={`rounded border px-3 py-2 text-sm font-medium transition ${\r\n                      active ? \"border-emerald-400 bg-emerald-50 text-emerald-700\" : \"border-gray-200 hover:bg-gray-50\"\r\n                    }`}\r\n                  >\r\n                    {option.label}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"border border-gray-200 shadow-sm\">\r\n          <CardHeader>\r\n            <CardTitle>Notifications</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-3 text-sm\">\r\n            <p className=\"text-xs text-gray-500\">These preferences are stored in your browser for now. Backend delivery will be wired soon.</p>\r\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\r\n              <span>Product updates</span>\r\n              <input type=\"checkbox\" checked={notifications.productUpdates} onChange={() => handleNotificationToggle(\"productUpdates\")} />\r\n            </label>\r\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\r\n              <span>Inventory alerts</span>\r\n              <input type=\"checkbox\" checked={notifications.inventoryAlerts} onChange={() => handleNotificationToggle(\"inventoryAlerts\")} />\r\n            </label>\r\n            <label className=\"flex items-center justify-between rounded border border-gray-200 bg-white px-3 py-2\">\r\n              <span>Security emails</span>\r\n              <input type=\"checkbox\" checked={notifications.securityEmails} onChange={() => handleNotificationToggle(\"securityEmails\")} />\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Card className=\"border border-gray-200 shadow-sm\">\r\n        <CardHeader>\r\n          <CardTitle>Account security</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4 text-sm\">\r\n          <p className=\"text-xs text-gray-500\">\r\n            Looking to reset your password or review active sessions? These controls will appear here as soon as the security service is connected.\r\n          </p>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <Button variant=\"outline\" onClick={handlePasswordReset}>\r\n              Request password reset\r\n            </Button>\r\n            <Button variant=\"outline\" disabled>\r\n              Manage active sessions (coming soon)\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction applyTheme(theme: ThemeOption) {\r\n  if (typeof document === \"undefined\") return;\r\n  const root = document.documentElement;\r\n  const prefersDark = window.matchMedia?.(\"(prefers-color-scheme: dark)\").matches ?? false;\r\n  const shouldUseDark = theme === \"dark\" || (theme === \"system\" && prefersDark);\r\n  root.classList.toggle(\"dark\", shouldUseDark);\r\n  root.dataset.theme = shouldUseDark ? \"dark\" : \"light\";\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}