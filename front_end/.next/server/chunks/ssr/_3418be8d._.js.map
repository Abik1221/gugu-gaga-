{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,EAAE,YAAY,EAAE,EAA0B;IACjE,qBAAO,8OAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,WAAW;;;;;;AACzE;AAEO,SAAS,kBAAkB,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC;IACxF,qBACE,8OAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,8OAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,8OAAC;wBAAW,WAAU;kCACpB,cAAA,8OAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"bg-white rounded-xl shadow p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"mb-2\", className)} {...props} />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLHeadingElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h4\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-emerald-700\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"text-gray-700\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nexport { Card, CardHeader, CardTitle, CardContent };\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,kCAAkC;QAC/C,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,QAAQ;QAAa,GAAG,KAAK;;;;;;AAE5D,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,kHAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,kHAAE,EAAC,iBAAiB;QAAa,GAAG,KAAK;;;;;;AAErE,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/_components/cards.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\nexport function StatCard({\n  title,\n  value,\n  description,\n  icon,\n  className,\n}: {\n  title: string;\n  value: React.ReactNode;\n  description?: string;\n  icon?: React.ReactNode;\n  className?: string;\n}) {\n  return (\n    <Card className={cn(\"border border-emerald-100/60 bg-white/85 shadow-md transition hover:-translate-y-0.5 hover:shadow-lg\", className)}>\n      <CardContent className=\"flex items-start justify-between gap-3 p-5\">\n        <div>\n          <p className=\"text-xs font-semibold uppercase tracking-wide text-emerald-500\">{title}</p>\n          <p className=\"mt-3 text-2xl font-semibold text-emerald-900\">{value}</p>\n          {description && <p className=\"mt-3 text-xs text-emerald-700/80\">{description}</p>}\n        </div>\n        {icon && <span className=\"inline-flex h-10 w-10 items-center justify-center rounded-xl bg-emerald-50 text-emerald-600\">{icon}</span>}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function MiniStat({ label, value }: { label: string; value: React.ReactNode }) {\n  return (\n    <Card className=\"border border-emerald-100/60 bg-white/80 shadow-sm\">\n      <CardContent className=\"p-4\">\n        <p className=\"text-[11px] font-semibold uppercase tracking-widest text-emerald-500\">{label}</p>\n        <p className=\"mt-2 text-lg font-semibold text-emerald-900\">{value}</p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function HighlightPill({\n  label,\n  value,\n  tone = \"default\",\n}: {\n  label: string;\n  value: React.ReactNode;\n  tone?: \"default\" | \"warning\";\n}) {\n  const classes =\n    tone === \"warning\"\n      ? \"border-amber-100 bg-amber-50 text-amber-700\"\n      : \"border-emerald-100 bg-emerald-50 text-emerald-700\";\n  return (\n    <div className={`rounded-2xl border px-4 py-3 shadow-sm ${classes}`}>\n      <p className=\"text-[11px] uppercase tracking-widest opacity-80\">{label}</p>\n      <p className=\"mt-2 text-lg font-semibold\">{value}</p>\n    </div>\n  );\n}\n\nexport function SectionCard({\n  title,\n  description,\n  children,\n}: {\n  title: string;\n  description?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <Card className=\"border border-emerald-100/60 bg-white/85 shadow-md backdrop-blur\">\n      <CardHeader className=\"mb-0 space-y-1 pb-0\">\n        <CardTitle className=\"text-lg text-emerald-900\">{title}</CardTitle>\n        {description && <p className=\"text-xs text-emerald-700/80\">{description}</p>}\n      </CardHeader>\n      <CardContent className=\"pt-5\">{children}</CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AAHA;;;;AAMO,SAAS,SAAS,EACvB,KAAK,EACL,KAAK,EACL,WAAW,EACX,IAAI,EACJ,SAAS,EAOV;IACC,qBACE,8OAAC,iIAAI;QAAC,WAAW,IAAA,kHAAE,EAAC,wGAAwG;kBAC1H,cAAA,8OAAC,wIAAW;YAAC,WAAU;;8BACrB,8OAAC;;sCACC,8OAAC;4BAAE,WAAU;sCAAkE;;;;;;sCAC/E,8OAAC;4BAAE,WAAU;sCAAgD;;;;;;wBAC5D,6BAAe,8OAAC;4BAAE,WAAU;sCAAoC;;;;;;;;;;;;gBAElE,sBAAQ,8OAAC;oBAAK,WAAU;8BAA+F;;;;;;;;;;;;;;;;;AAIhI;AAEO,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAA6C;IAClF,qBACE,8OAAC,iIAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,wIAAW;YAAC,WAAU;;8BACrB,8OAAC;oBAAE,WAAU;8BAAwE;;;;;;8BACrF,8OAAC;oBAAE,WAAU;8BAA+C;;;;;;;;;;;;;;;;;AAIpE;AAEO,SAAS,cAAc,EAC5B,KAAK,EACL,KAAK,EACL,OAAO,SAAS,EAKjB;IACC,MAAM,UACJ,SAAS,YACL,gDACA;IACN,qBACE,8OAAC;QAAI,WAAW,CAAC,uCAAuC,EAAE,SAAS;;0BACjE,8OAAC;gBAAE,WAAU;0BAAoD;;;;;;0BACjE,8OAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAGjD;AAEO,SAAS,YAAY,EAC1B,KAAK,EACL,WAAW,EACX,QAAQ,EAKT;IACC,qBACE,8OAAC,iIAAI;QAAC,WAAU;;0BACd,8OAAC,uIAAU;gBAAC,WAAU;;kCACpB,8OAAC,sIAAS;wBAAC,WAAU;kCAA4B;;;;;;oBAChD,6BAAe,8OAAC;wBAAE,WAAU;kCAA+B;;;;;;;;;;;;0BAE9D,8OAAC,wIAAW;gBAAC,WAAU;0BAAQ;;;;;;;;;;;;AAGrC","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/_components/sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { HighlightPill } from \"./cards\";\nimport { cn } from \"@/lib/utils\";\nimport { DollarSign, Sparkles, Users, Wallet, ChevronRight } from \"lucide-react\";\nimport type { AffiliateStats } from \"../_hooks/use-affiliate-dashboard\";\n\nconst navItems = [\n  {\n    label: \"Overview\",\n    href: \"/dashboard/affiliate\",\n    description: \"Snapshot of current performance and actions\",\n  },\n  {\n    label: \"Payouts\",\n    href: \"/dashboard/affiliate/payouts\",\n    description: \"Track requests and statuses\",\n  },\n  {\n    label: \"Commissions\",\n    href: \"/dashboard/affiliate/commissions\",\n    description: \"Review earned commissions\",\n  },\n  {\n    label: \"Affiliates\",\n    href: \"/dashboard/affiliate/affiliates\",\n    description: \"Manage referred pharmacies\",\n  },\n  {\n    label: \"Register pharmacy\",\n    href: \"/dashboard/affiliate/register\",\n    description: \"Create a new referral account\",\n  },\n];\n\nexport function AffiliateSidebar({\n  stats,\n  monthLabel,\n  payoutPercent,\n}: {\n  stats: AffiliateStats;\n  monthLabel: string;\n  payoutPercent: number;\n}) {\n  const pathname = usePathname();\n\n  return (\n    <div className=\"space-y-6 lg:sticky lg:top-8 lg:max-h-[calc(100vh-4rem)] lg:overflow-y-auto\">\n      <Card className=\"overflow-hidden border-none bg-gradient-to-br from-emerald-500 via-emerald-600 to-teal-500 text-white shadow-xl\">\n        <CardHeader className=\"space-y-5 pb-0\">\n          <div className=\"inline-flex items-center gap-2 rounded-full bg-white/15 px-3 py-1 text-[11px] font-semibold uppercase tracking-[0.3em] text-white/80\">\n            <Sparkles className=\"h-4 w-4\" /> Affiliate\n          </div>\n          <CardTitle className=\"text-2xl font-semibold\">Affiliate control center</CardTitle>\n          <p className=\"text-sm text-emerald-50/80\">\n            Track payouts and commissions without losing momentum. {monthLabel} is on pace with a {payoutPercent}% rate.\n          </p>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid gap-3 sm:grid-cols-2\">\n            <MetricTile label=\"Referrals\" value={stats.referrals.toLocaleString()} icon={<Users className=\"h-4 w-4\" />} />\n            <MetricTile label=\"Paid to date\" value={formatCurrency(stats.paidPayout)} icon={<DollarSign className=\"h-4 w-4\" />} />\n            <MetricTile label=\"This month\" value={formatCurrency(stats.currentCommission)} icon={<Wallet className=\"h-4 w-4\" />} />\n            <MetricTile label=\"Pending payout\" value={formatCurrency(stats.pendingPayout)} icon={<Sparkles className=\"h-4 w-4\" />} />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card className=\"border border-emerald-100/60 bg-white/90 shadow-md backdrop-blur\">\n        <CardHeader className=\"space-y-2 pb-0\">\n          <CardTitle className=\"text-base text-emerald-900\">Performance highlights</CardTitle>\n          <p className=\"text-xs text-emerald-700/80\">Stick to the numbers that reflect your pipeline health.</p>\n        </CardHeader>\n        <CardContent className=\"space-y-2 pt-5\">\n          <HighlightPill label=\"Active pharmacies\" value={stats.referrals.toLocaleString()} />\n          <HighlightPill label=\"Current commission\" value={formatCurrency(stats.currentCommission)} />\n          <HighlightPill label=\"Pending payout\" value={formatCurrency(stats.pendingPayout)} tone=\"warning\" />\n        </CardContent>\n      </Card>\n\n      <Card className=\"border border-emerald-100/60 bg-white/95 shadow-md backdrop-blur\">\n        <CardHeader className=\"space-y-2 pb-0\">\n          <CardTitle className=\"text-base text-emerald-900\">Quick navigation</CardTitle>\n          <p className=\"text-xs text-emerald-700/80\">Jump to detail views for payouts, commissions, and referrals.</p>\n        </CardHeader>\n        <CardContent className=\"space-y-2 pt-4\">\n          <nav className=\"flex flex-col gap-2 text-sm\">\n            {navItems.map((item) => {\n              const active = pathname === item.href || pathname.startsWith(`${item.href}/`);\n              return (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  className={cn(\n                    \"flex items-center justify-between rounded-xl border px-3 py-2 text-left transition\",\n                    active\n                      ? \"border-emerald-200 bg-emerald-50 text-emerald-700 shadow-sm\"\n                      : \"border-transparent bg-white text-emerald-900 hover:border-emerald-100 hover:bg-emerald-50/60\"\n                  )}\n                >\n                  <span>\n                    <span className=\"block font-semibold\">{item.label}</span>\n                    <span className=\"text-xs text-emerald-600/70\">{item.description}</span>\n                  </span>\n                  <ChevronRight className=\"h-4 w-4 text-emerald-500\" />\n                </Link>\n              );\n            })}\n          </nav>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction MetricTile({\n  label,\n  value,\n  icon,\n}: {\n  label: string;\n  value: React.ReactNode;\n  icon: React.ReactNode;\n}) {\n  return (\n    <div className=\"flex items-center justify-between rounded-2xl bg-white/10 p-3\">\n      <div>\n        <p className=\"text-[11px] font-semibold uppercase tracking-widest text-white/60\">{label}</p>\n        <p className=\"mt-2 text-lg font-semibold\">{value}</p>\n      </div>\n      <span className=\"inline-flex h-8 w-8 items-center justify-center rounded-xl bg-white/15 text-white\">{icon}</span>\n    </div>\n  );\n}\n\nfunction formatCurrency(amount: number) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(amount || 0);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/_hooks/use-affiliate-dashboard.ts"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AffiliateAPI } from \"@/utils/api\";\nimport { useToast } from \"@/components/ui/toast\";\n\nexport type DashboardSummary = {\n  referrals_count: number;\n  amount: number;\n  percent: number;\n  year: number;\n  month: number;\n  tenants: string[];\n  payouts: { pending_total: number; paid_total: number };\n};\n\nexport type ReferralLink = { token: string; url: string; active: boolean };\n\nexport type AffiliateStats = {\n  referrals: number;\n  currentCommission: number;\n  pendingPayout: number;\n  paidPayout: number;\n};\n\nexport function useAffiliateDashboard() {\n  const { show } = useToast();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [dash, setDash] = useState<DashboardSummary | null>(null);\n  const [links, setLinks] = useState<ReferralLink[]>([]);\n  const [canCreateMore, setCanCreateMore] = useState(true);\n  const [payoutMonth, setPayoutMonth] = useState(\"\");\n  const [payoutPercent, setPayoutPercent] = useState<number>(5);\n  const [requestingPayout, setRequestingPayout] = useState(false);\n\n  const refreshAll = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [dashboard, linkPayload] = await Promise.all([\n        AffiliateAPI.dashboard(),\n        AffiliateAPI.getLinks(),\n      ]);\n      const dashData = dashboard as DashboardSummary;\n      setDash(dashData);\n      if (dashData?.year && dashData?.month) {\n        const monthStr = `${dashData.year}-${String(dashData.month).padStart(2, \"0\")}`;\n        setPayoutMonth(monthStr);\n      }\n      if (dashData?.percent) {\n        setPayoutPercent(dashData.percent);\n      }\n      const linkData = (linkPayload as any) || {};\n      setLinks(linkData.links || []);\n      setCanCreateMore(Boolean(linkData.can_create_more));\n      setError(null);\n    } catch (e: any) {\n      setError(e?.message || \"Failed to load affiliate data\");\n      show({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: e?.message || \"Failed to load affiliate data\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [show]);\n\n  useEffect(() => {\n    refreshAll();\n  }, [refreshAll]);\n\n  const stats: AffiliateStats = useMemo(\n    () => ({\n      referrals: dash?.referrals_count || 0,\n      currentCommission: dash?.amount || 0,\n      pendingPayout: dash?.payouts?.pending_total || 0,\n      paidPayout: dash?.payouts?.paid_total || 0,\n    }),\n    [dash]\n  );\n\n  const monthLabel = useMemo(() => {\n    if (dash?.month && dash?.year) {\n      return `${String(dash.month).padStart(2, \"0\")}/${dash.year}`;\n    }\n    return \"Current period\";\n  }, [dash?.month, dash?.year]);\n\n  const handleCreateLink = useCallback(async () => {\n    try {\n      await AffiliateAPI.createLink();\n      show({ variant: \"success\", title: \"Link created\" });\n      await refreshAll();\n    } catch (e: any) {\n      show({ variant: \"destructive\", title: \"Failed to create link\", description: e?.message });\n    }\n  }, [refreshAll, show]);\n\n  const handleDeactivate = useCallback(\n    async (token: string) => {\n      try {\n        await AffiliateAPI.deactivate(token);\n        show({ variant: \"success\", title: \"Link deactivated\" });\n        await refreshAll();\n      } catch (e: any) {\n        show({ variant: \"destructive\", title: \"Failed to deactivate\", description: e?.message });\n      }\n    },\n    [refreshAll, show]\n  );\n\n  const handleRotate = useCallback(\n    async (token: string) => {\n      try {\n        await AffiliateAPI.rotate(token);\n        show({ variant: \"success\", title: \"Link rotated\" });\n        await refreshAll();\n      } catch (e: any) {\n        show({ variant: \"destructive\", title: \"Failed to rotate\", description: e?.message });\n      }\n    },\n    [refreshAll, show]\n  );\n\n  const handleCopy = useCallback(\n    async (url: string) => {\n      try {\n        if (typeof navigator === \"undefined\" || !navigator.clipboard) {\n          throw new Error(\"Clipboard not available in this environment\");\n        }\n        await navigator.clipboard.writeText(url);\n        show({ variant: \"success\", title: \"Link copied\", description: \"Referral URL saved to clipboard.\" });\n      } catch (e: any) {\n        show({\n          variant: \"destructive\",\n          title: \"Could not copy\",\n          description: e?.message || \"Clipboard action blocked by your browser.\",\n        });\n      }\n    },\n    [show]\n  );\n\n  const handleRequestPayout = useCallback(async () => {\n    if (!payoutMonth) {\n      show({ variant: \"destructive\", title: \"Missing month\", description: \"Select a month to request payment for.\" });\n      return;\n    }\n    setRequestingPayout(true);\n    try {\n      await AffiliateAPI.requestPayout(payoutMonth, payoutPercent || 5);\n      show({\n        variant: \"success\",\n        title: \"Payout requested\",\n        description: \"We will review and notify you once processed.\",\n      });\n      await refreshAll();\n    } catch (e: any) {\n      show({\n        variant: \"destructive\",\n        title: \"Failed to request payout\",\n        description: e?.message || \"Try again later\",\n      });\n    } finally {\n      setRequestingPayout(false);\n    }\n  }, [payoutMonth, payoutPercent, refreshAll, show]);\n\n  return {\n    loading,\n    error,\n    dash,\n    stats,\n    links,\n    canCreateMore,\n    payoutMonth,\n    payoutPercent,\n    requestingPayout,\n    monthLabel,\n    setPayoutMonth,\n    setPayoutPercent,\n    refreshAll,\n    actions: {\n      createLink: handleCreateLink,\n      deactivate: handleDeactivate,\n      rotate: handleRotate,\n      copyLink: handleCopy,\n      requestPayout: handleRequestPayout,\n    },\n  } as const;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,mNAAgB,CACnC,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,EAAE;IAC7B,qBACE,8OAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/affiliate/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { AffiliateSidebar } from \"./_components/sidebar\";\r\nimport { useAffiliateDashboard } from \"./_hooks/use-affiliate-dashboard\";\r\nimport { StatCard, MiniStat, HighlightPill, SectionCard } from \"./_components/cards\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Copy, DollarSign, Link2, Sparkles, Users, Wallet } from \"lucide-react\";\r\n\r\nfunction formatCurrency(amount: number) {\r\n  return new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" }).format(amount || 0);\r\n}\r\n\r\nexport default function AffiliateOverviewPage() {\r\n  const {\r\n    loading,\r\n    error,\r\n    stats,\r\n    dash,\r\n    links,\r\n    canCreateMore,\r\n    payoutMonth,\r\n    payoutPercent,\r\n    requestingPayout,\r\n    monthLabel,\r\n    setPayoutMonth,\r\n    setPayoutPercent,\r\n    actions,\r\n  } = useAffiliateDashboard();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid gap-6 lg:grid-cols-[minmax(0,260px),minmax(0,1fr)]\">\r\n        <div className=\"space-y-4\">\r\n          <Skeleton className=\"h-48 rounded-3xl\" />\r\n          <Skeleton className=\"h-56 rounded-3xl\" />\r\n          <Skeleton className=\"h-56 rounded-3xl\" />\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          <Skeleton className=\"h-48 rounded-3xl\" />\r\n          <Skeleton className=\"h-32 rounded-3xl\" />\r\n          <Skeleton className=\"h-96 rounded-3xl\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-sm text-red-600\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative mx-auto grid max-w-6xl gap-8 lg:grid-cols-[minmax(0,280px),minmax(0,1fr)]\">\r\n      <AffiliateSidebar stats={stats} monthLabel={monthLabel} payoutPercent={payoutPercent} />\r\n\r\n      <div className=\"space-y-8 pb-20\">\r\n        <SectionCard title=\"Commission snapshot\" description={`Earnings update live for ${monthLabel.toLowerCase()}.`}>\r\n          <div className=\"grid gap-4 lg:grid-cols-4\">\r\n            <div className=\"rounded-2xl bg-gradient-to-br from-emerald-500 via-emerald-600 to-emerald-700 p-6 text-white lg:col-span-2\">\r\n              <div className=\"text-xs uppercase tracking-widest text-emerald-50/80\">This month</div>\r\n              <div className=\"mt-3 text-3xl font-semibold\">{formatCurrency(stats.currentCommission)}</div>\r\n              <div className=\"mt-4 flex flex-wrap gap-2 text-xs text-emerald-50/90\">\r\n                <span className=\"inline-flex items-center gap-2 rounded-full bg-white/15 px-3 py-1\">\r\n                  <Wallet className=\"h-4 w-4\" /> Commission rate {dash?.percent ?? payoutPercent}%\r\n                </span>\r\n                <span className=\"inline-flex items-center gap-2 rounded-full bg-white/15 px-3 py-1\">\r\n                  <Sparkles className=\"h-4 w-4\" /> Pending review {formatCurrency(stats.pendingPayout)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <StatCard\r\n              title=\"Referrals\"\r\n              value={stats.referrals.toLocaleString()}\r\n              description=\"Pharmacies onboarded through your links\"\r\n              icon={<Users className=\"h-5 w-5\" />}\r\n            />\r\n            <StatCard\r\n              title=\"Paid to date\"\r\n              value={formatCurrency(stats.paidPayout)}\r\n              description=\"Total cleared to your account\"\r\n              icon={<DollarSign className=\"h-5 w-5\" />}\r\n            />\r\n          </div>\r\n        </SectionCard>\r\n\r\n        <SectionCard title=\"This month at a glance\" description={`Key activity in ${monthLabel.toLowerCase()}.`}>\r\n          <div className=\"grid gap-4 lg:grid-cols-2\">\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid gap-3 sm:grid-cols-3\">\r\n                <MiniStat label=\"Commission rate\" value={`${dash?.percent ?? payoutPercent}%`} />\r\n                <MiniStat label=\"Earned\" value={formatCurrency(dash?.amount || 0)} />\r\n                <MiniStat label=\"New pharmacies\" value={(dash?.tenants?.length || 0).toString()} />\r\n              </div>\r\n              <div className=\"rounded-2xl border border-dashed border-emerald-200 bg-emerald-50/70 p-4\">\r\n                <p className=\"text-xs font-medium text-emerald-700/80\">Tenant IDs credited this month</p>\r\n                <div className=\"mt-3 flex max-h-32 flex-wrap gap-2 overflow-auto pr-1\">\r\n                  {(dash?.tenants || []).length === 0 ? (\r\n                    <span className=\"rounded-full bg-white px-3 py-1 text-xs font-medium text-emerald-600 shadow-sm\">\r\n                      No pharmacies have been credited yet.\r\n                    </span>\r\n                  ) : (\r\n                    dash?.tenants?.map((tenant) => (\r\n                      <span key={tenant} className=\"rounded-full bg-white px-3 py-1 text-xs font-medium text-emerald-700 shadow-sm\">\r\n                        {tenant}\r\n                      </span>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rounded-2xl border border-emerald-100/80 bg-gradient-to-br from-white via-emerald-50/60 to-white p-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-xs font-medium uppercase tracking-wide text-emerald-500\">Ready for a payout?</p>\r\n                  <p className=\"text-sm text-emerald-700/80\">Submit a commission payout request in minutes.</p>\r\n                </div>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"text-xs font-medium text-emerald-600\">Month (YYYY-MM)</label>\r\n                    <Input\r\n                      value={payoutMonth}\r\n                      onChange={(e) => setPayoutMonth(e.target.value)}\r\n                      placeholder=\"2025-10\"\r\n                      className=\"h-11 rounded-xl border-emerald-200 bg-white/85 focus:border-emerald-400 focus:ring-emerald-400\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"text-xs font-medium text-emerald-600\">Commission percent</label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      min={1}\r\n                      max={20}\r\n                      step={0.5}\r\n                      value={payoutPercent}\r\n                      onChange={(e) => setPayoutPercent(Number(e.target.value))}\r\n                      className=\"h-11 rounded-xl border-emerald-200 bg-white/85 focus:border-emerald-400 focus:ring-emerald-400\"\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    onClick={actions.requestPayout}\r\n                    disabled={requestingPayout}\r\n                    className=\"h-11 w-full rounded-xl bg-emerald-600 text-sm font-semibold text-white shadow-lg transition hover:bg-emerald-700 disabled:cursor-not-allowed disabled:bg-emerald-200\"\r\n                  >\r\n                    {requestingPayout ? \"Submitting...\" : \"Submit payout request\"}\r\n                  </Button>\r\n                  <p className=\"text-xs text-emerald-600/80\">\r\n                    Our finance team reviews payout requests within two business days. You&apos;ll get an email once it&apos;s processed.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </SectionCard>\r\n\r\n        <SectionCard title=\"Referral links\" description=\"Create, rotate, and deactivate your referral URLs.\">\r\n          <div className=\"mb-4 flex flex-wrap items-center justify-between gap-3\">\r\n            <div className=\"text-xs font-medium text-emerald-600\">You can keep up to 2 links active at once.</div>\r\n            <Button\r\n              onClick={actions.createLink}\r\n              disabled={!canCreateMore}\r\n              className=\"h-10 rounded-xl bg-emerald-600 px-6 text-sm font-semibold text-white shadow-lg transition hover:bg-emerald-700 disabled:cursor-not-allowed disabled:bg-emerald-200\"\r\n            >\r\n              {canCreateMore ? \"Create new referral link\" : \"Max 2 active links reached\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"divide-y divide-emerald-100/70\">\r\n            {links.map((l) => (\r\n              <div key={l.token} className=\"flex flex-col gap-4 py-5 sm:flex-row sm:items-center sm:justify-between\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center gap-2 text-xs font-medium text-emerald-600\">\r\n                    <span\r\n                      className={`inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold ${\r\n                        l.active ? \"bg-emerald-100 text-emerald-700\" : \"bg-gray-100 text-gray-600\"\r\n                      }`}\r\n                    >\r\n                      <span className=\"h-2.5 w-2.5 rounded-full bg-current\" />\r\n                      {l.active ? \"Active\" : \"Inactive\"}\r\n                    </span>\r\n                    <span className=\"font-mono text-[11px] uppercase tracking-widest text-emerald-500/80\">\r\n                      {l.token.slice(0, 10)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2 text-sm font-medium text-emerald-900\">\r\n                    <Link2 className=\"h-4 w-4 text-emerald-500\" />\r\n                    <span className=\"break-all font-mono text-xs text-emerald-800/90\">{l.url}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    className=\"rounded-lg border-emerald-200 text-emerald-700 hover:bg-emerald-50\"\r\n                    onClick={() => actions.copyLink(l.url)}\r\n                  >\r\n                    <Copy className=\"mr-2 h-4 w-4\" /> Copy\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    className=\"rounded-lg border-emerald-200 text-emerald-700 hover:bg-emerald-50 disabled:border-gray-200 disabled:text-gray-400\"\r\n                    onClick={() => actions.deactivate(l.token)}\r\n                    disabled={!l.active}\r\n                  >\r\n                    Deactivate\r\n                  </Button>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    className=\"rounded-lg border-emerald-200 text-emerald-700 hover:bg-emerald-50\"\r\n                    onClick={() => actions.rotate(l.token)}\r\n                  >\r\n                    Rotate\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {links.length === 0 && (\r\n              <div className=\"py-10 text-center text-sm text-emerald-700/70\">\r\n                No referral links yet. Use the button above to create one and start sharing.\r\n              </div>\r\n            )}\r\n          </div>\r\n        </SectionCard>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}