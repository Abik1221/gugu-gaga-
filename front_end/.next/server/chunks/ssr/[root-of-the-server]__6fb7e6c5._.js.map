{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/habtamusemagn/Music/gugu-gaga-/front_end/utils/api.ts"],"sourcesContent":["export const API_BASE =\n  process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\nexport const TENANT_HEADER =\n  process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\n\nfunction buildHeaders(\n  initHeaders?: HeadersInit,\n  tenantId?: string\n): HeadersInit {\n  const headers: Record<string, string> = {\n    ...(initHeaders as Record<string, string>),\n  };\n  if (tenantId) headers[TENANT_HEADER] = tenantId;\n  return headers;\n}\n\nexport async function postForm<T = any>(\n  path: string,\n  data: Record<string, string>,\n  tenantId?: string\n): Promise<T> {\n  const body = new URLSearchParams(data);\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"POST\",\n    headers: buildHeaders(\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      tenantId\n    ),\n    body,\n  });\n\n  if (!res.ok) {\n    let parsed: any = null;\n    try {\n      parsed = await res.json();\n    } catch {\n      parsed = await res.text().catch(() => null);\n    }\n\n    let msg = \"\";\n    if (!parsed) msg = `Request failed with ${res.status}`;\n    else if (typeof parsed === \"string\") msg = parsed;\n    else if (Array.isArray(parsed)) msg = parsed.join(\", \");\n    else if (parsed?.detail) msg = parsed.detail;\n    else if (parsed?.message) msg = parsed.message;\n    else if (parsed?.error) msg = parsed.error;\n    else if (parsed?.errors) {\n      msg = Object.keys(parsed.errors)\n        .map(\n          (k) =>\n            `${k}: ${\n              Array.isArray(parsed.errors[k])\n                ? parsed.errors[k].join(\", \")\n                : parsed.errors[k]\n            }`\n        )\n        .join(\" | \");\n    } else msg = JSON.stringify(parsed);\n\n    const err: any = new Error(msg || `Request failed with ${res.status}`);\n    err.status = res.status;\n    err.body = parsed;\n    console.error(\"[postForm] failed\", { path, status: res.status, parsed });\n    throw err;\n  }\n\n  return (await res.json()) as T;\n}\n\nexport async function postJSON<T = any>(\n  path: string,\n  body: any,\n  tenantId?: string\n): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"POST\",\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\n    body: JSON.stringify(body),\n  });\n\n  if (!res.ok) {\n    try {\n      const data = await res.json();\n      const msg = data?.error || data?.detail || JSON.stringify(data);\n      throw new Error(msg || `Request failed with ${res.status}`);\n    } catch {\n      const text = await res.text().catch(() => \"\");\n      throw new Error(text || `Request failed with ${res.status}`);\n    }\n  }\n\n  return (await res.json()) as T;\n}\n\nexport async function putAuthJSON<T = any>(\n  path: string,\n  bodyData: any,\n  tenantId?: string\n): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"PUT\",\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\n    body: JSON.stringify(bodyData),\n  });\n\n  if (!res.ok) {\n    try {\n      const data = await res.json();\n      const msg = data?.error || data?.detail || JSON.stringify(data);\n      throw new Error(msg || `Request failed with ${res.status}`);\n    } catch {\n      const text = await res.text().catch(() => \"\");\n      throw new Error(text || `Request failed with ${res.status}`);\n    }\n  }\n  return (await res.json()) as T;\n}\n\nexport async function postMultipart<T = any>(\n  path: string,\n  formData: FormData,\n  tenantId?: string\n): Promise<T> {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: \"POST\",\n    headers: buildHeaders(undefined, tenantId),\n    body: formData,\n  });\n\n  if (!res.ok) {\n    try {\n      const data = await res.json();\n      const msg = data?.error || data?.detail || JSON.stringify(data);\n      throw new Error(msg || `Request failed with ${res.status}`);\n    } catch {\n      throw new Error(`Request failed with ${res.status}`);\n    }\n  }\n\n  return (await res.json()) as T;\n}\n\nexport function getAccessToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(\"access_token\");\n}\n\nfunction getRefreshToken(): string | null {\n  if (typeof window === \"undefined\") return null;\n  return localStorage.getItem(\"refresh_token\");\n}\n\nasync function refreshTokens(): Promise<boolean> {\n  const rt = getRefreshToken();\n  if (!rt) return false;\n  const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\n    rt\n  )}`;\n  const res = await fetch(url, { method: \"POST\" });\n  if (!res.ok) return false;\n  try {\n    const data = (await res.json()) as {\n      access_token: string;\n      refresh_token: string;\n    };\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"access_token\", data.access_token);\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\n    }\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nasync function authFetch(\n  path: string,\n  init?: RequestInit,\n  retry = true,\n  tenantId?: string\n): Promise<Response> {\n  const token = getAccessToken();\n  const headers: HeadersInit = buildHeaders(\n    {\n      ...(init?.headers || {}),\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\n    },\n    tenantId\n  );\n  let res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\n\n  if (res.status === 401 && retry) {\n    const ok = await refreshTokens();\n    if (ok) {\n      const newToken = getAccessToken();\n      const retryHeaders: HeadersInit = buildHeaders(\n        {\n          ...(init?.headers || {}),\n          ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\n        },\n        tenantId\n      );\n      res = await fetch(`${API_BASE}${path}`, {\n        ...(init || {}),\n        headers: retryHeaders,\n      });\n    }\n  }\n\n  return res;\n}\n\nexport async function getAuthJSON<T = any>(\n  path: string,\n  tenantId?: string\n): Promise<T> {\n  const res = await authFetch(path, undefined, true, tenantId);\n  if (!res.ok) {\n    const data = await res.text().catch(() => \"\");\n    throw new Error(data || `Request failed with ${res.status}`);\n  }\n  return (await res.json()) as T;\n}\n\nexport async function postAuthJSON<T = any>(\n  path: string,\n  bodyData: any,\n  tenantId?: string\n): Promise<T> {\n  const res = await authFetch(\n    path,\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(bodyData),\n    },\n    true,\n    tenantId\n  );\n\n  if (!res.ok) {\n    const data = await res.text().catch(() => \"\");\n    throw new Error(data || `Request failed with ${res.status}`);\n  }\n\n  return (await res.json()) as T;\n}\n\n// ----------------- AuthAPI -----------------\nexport const AuthAPI = {\n  registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\n  registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\n\n  registerVerify: async (email: string, code: string) => {\n    try {\n      return await postForm(\"/auth/register/verify\", { email, code });\n    } catch (err: any) {\n      if (err?.status === 422) {\n        console.warn(\"[AuthAPI.registerVerify] 422, retrying with JSON\", {\n          body: err.body,\n        });\n        try {\n          return await postJSON(\"/auth/register/verify\", { email, code });\n        } catch (err2: any) {\n          const e: any = new Error(\n            err2?.message || err?.message || \"Verification failed\"\n          );\n          e.original = err;\n          e.retry = err2;\n          throw e;\n        }\n      }\n      throw err;\n    }\n  },\n\n  verifyRegistration: (email: string, code: string) =>\n    postForm(\"/auth/register/verify\", { email, code }),\n  login: (email: string, password: string, tenantId?: string) =>\n    postForm(\"/auth/login\", { username: email, password }, tenantId),\n  loginRequestCode: (email: string, password: string, tenantId?: string) =>\n    postForm(\n      \"/auth/login/request-code\",\n      { username: email, password },\n      tenantId\n    ),\n  loginVerify: (email: string, code: string, tenantId?: string) =>\n    postJSON(\"/auth/login/verify\", { email, code }, tenantId),\n  me: () => getAuthJSON(\"/auth/me\"),\n};\n\n// ----------------- AffiliateAPI -----------------\nexport const AffiliateAPI = {\n  getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\n  createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\n  deactivate: (token: string) =>\n    postAuthJSON(\n      `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\n      {}\n    ),\n  rotate: (token: string) =>\n    postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\n  dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\n  payouts: (status?: string) =>\n    getAuthJSON(\n      `/affiliate/payouts${\n        status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\n      }`\n    ),\n  requestPayout: (month?: string, percent = 5) =>\n    postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\n  updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\n};\n\n// ----------------- AdminAPI -----------------\nexport const AdminAPI = {\n  pharmacies: (page = 1, pageSize = 20, q?: string) =>\n    getAuthJSON(\n      `/admin/pharmacies?page=${page}&page_size=${pageSize}${\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\n      }`\n    ),\n  affiliates: (page = 1, pageSize = 20, q?: string) =>\n    getAuthJSON(\n      `/admin/affiliates?page=${page}&page_size=${pageSize}${\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\n      }`\n    ),\n  approvePharmacy: (tenantId: string, applicationId: number, body?: any) =>\n    postAuthJSON(\n      `/admin/pharmacies/${applicationId}/approve`,\n      body || {},\n      tenantId\n    ),\n  rejectPharmacy: (tenantId: string, applicationId: number) =>\n    postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\n  verifyPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\n  rejectPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\n  analyticsOverview: (days = 30) =>\n    getAuthJSON(`/admin/analytics/overview?days=${days}`),\n  approveAffiliate: (userId: number) =>\n    postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\n  rejectAffiliate: (userId: number) =>\n    postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\n};\n\n// ----------------- StaffAPI -----------------\nexport const StaffAPI = {\n  createCashier: (tenantId: string, body: any) =>\n    postAuthJSON(\"/staff\", body, tenantId),\n  list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\n  update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\n    authFetch(\n      `/staff/${userId}`,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      },\n      true,\n      tenantId\n    ).then(async (res) => {\n      if (!res.ok) throw new Error(await res.text());\n      return res.json();\n    }),\n  remove: (tenantId: string, userId: number) =>\n    authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\n      async (res) => {\n        if (!res.ok) throw new Error(await res.text());\n        return res.json();\n      }\n    ),\n};\n\n// ----------------- BillingAPI -----------------\nexport const BillingAPI = {\n  submitPaymentCode: (tenantId: string, code: string) =>\n    postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\n};\n\n// ----------------- UploadAPI -----------------\nexport const UploadAPI = {\n  uploadKyc: async (file: File) => {\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    return postMultipart(\"/uploads/kyc\", fd);\n  },\n};\n\n// ----------------- KYCAPI -----------------\nexport const KYCAPI = {\n  status: (tenantId: string) => getAuthJSON(\"/owner/kyc/status\", tenantId),\n  update: (tenantId: string, body: any) =>\n    putAuthJSON(\"/owner/kyc/status\", body, tenantId),\n};\n\n// ----------------- PharmaciesAPI -----------------\nexport const PharmaciesAPI = {\n  list: (page = 1, pageSize = 20, q?: string) =>\n    getAuthJSON(\n      `/pharmacies?page=${page}&page_size=${pageSize}${\n        q ? `&q=${encodeURIComponent(q)}` : \"\"\n      }`\n    ),\n  get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\n  update: (id: number, body: { name?: string; address?: string }) =>\n    authFetch(`/pharmacies/${id}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    }).then(async (res) => {\n      if (!res.ok) throw new Error(await res.text());\n      return res.json();\n    }),\n};\n\n// ----------------- ChatAPI -----------------\nexport const ChatAPI = {\n  listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\n  createThread: (tenantId: string, title: string) =>\n    postAuthJSON(`/chat/threads`, { title }, tenantId),\n  listMessages: (tenantId: string, threadId: number) =>\n    getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\n    postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\n  usage: (tenantId: string, days = 30) =>\n    getAuthJSON(`/chat/usage?days=${days}`, tenantId),\n};\n\n// Other API objects (AffiliateAPI, AdminAPI, etc.) remain unchanged\n\n// export const API_BASE =\n//   process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\n// export const TENANT_HEADER =\n//   process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\n\n// function buildHeaders(\n//   initHeaders?: HeadersInit,\n//   tenantId?: string\n// ): HeadersInit {\n//   const headers: Record<string, string> = {\n//     ...(initHeaders as Record<string, string>),\n//   };\n//   if (tenantId) headers[TENANT_HEADER] = tenantId;\n//   return headers;\n// }\n\n// export async function putAuthJSON<T = any>(\n//   path: string,\n//   bodyData: any,\n//   tenantId?: string\n// ): Promise<T> {\n//   const res = await authFetch(\n//     path,\n//     {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(bodyData),\n//     },\n//     true,\n//     tenantId\n//   );\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `Request failed with ${res.status}`);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// export async function postForm<T = any>(\n//   path: string,\n//   data: Record<string, string>,\n//   tenantId?: string\n// ): Promise<T> {\n//   const body = new URLSearchParams(data);\n//   const res = await fetch(`${API_BASE}${path}`, {\n//     method: \"POST\",\n//     headers: buildHeaders(\n//       {\n//         \"Content-Type\": \"application/x-www-form-urlencoded\",\n//       },\n//       tenantId\n//     ),\n//     body,\n//   });\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `Request failed with ${res.status}`);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// export async function postJSON<T = any>(\n//   path: string,\n//   body: any,\n//   tenantId?: string\n// ): Promise<T> {\n//   const res = await fetch(`${API_BASE}${path}`, {\n//     method: \"POST\",\n//     headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\n//     body: JSON.stringify(body),\n//   });\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `Request failed with ${res.status}`);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// export async function postMultipart<T = any>(\n//   path: string,\n//   formData: FormData,\n//   tenantId?: string\n// ): Promise<T> {\n//   const res = await fetch(`${API_BASE}${path}`, {\n//     method: \"POST\",\n//     headers: buildHeaders(undefined, tenantId),\n//     body: formData,\n//   });\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       let message = `Request failed with ${res.status}`;\n//       throw new Error(message);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// export function getAccessToken(): string | null {\n//   if (typeof window === \"undefined\") return null;\n//   return localStorage.getItem(\"access_token\");\n// }\n\n// function getRefreshToken(): string | null {\n//   if (typeof window === \"undefined\") return null;\n//   return localStorage.getItem(\"refresh_token\");\n// }\n\n// async function refreshTokens(): Promise<boolean> {\n//   const rt = getRefreshToken();\n//   if (!rt) return false;\n//   const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\n//     rt\n//   )}`;\n//   const res = await fetch(url, { method: \"POST\" });\n//   if (!res.ok) return false;\n//   try {\n//     const data = (await res.json()) as {\n//       access_token: string;\n//       refresh_token: string;\n//       token_type: string;\n//       expires_in: number;\n//     };\n//     if (typeof window !== \"undefined\") {\n//       localStorage.setItem(\"access_token\", data.access_token);\n//       localStorage.setItem(\"refresh_token\", data.refresh_token);\n//     }\n//     return true;\n//   } catch {\n//     return false;\n//   }\n// }\n\n// async function authFetch(\n//   path: string,\n//   init?: RequestInit,\n//   retry = true,\n//   tenantId?: string\n// ): Promise<Response> {\n//   const token = getAccessToken();\n//   const headers: HeadersInit = buildHeaders(\n//     {\n//       ...(init?.headers || {}),\n//       ...(token ? { Authorization: `Bearer ${token}` } : {}),\n//     },\n//     tenantId\n//   );\n//   const res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\n//   if (res.status === 401 && retry) {\n//     const ok = await refreshTokens();\n//     if (ok) {\n//       const newToken = getAccessToken();\n//       const retryHeaders: HeadersInit = buildHeaders(\n//         {\n//           ...(init?.headers || {}),\n//           ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\n//         },\n//         tenantId\n//       );\n//       return fetch(`${API_BASE}${path}`, {\n//         ...(init || {}),\n//         headers: retryHeaders,\n//       });\n//     }\n//   }\n//   return res;\n// }\n\n// export async function getAuthJSON<T = any>(\n//   path: string,\n//   tenantId?: string\n// ): Promise<T> {\n//   const res = await authFetch(path, undefined, true, tenantId);\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `Request failed with ${res.status}`);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// export async function postAuthJSON<T = any>(\n//   path: string,\n//   bodyData: any,\n//   tenantId?: string\n// ): Promise<T> {\n//   const res = await authFetch(\n//     path,\n//     {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(bodyData),\n//     },\n//     true,\n//     tenantId\n//   );\n//   if (!res.ok) {\n//     try {\n//       const data = await res.json();\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\n//       throw new Error(msg || `Request failed with ${res.status}`);\n//     } catch {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `Request failed with ${res.status}`);\n//     }\n//   }\n//   return (await res.json()) as T;\n// }\n\n// // Convenience wrappers for key flows\n// export const AuthAPI = {\n//   registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\n//   registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\n//   registerVerify: (email: string, code: string) =>\n//     postForm(\"/auth/register/verify\", { email, code }),\n//   verifyRegistration: (email: string, code: string) =>\n//     postForm(\"/auth/register/verify\", { email, code }),\n//   login: (email: string, password: string, tenantId?: string) =>\n//     postForm(\"/auth/login\", { username: email, password }, tenantId),\n//   loginRequestCode: (email: string, password: string, tenantId?: string) =>\n//     postForm(\n//       \"/auth/login/request-code\",\n//       { username: email, password },\n//       tenantId\n//     ),\n//   loginVerify: (email: string, code: string, tenantId?: string) =>\n//     postJSON(\"/auth/login/verify\", { email, code }, tenantId),\n//   me: () => getAuthJSON(\"/auth/me\"),\n// };\n\n// export const AffiliateAPI = {\n//   getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\n//   createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\n//   deactivate: (token: string) =>\n//     postAuthJSON(\n//       `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\n//       {}\n//     ),\n//   rotate: (token: string) =>\n//     postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\n//   dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\n//   payouts: (status?: string) =>\n//     getAuthJSON(\n//       `/affiliate/payouts${\n//         status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\n//       }`\n//     ),\n//   requestPayout: (month?: string, percent = 5) =>\n//     postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\n//   updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\n// };\n\n// export const AdminAPI = {\n//   pharmacies: (page = 1, pageSize = 20, q?: string) =>\n//     getAuthJSON(\n//       `/admin/pharmacies?page=${page}&page_size=${pageSize}${\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\n//       }`\n//     ),\n//   affiliates: (page = 1, pageSize = 20, q?: string) =>\n//     getAuthJSON(\n//       `/admin/affiliates?page=${page}&page_size=${pageSize}${\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\n//       }`\n//     ),\n//   approvePharmacy: (\n//     tenantId: string,\n//     applicationId: number,\n//     body?: { issue_temp_password?: boolean; temp_password?: string }\n//   ) =>\n//     postAuthJSON(\n//       `/admin/pharmacies/${applicationId}/approve`,\n//       body || {},\n//       tenantId\n//     ),\n//   rejectPharmacy: (tenantId: string, applicationId: number) =>\n//     postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\n//   verifyPayment: (tenantId: string, code?: string | null) =>\n//     postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\n//   rejectPayment: (tenantId: string, code?: string | null) =>\n//     postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\n//   analyticsOverview: (days = 30) =>\n//     getAuthJSON(`/admin/analytics/overview?days=${days}`),\n//   downloadPharmacyLicense: async (applicationId: number) => {\n//     const res = await authFetch(\n//       `/admin/pharmacies/${applicationId}/license`,\n//       { method: \"GET\" },\n//       true\n//     );\n//     if (!res.ok) {\n//       const text = await res.text().catch(() => \"\");\n//       throw new Error(text || `HTTP ${res.status}`);\n//     }\n//     const blob = await res.blob();\n//     let filename = `license-${applicationId}`;\n//     const disposition = res.headers.get(\"Content-Disposition\") || \"\";\n//     const match = disposition.match(\n//       /filename\\*=UTF-8''([^;]+)|filename=\"?([^\";]+)\"?/i\n//     );\n//     const extracted = match?.[1] || match?.[2];\n//     if (extracted) {\n//       try {\n//         filename = decodeURIComponent(extracted);\n//       } catch {\n//         filename = extracted;\n//       }\n//     }\n//     const url = window.URL.createObjectURL(blob);\n//     const link = document.createElement(\"a\");\n//     link.href = url;\n//     link.download = filename;\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//     window.URL.revokeObjectURL(url);\n//   },\n//   approveAffiliate: (userId: number) =>\n//     postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\n//   rejectAffiliate: (userId: number) =>\n//     postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\n//   listAffiliatePayouts: (status?: string) =>\n//     getAuthJSON(\n//       `/admin/affiliate/payouts${\n//         status ? `?status=${encodeURIComponent(status)}` : \"\"\n//       }`\n//     ),\n//   markPayoutPaid: (payoutId: number) =>\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/mark-paid`, {}),\n//   approvePayout: (payoutId: number) =>\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/approve`, {}),\n//   usage: (days = 30) => getAuthJSON(`/admin/usage?days=${days}`),\n//   audit: (params?: { tenant_id?: string; action?: string; limit?: number }) =>\n//     getAuthJSON(\n//       `/admin/audit${(() => {\n//         const qs = new URLSearchParams();\n//         if (params?.tenant_id) qs.set(\"tenant_id\", params.tenant_id);\n//         if (params?.action) qs.set(\"action\", params.action);\n//         if (params?.limit) qs.set(\"limit\", String(params.limit));\n//         const s = qs.toString();\n//         return s ? `?${s}` : \"\";\n//       })()}`\n//     ),\n// };\n\n// export const StaffAPI = {\n//   createCashier: (tenantId: string, body: any) =>\n//     postAuthJSON(\"/staff\", body, tenantId),\n//   list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\n//   update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\n//     authFetch(\n//       `/staff/${userId}`,\n//       {\n//         method: \"PATCH\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(body),\n//       },\n//       true,\n//       tenantId\n//     ).then(async (res) => {\n//       if (!res.ok) {\n//         const t = await res.text();\n//         throw new Error(t || `HTTP ${res.status}`);\n//       }\n//       return res.json();\n//     }),\n//   remove: (tenantId: string, userId: number) =>\n//     authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\n//       async (res) => {\n//         if (!res.ok) {\n//           const t = await res.text();\n//           throw new Error(t || `HTTP ${res.status}`);\n//         }\n//         return res.json();\n//       }\n//     ),\n// };\n\n// export const BillingAPI = {\n//   submitPaymentCode: (tenantId: string, code: string) =>\n//     postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\n// };\n\n// export const UploadAPI = {\n//   uploadKyc: async (\n//     file: File\n//   ): Promise<{ path: string; size: number; filename: string }> => {\n//     const fd = new FormData();\n//     fd.append(\"file\", file);\n//     return await postMultipart(`/uploads/kyc`, fd);\n//   },\n// };\n\n// export const KYCAPI = {\n//   status: (tenantId: string) => getAuthJSON(`/owner/kyc/status`, tenantId),\n//   update: (tenantId: string, body: any) =>\n//     putAuthJSON(`/owner/kyc/status`, body, tenantId),\n// };\n\n// export const PharmaciesAPI = {\n//   list: (page = 1, pageSize = 20, q?: string) =>\n//     getAuthJSON(\n//       `/pharmacies?page=${page}&page_size=${pageSize}${\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\n//       }`\n//     ),\n//   get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\n//   update: (id: number, body: { name?: string; address?: string }) =>\n//     authFetch(`/pharmacies/${id}`, {\n//       method: \"PATCH\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(body),\n//     }).then(async (res) => {\n//       if (!res.ok) {\n//         const t = await res.text();\n//         throw new Error(t || `HTTP ${res.status}`);\n//       }\n//       return res.json();\n//     }),\n// };\n\n// export const ChatAPI = {\n//   listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\n//   createThread: (tenantId: string, title: string) =>\n//     postAuthJSON(`/chat/threads`, { title }, tenantId),\n//   listMessages: (tenantId: string, threadId: number) =>\n//     getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\n//   sendMessage: (tenantId: string, threadId: number, prompt: string) =>\n//     postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\n//   usage: (tenantId: string, days = 30) =>\n//     getAuthJSON(`/chat/usage?days=${days}`, tenantId),\n//   sendStream: async (\n//     tenantId: string,\n//     threadId: number,\n//     prompt: string,\n//     onEvent: (evt: { event: string; data?: any }) => void\n//   ): Promise<void> => {\n//     const res = await authFetch(\n//       `/chat/threads/${threadId}/messages/stream`,\n//       {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ prompt }),\n//       },\n//       true,\n//       tenantId\n//     );\n//     if (!res.ok || !res.body) {\n//       const t = await res.text().catch(() => \"\");\n//       throw new Error(t || `HTTP ${res.status}`);\n//     }\n//     const reader = res.body.getReader();\n//     const decoder = new TextDecoder();\n//     let buf = \"\";\n//     while (true) {\n//       const { done, value } = await reader.read();\n//       if (done) break;\n//       buf += decoder.decode(value, { stream: true });\n//       let idx;\n//       while ((idx = buf.indexOf(\"\\n\\n\")) !== -1) {\n//         const chunk = buf.slice(0, idx).trim();\n//         buf = buf.slice(idx + 2);\n//         if (chunk.startsWith(\"data:\")) {\n//           try {\n//             const jsonStr = chunk.slice(5).trim();\n//             const obj = JSON.parse(jsonStr);\n//             onEvent(obj);\n//           } catch {}\n//         }\n//       }\n//     }\n//   },\n// };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///home/habtamusemagn/Music/gugu-gaga-/front_end/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///home/habtamusemagn/Music/gugu-gaga-/front_end/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,4SAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":["file:///home/habtamusemagn/Music/gugu-gaga-/front_end/app/%28dashboard%29/layout.tsx"],"sourcesContent":["// Dashboard layout (sidebar, nav)\n\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { getAuthJSON } from \"@/utils/api\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\n\ntype Me = {\n  id: string;\n  email: string;\n  username: string;\n  role?: string;\n  tenant_id?: string;\n  roles?: { role: { name: string } }[];\n  kyc_status?: string | null;\n  subscription_status?: string | null;\n  subscription_blocked?: boolean | null;\n  subscription_next_due_date?: string | null;\n  latest_payment_status?: string | null;\n};\n\nfunction deriveRoles(user: Me | null | undefined): string[] {\n  const roles = new Set<string>();\n  if (user?.role) roles.add(user.role.toLowerCase());\n  user?.roles?.forEach((entry) => {\n    const name = entry?.role?.name;\n    if (name) roles.add(name.toLowerCase());\n  });\n  return Array.from(roles);\n}\n\nexport default function DashboardLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<Me | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [banner, setBanner] = useState<\n    | null\n    | {\n        kind: \"kyc_pending\" | \"payment\";\n        title: string;\n        description: string;\n        actionHref?: string;\n        actionLabel?: string;\n      }\n  >(null);\n  const roles = deriveRoles(user);\n  const roleName = roles[0] || \"\";\n  const isAffiliate = roles.includes(\"affiliate\");\n\n  useEffect(() => {\n    let active = true;\n    async function check() {\n      try {\n        const me = await getAuthJSON<Me>(\"/auth/me\");\n        if (!active) return;\n        setUser(me);\n        // If KYC is pending and user is an owner/staff, keep them on status page only\n        const primaryRole = (me?.role || me?.roles?.[0]?.role?.name || \"\").toLowerCase();\n        if (primaryRole !== \"admin\" && pathname.startsWith(\"/dashboard/admin\")) {\n          router.replace(\"/dashboard/owner\");\n          return;\n        }\n        if ([\"pharmacy_owner\", \"owner\", \"cashier\", \"manager\"].includes(primaryRole)) {\n          const needsKyc = me?.kyc_status !== \"approved\";\n          const needsPayment = me?.kyc_status === \"approved\" && me?.subscription_status && me.subscription_status !== \"active\";\n          const ownerKycPath = \"/dashboard/owner/kyc\";\n          const ownerPaymentPath = \"/dashboard/owner/payment\";\n          if (needsKyc && pathname !== ownerKycPath) {\n            router.replace(ownerKycPath);\n            return;\n          }\n          if (!needsKyc && needsPayment && pathname !== ownerPaymentPath) {\n            router.replace(ownerPaymentPath);\n            return;\n          }\n          if (!needsKyc && !needsPayment && (pathname === ownerKycPath || pathname === ownerPaymentPath)) {\n            router.replace(\"/dashboard/owner\");\n            return;\n          }\n        }\n        // One-time referral track removed (handled server-side)\n      } catch (e: any) {\n        if (!active) return;\n        setError(\"Unauthorized\");\n        router.replace(\"/login\");\n      } finally {\n        if (active) setLoading(false);\n      }\n    }\n    // If no token, redirect immediately\n    if (typeof window !== \"undefined\" && !localStorage.getItem(\"access_token\")) {\n      setLoading(false);\n      router.replace(\"/login\");\n      return;\n    }\n    check();\n    return () => {\n      active = false;\n    };\n  }, [router, pathname]);\n\n  useEffect(() => {\n    if (!user) {\n      setBanner(null);\n      return;\n    }\n    const userRoles = deriveRoles(user);\n    const isOwner = userRoles.includes(\"pharmacy_owner\") || userRoles.includes(\"owner\");\n    const isCashier = userRoles.includes(\"cashier\");\n    if (!(isOwner || isCashier)) {\n      setBanner(null);\n      return;\n    }\n\n    if (user.kyc_status && user.kyc_status !== \"approved\") {\n      setBanner({\n        kind: \"kyc_pending\",\n        title: \"KYC review in progress\",\n        description: \"Thanks for submitting your application. Our compliance team is reviewing your documents — you will receive an email once it is approved.\",\n      });\n      return;\n    }\n\n    const status = user.subscription_status || \"active\";\n    if ([\"awaiting_payment\", \"pending_verification\", \"payment_rejected\"].includes(status)) {\n      const copies: Record<string, { title: string; description: string }> = {\n        awaiting_payment: {\n          title: \"Subscription payment required\",\n          description: \"Complete your first subscription payment and submit the receipt code so the admin team can activate your access.\",\n        },\n        pending_verification: {\n          title: \"Payment awaiting verification\",\n          description: \"We have received your payment code. The admin team is verifying it — you will be notified once access is restored.\",\n        },\n        payment_rejected: {\n          title: \"Payment could not be verified\",\n          description: \"The last payment submission was rejected. Please double-check the receipt code and submit it again.\",\n        },\n      };\n      const copy = copies[status];\n      setBanner({\n        kind: \"payment\",\n        title: copy.title,\n        description: copy.description,\n        actionHref: \"/dashboard/owner/billing\",\n        actionLabel: \"View payment guide\",\n      });\n      return;\n    }\n\n    setBanner(null);\n  }, [user]);\n\n  function logout() {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n    }\n    router.replace(isAffiliate ? \"/auth/affiliate-login\" : \"/login\");\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-pulse text-gray-500\">Loading dashboard...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return null; // Redirected\n  }\n\n  return (\n    <Shell user={user} onLogout={logout}>\n      {banner && (\n        <div className=\"mb-4 p-3 border rounded bg-amber-50 text-amber-800 text-sm flex flex-col md:flex-row md:items-center md:justify-between gap-3\">\n          <div>\n            <div className=\"font-medium\">{banner.title}</div>\n            <div className=\"text-xs md:text-sm\">{banner.description}</div>\n          </div>\n          {banner.actionHref && banner.actionLabel && (\n            <a href={banner.actionHref} className=\"inline-flex items-center justify-center rounded border border-amber-600 px-3 py-1 text-xs font-medium text-amber-700 hover:bg-amber-100\">\n              {banner.actionLabel}\n            </a>\n          )}\n        </div>\n      )}\n      {children}\n    </Shell>\n  );\n}\n\nfunction Shell({\n  user,\n  onLogout,\n  children,\n}: {\n  user: Me | null;\n  onLogout: () => void;\n  children: React.ReactNode;\n}) {\n  const pathname = usePathname();\n  const roles = deriveRoles(user);\n  const baseRole = (user?.role || \"\").toLowerCase();\n  const primaryRole = baseRole || roles[0] || \"\";\n  const isOwner = baseRole === \"pharmacy_owner\" || baseRole === \"owner\" || roles.includes(\"pharmacy_owner\") || roles.includes(\"owner\");\n  const isCashier = baseRole === \"cashier\" || roles.includes(\"cashier\");\n  const isManager = baseRole === \"manager\" || roles.includes(\"manager\");\n  const isAffiliate = baseRole === \"affiliate\" || roles.includes(\"affiliate\");\n  const isAdmin = baseRole === \"admin\";\n  const isOwnerOrManager = isOwner || isManager || isCashier;\n  const subscriptionStatus = user?.subscription_status || \"active\";\n  const requiresPayment = isOwnerOrManager && user?.kyc_status === \"approved\" && subscriptionStatus !== \"active\";\n  const kycPending = isOwnerOrManager && user?.kyc_status && user.kyc_status !== \"approved\";\n\n  const nav = isAffiliate\n    ? [{ href: \"/dashboard/affiliate\", label: \"Affiliate Dashboard\" }]\n    : isAdmin\n    ? [\n        { href: \"/dashboard/admin\", label: \"Admin Overview\" },\n        { href: \"/dashboard/admin/users\", label: \"Users\" },\n        { href: \"/dashboard/admin/pharmacies\", label: \"Pharmacies\" },\n        { href: \"/dashboard/admin/affiliates\", label: \"Affiliates\" },\n        { href: \"/dashboard/admin/payouts\", label: \"Payouts\" },\n        { href: \"/dashboard/admin/audit\", label: \"Audit Log\" },\n      ]\n    : isOwnerOrManager\n    ? (kycPending\n        ? [{ href: \"/dashboard/owner/kyc\", label: \"KYC\" }]\n        : requiresPayment\n        ? [{ href: \"/dashboard/owner/payment\", label: \"Payment\" }]\n        : [\n            { href: \"/dashboard/owner\", label: \"Owner Overview\" },\n            { href: \"/dashboard/owner/billing\", label: \"Billing\" },\n            { href: \"/dashboard/inventory\", label: \"Inventory\" },\n            { href: \"/dashboard/pos\", label: \"POS\" },\n            { href: \"/dashboard/settings\", label: \"Settings\" },\n            { href: \"/dashboard/about\", label: \"About\" },\n          ])\n    : [\n        { href: \"/dashboard\", label: \"Overview\" },\n        { href: \"/dashboard/inventory\", label: \"Inventory\" },\n        { href: \"/dashboard/pos\", label: \"POS\" },\n        { href: \"/dashboard/affiliate\", label: \"Affiliate\" },\n        { href: \"/dashboard/settings\", label: \"Settings\" },\n        { href: \"/dashboard/about\", label: \"About\" },\n      ];\n\n  return (\n    <div className=\"min-h-screen grid grid-cols-12\">\n      <aside className=\"col-span-12 md:col-span-2 border-r p-4 space-y-6 bg-white\">\n        <div className=\"space-y-1\">\n          <div className=\"text-lg font-semibold\">\n            {isAffiliate ? \"Affiliate Portal\" : isAdmin ? \"Admin Console\" : \"Zemen Dashboard\"}\n          </div>\n          <div className=\"text-xs text-gray-500\">\n            {isAffiliate ? \"Track referrals & payouts\" : isAdmin ? \"Manage platform data\" : \"Secure area\"}\n          </div>\n        </div>\n\n        <div className=\"space-y-1 text-sm\">\n          {user ? (\n            <div>\n              <div className=\"font-medium\">{user.username}</div>\n              <div className=\"text-xs text-gray-500 truncate\">{user.email}</div>\n              {primaryRole && <div className=\"text-2xs uppercase text-gray-400\">{primaryRole}</div>}\n            </div>\n          ) : null}\n        </div>\n\n        <nav className=\"space-y-1\">\n          {nav.map((item) => {\n            const active = pathname === item.href || pathname?.startsWith(item.href + \"/\");\n            return (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={\n                  \"block rounded px-3 py-2 text-sm \" +\n                  (active\n                    ? \"bg-emerald-50 text-emerald-700 border border-emerald-200\"\n                    : \"hover:bg-gray-50 text-gray-700\")\n                }\n              >\n                {item.label}\n              </Link>\n            );\n          })}\n        </nav>\n\n        <div className=\"pt-4\">\n          <Button variant=\"outline\" onClick={onLogout} className=\"w-full text-red-600 border-red-200 hover:bg-red-50\">\n            Logout\n          </Button>\n        </div>\n      </aside>\n\n      <div className=\"col-span-12 md:col-span-10 flex flex-col min-h-screen bg-gray-50\">\n        <header className=\"border-b bg-white p-4 flex items-center justify-between\">\n          <div className=\"font-medium\">{nav.find(n => pathname?.startsWith(n.href))?.label || \"Overview\"}</div>\n          {!isAffiliate && !isAdmin && <div className=\"text-sm text-gray-500\">Tenant: {user?.tenant_id || \"N/A\"}</div>}\n        </header>\n        <main className=\"p-6 flex-1\">{children}</main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}