{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,mNAAgB,CACnC,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,EAAE;IAC7B,qBACE,8OAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/utils/api.ts"],"sourcesContent":["export const API_BASE =\r\n  process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000\";\r\nexport const TENANT_HEADER =\r\n  process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\nconst API_BASE_NORMALIZED = API_BASE.replace(/\\/+$/, \"\");\r\nlet API_BASE_PATH = \"\";\r\ntry {\r\n  const parsed = new URL(API_BASE_NORMALIZED);\r\n  API_BASE_PATH = parsed.pathname.replace(/^\\/+/, \"\").replace(/\\/+$/, \"\");\r\n} catch {\r\n  API_BASE_PATH = \"\";\r\n}\r\n\r\nfunction buildHeaders(\r\n  initHeaders?: HeadersInit,\r\n  tenantId?: string\r\n): HeadersInit {\r\n  const headers: Record<string, string> = {\r\n    ...(initHeaders as Record<string, string>),\r\n  };\r\n  if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n  return headers;\r\n}\r\n\r\nfunction resolveApiUrl(path: string): string {\r\n  if (/^https?:\\/\\//i.test(path)) {\r\n    return path;\r\n  }\r\n\r\n  if (path.startsWith(\"?\") || path.startsWith(\"#\")) {\r\n    return `${API_BASE_NORMALIZED}${path}`;\r\n  }\r\n\r\n  const normalizedPath = path.replace(/^\\/+/, \"\");\r\n  let relativePath = normalizedPath;\r\n\r\n  \r\n  if (API_BASE_PATH) {\r\n    const prefix = `${API_BASE_PATH}/`;\r\n    if (relativePath.startsWith(prefix)) {\r\n      relativePath = relativePath.slice(prefix.length);\r\n    } else if (relativePath === API_BASE_PATH) {\r\n      relativePath = \"\";\r\n    }\r\n  }\r\n\r\n  if (!relativePath) {\r\n    return API_BASE_NORMALIZED;\r\n  }\r\n\r\n  return `${API_BASE_NORMALIZED}/${relativePath}`;\r\n}\r\n\r\nexport async function postForm<T = any>(\r\n  path: string,\r\n  data: Record<string, string>,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const body = new URLSearchParams(data);\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(\r\n      { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      tenantId\r\n    ),\r\n    body,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    let parsed: any = null;\r\n    try {\r\n      parsed = await res.json();\r\n    } catch {\r\n      parsed = await res.text().catch(() => null);\r\n    }\r\n\r\n    let msg = \"\";\r\n    if (!parsed) msg = `Request failed with ${res.status}`;\r\n    else if (typeof parsed === \"string\") msg = parsed;\r\n    else if (Array.isArray(parsed)) msg = parsed.join(\", \");\r\n    else if (parsed?.detail) msg = parsed.detail;\r\n    else if (parsed?.message) msg = parsed.message;\r\n    else if (parsed?.error) msg = parsed.error;\r\n    else if (parsed?.errors) {\r\n      msg = Object.keys(parsed.errors)\r\n        .map(\r\n          (k) =>\r\n            `${k}: ${\r\n              Array.isArray(parsed.errors[k])\r\n                ? parsed.errors[k].join(\", \")\r\n                : parsed.errors[k]\r\n            }`\r\n        )\r\n        .join(\" | \");\r\n    } else msg = JSON.stringify(parsed);\r\n\r\n    const err: any = new Error(msg || `Request failed with ${res.status}`);\r\n    err.status = res.status;\r\n    err.body = parsed;\r\n    console.error(\"[postForm] failed\", { path, status: res.status, parsed });\r\n    throw err;\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postJSON<T = any>(\r\n  path: string,\r\n  body: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const requestInit = {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n    body: JSON.stringify(body),\r\n  } satisfies RequestInit;\r\n\r\n  try {\r\n    const res = await fetch(resolveApiUrl(path), requestInit);\r\n\r\n    if (!res.ok) {\r\n      let parsed: any = null;\r\n      let message = \"\";\r\n      try {\r\n        parsed = await res.json();\r\n        if (typeof parsed === \"string\") message = parsed;\r\n        else if (Array.isArray(parsed)) message = parsed.join(\", \");\r\n        else message = parsed?.error || parsed?.detail || parsed?.message || \"\";\r\n        if (!message && parsed) message = JSON.stringify(parsed);\r\n      } catch {\r\n        parsed = null;\r\n        message = await res.text().catch(() => \"\");\r\n      }\r\n\r\n      const error: any = new Error(message || `Request failed with ${res.status}`);\r\n      error.status = res.status;\r\n      if (parsed !== null) error.body = parsed;\r\n      throw error;\r\n    }\r\n\r\n    return (await res.json()) as T;\r\n  } catch (error: any) {\r\n    if (typeof window !== \"undefined\" && !navigator.onLine) {\r\n      const { queueRequest } = await import(\"@/lib/offline/queue\");\r\n      await queueRequest(path, requestInit, {\r\n        tenantId,\r\n        requiresAuth: true,\r\n        description: requestInit.body ? `POST ${path}` : undefined,\r\n      });\r\n      const offlineError: any = new Error(\"Request queued until you are back online.\");\r\n      offlineError.offline = true;\r\n      throw offlineError;\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function putAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const text = await res.text().catch(() => \"\");\r\n    throw new Error(text || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postMultipart<T = any>(\r\n  path: string,\r\n  formData: FormData,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await fetch(resolveApiUrl(path), {\r\n    method: \"POST\",\r\n    headers: buildHeaders(undefined, tenantId),\r\n    body: formData,\r\n  });\r\n\r\n  if (!res.ok) {\r\n    try {\r\n      const data = await res.json();\r\n      const msg = data?.error || data?.detail || JSON.stringify(data);\r\n      throw new Error(msg || `Request failed with ${res.status}`);\r\n    } catch {\r\n      throw new Error(`Request failed with ${res.status}`);\r\n    }\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport function getAccessToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"access_token\");\r\n}\r\n\r\nfunction getTenantId(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"tenant_id\");\r\n}\r\n\r\nfunction getRefreshToken(): string | null {\r\n  if (typeof window === \"undefined\") return null;\r\n  return localStorage.getItem(\"refresh_token\");\r\n}\r\n\r\nasync function refreshTokens(): Promise<boolean> {\r\n  const rt = getRefreshToken();\r\n  if (!rt) return false;\r\n  const res = await fetch(resolveApiUrl(\"/api/v1/auth/refresh\"), {\r\n    method: \"POST\",\r\n    headers: buildHeaders({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify({ refresh_token: rt }),\r\n  });\r\n  if (!res.ok) {\r\n    return false;\r\n  }\r\n  try {\r\n    const data = (await res.json()) as {\r\n      access_token: string;\r\n      refresh_token: string;\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n    }\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function authFetch<T>(\r\n  path: string,\r\n  init?: RequestInit,\r\n  retry = true,\r\n  tenantId?: string\r\n): Promise<Response> {\r\n  const token = getAccessToken();\r\n  const activeTenantId = tenantId ?? getTenantId() ?? undefined;\r\n  const headers: HeadersInit = buildHeaders(\r\n    {\r\n      ...(init?.headers || {}),\r\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    },\r\n    activeTenantId\r\n  );\r\n  let res = await fetch(resolveApiUrl(path), { ...(init || {}), headers });\r\n\r\n  if (res.status === 401 && retry) {\r\n    const ok = await refreshTokens();\r\n    if (ok) {\r\n      const newToken = getAccessToken();\r\n      const retryTenantId = tenantId ?? getTenantId() ?? undefined;\r\n      const retryHeaders: HeadersInit = buildHeaders(\r\n        {\r\n          ...(init?.headers || {}),\r\n          ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n        },\r\n        retryTenantId\r\n      );\r\n      res = await fetch(resolveApiUrl(path), {\r\n        ...(init || {}),\r\n        headers: retryHeaders,\r\n      });\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport async function getAuthJSON<T = any>(\r\n  path: string,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(path, undefined, true, tenantId);\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n  return (await res.json()) as T;\r\n}\r\n\r\nexport async function postAuthJSON<T = any>(\r\n  path: string,\r\n  bodyData: any,\r\n  tenantId?: string\r\n): Promise<T> {\r\n  const res = await authFetch(\r\n    path,\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bodyData),\r\n    },\r\n    true,\r\n    tenantId\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const data = await res.text().catch(() => \"\");\r\n    throw new Error(data || `Request failed with ${res.status}`);\r\n  }\r\n\r\n  return (await res.json()) as T;\r\n}\r\n\r\n// ----------------- AuthAPI -----------------\r\nexport type AuthProfile = {\r\n  id: number;\r\n  email: string;\r\n  username?: string | null;\r\n  first_name?: string | null;\r\n  last_name?: string | null;\r\n  phone?: string | null;\r\n  role?: string | null;\r\n  tenant_id?: string | null;\r\n  kyc_status?: string | null;\r\n  subscription_status?: string | null;\r\n  subscription_blocked?: boolean | null;\r\n  subscription_next_due_date?: string | null;\r\n  latest_payment_status?: string | null;\r\n};\r\n\r\nexport type AuthTokenResponse = {\r\n  access_token: string;\r\n  refresh_token: string;\r\n  token_type: string;\r\n  session_id: number;\r\n};\r\n\r\nexport type SessionInfo = {\r\n  id: number;\r\n  created_at: string;\r\n  last_seen_at: string;\r\n  expires_at: string;\r\n  revoked_at?: string | null;\r\n  is_revoked: boolean;\r\n  user_agent?: string | null;\r\n  ip_address?: string | null;\r\n  is_current: boolean;\r\n};\r\n\r\nexport type TenantActivityRecord = {\r\n  id: number;\r\n  tenant_id: string;\r\n  actor_user_id?: number | null;\r\n  action: string;\r\n  message: string;\r\n  target_type?: string | null;\r\n  target_id?: string | null;\r\n  metadata?: Record<string, unknown> | null;\r\n  created_at: string;\r\n};\r\n\r\nexport const AuthAPI = {\r\n  registerAffiliate: (body: any) => postJSON(\"/api/v1/auth/register/affiliate\", body),\r\n  registerPharmacy: (body: any) => postJSON(\"/api/v1/auth/register/pharmacy\", body),\r\n\r\n  registerVerify: async (email: string, code: string) => {\r\n    try {\r\n      return await postForm(\"/api/v1/auth/register/verify\", { email, code });\r\n    } catch (err: any) {\r\n      if (err?.status === 422) {\r\n        console.warn(\"[AuthAPI.registerVerify] 422, retrying with JSON\", {\r\n          body: err.body,\r\n        });\r\n        try {\r\n          return await postJSON(\"/api/v1/auth/register/verify\", { email, code });\r\n        } catch (err2: any) {\r\n          const e: any = new Error(\r\n            err2?.message || err?.message || \"Verification failed\"\r\n          );\r\n          e.original = err;\r\n          e.retry = err2;\r\n          throw e;\r\n        }\r\n      }\r\n      throw err;\r\n    }\r\n  },\r\n\r\n  verifyRegistration: (email: string, code: string) =>\r\n    postForm(\"/api/v1/auth/register/verify\", { email, code }),\r\n  login: (email: string, password: string, tenantId?: string) =>\r\n    postForm<AuthTokenResponse>(\r\n      \"/api/v1/auth/login\",\r\n      {\r\n        username: email,\r\n        password,\r\n        grant_type: \"password\",\r\n      },\r\n      tenantId\r\n    ).then(\r\n      (resp) => {\r\n        if (typeof window !== \"undefined\") {\r\n          localStorage.setItem(\"access_token\", resp.access_token);\r\n          localStorage.setItem(\"refresh_token\", resp.refresh_token);\r\n          if (tenantId) {\r\n            localStorage.setItem(\"tenant_id\", tenantId);\r\n          }\r\n        }\r\n        return resp;\r\n      }\r\n    ),\r\n  loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n    postForm(\r\n      \"/api/v1/auth/login/request-code\",\r\n      { username: email, password, grant_type: \"password\" },\r\n      tenantId\r\n    ),\r\n  loginVerify: (email: string, code: string, tenantId?: string) =>\r\n    postJSON<AuthTokenResponse>(\"/api/v1/auth/login/verify\", { email, code }, tenantId).then((resp) => {\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"access_token\", resp.access_token);\n        localStorage.setItem(\"refresh_token\", resp.refresh_token);\n        if (tenantId) {\n          localStorage.setItem(\"tenant_id\", tenantId);\n        }\n      }\n      return resp;\n    }),\n  refresh: (refreshToken: string) =>\n    postJSON<AuthTokenResponse>(\"/api/v1/auth/refresh\", { refresh_token: refreshToken }),\n  sessions: () => getAuthJSON<SessionInfo[]>(\"/api/v1/auth/sessions\"),\n  revokeSession: (sessionId: number) =>\n    authFetch(`/api/v1/auth/sessions/${sessionId}`, { method: \"DELETE\" }).then((res) => {\n      if (!res.ok) throw new Error(\"Failed to revoke session\");\n    }),\n  changePassword: (body: { current_password: string; new_password: string }) =>\n    postAuthJSON<{ status: string }>(\"/api/v1/auth/change-password\", body),\n  me: () =>\n    getAuthJSON<AuthProfile>(\"/api/v1/auth/me\").then((profile) => {\n      if (typeof window !== \"undefined\") {\n        if (profile?.tenant_id) {\n          localStorage.setItem(\"tenant_id\", profile.tenant_id);\n        }\n      }\n      return profile;\n    }),\n};\n\nexport const TenantAPI = {\n  activity: async (params?: { action?: string[]; limit?: number; offset?: number }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.limit) searchParams.set(\"limit\", params.limit.toString());\n    if (params?.offset) searchParams.set(\"offset\", params.offset.toString());\n    params?.action?.forEach((action) => searchParams.append(\"action\", action));\n    const qs = searchParams.toString();\n    const url = `/api/v1/tenant/activity${qs ? `?${qs}` : \"\"}`;\n    const tenantId = getTenantId() ?? undefined;\n    const res = await authFetch(url, undefined, true, tenantId);\n    if (res.status === 404 || res.status === 204) {\n      return [];\n    }\n    if (!res.ok) {\n      const text = await res.text().catch(() => \"\");\n      throw new Error(text || `Request failed with ${res.status}`);\n    }\n    const contentType = res.headers.get(\"content-type\") || \"\";\n    if (!contentType.includes(\"application/json\")) {\n      return [];\n    }\n    try {\n      return (await res.json()) as TenantActivityRecord[];\n    } catch {\n      return [];\n    }\n  },\n};\n\n// ----------------- IntegrationsAPI -----------------\nexport type IntegrationProviderOut = {\n  key: string;\n  name: string;\n  category: string;\n  capability: {\n    resources: string[];\n    supports_webhooks: boolean;\n    supports_delta_sync: boolean;\n  };\n  requires_oauth: boolean;\n};\n\nexport type IntegrationConnectionOut = {\n  id: number;\n  tenant_id: string;\n  provider_key: string;\n  provider_name: string;\n  display_name: string;\n  status: string;\n  created_at: string;\n  updated_at: string;\n  last_synced_at?: string | null;\n  resource_scope?: string[] | null;\n};\n\nexport type IntegrationOAuthStartResponse = {\n  authorization_url: string;\n  state: string;\n  expires_in_seconds: number;\n};\n\nexport type IntegrationSyncJobOut = {\n  id: number;\n  connection_id: number;\n  direction: string;\n  resource: string;\n  status: string;\n  started_at?: string | null;\n  finished_at?: string | null;\n  error_message?: string | null;\n};\n\nexport const IntegrationsAPI = {\n  listProviders: () => getAuthJSON<IntegrationProviderOut[]>(\"/api/v1/integrations/providers\"),\n  listConnections: (tenantId: string) =>\n    getAuthJSON<IntegrationConnectionOut[]>(\"/api/v1/integrations/connections\", tenantId),\n  startOAuth: (tenantId: string, providerKey: string, resources?: string[]) =>\n    postAuthJSON<IntegrationOAuthStartResponse>(\n      \"/api/v1/integrations/oauth/start\",\n      { provider_key: providerKey, resources, display_name: undefined },\n      tenantId\n    ),\n  completeOAuth: (code: string, state: string, providerKey?: string) =>\n    postJSON<IntegrationConnectionOut>(\n      \"/api/v1/integrations/oauth/callback\",\n      { code, state, provider_key: providerKey }\n    ),\n  disconnect: (tenantId: string, connectionId: number) =>\n    authFetch(`/api/v1/integrations/connections/${connectionId}`, { method: \"DELETE\" }, true, tenantId).then(\n      async (res) => {\n        if (!res.ok) {\n          const text = await res.text().catch(() => \"\");\n          throw new Error(text || `HTTP ${res.status}`);\n        }\n        return res.json();\n      }\n    ),\n  triggerSync: (tenantId: string, connectionId: number, resource: string, direction: \"incoming\" | \"outgoing\") =>\n    postAuthJSON<IntegrationSyncJobOut>(\n      `/api/v1/integrations/connections/${connectionId}/sync`,\n      { resource, direction },\n      tenantId\n    ),\n};\n\nexport const AffiliateAPI = {\n  getLinks: () => getAuthJSON(\"/api/v1/affiliate/register-link\"),\n  createLink: () => getAuthJSON(\"/api/v1/affiliate/register-link?create_new=true\"),\n  deactivate: (token: string) =>\n    postAuthJSON(\n      `/api/v1/affiliate/links/${encodeURIComponent(token)}/deactivate`,\n      {}\n    ),\n  rotate: (token: string) =>\n    postAuthJSON(`/api/v1/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\n  dashboard: () => getAuthJSON(\"/api/v1/affiliate/dashboard\"),\n  payouts: (status?: string) =>\n    getAuthJSON(\n      `/api/v1/affiliate/payouts${\n        status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\n      }`\n    ),\n  requestPayout: (month?: string, percent = 5) =>\n    postAuthJSON(\"/api/v1/affiliate/payouts/request\", { month, percent }),\n  updateProfile: (body: any) => postAuthJSON(\"/api/v1/affiliate/profile\", body),\n};\n\n// ----------------- AdminAPI -----------------\nexport const AdminAPI = {\n  analyticsOverview: (days = 30) =>\n    getAuthJSON(`/api/v1/admin/analytics/overview?days=${days}`),\n  pharmacySummary: () => getAuthJSON(`/api/v1/admin/pharmacies/summary`),\n  pharmacies: (page = 1, pageSize = 20, q = \"\") =>\n    getAuthJSON(\n      `/api/v1/admin/pharmacies?page=${page}&page_size=${pageSize}&q=${encodeURIComponent(q)}`\n    ),\n  approvePharmacy: (tenantId: string, applicationId: number, body?: any) =>\n    postAuthJSON(`/api/v1/admin/pharmacies/${applicationId}/approve`, body || {}, tenantId),\n  rejectPharmacy: (tenantId: string, applicationId: number) =>\n    postAuthJSON(`/api/v1/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\n  verifyPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/api/v1/admin/payments/verify`, { code: code || null }, tenantId),\n  rejectPayment: (tenantId: string, code?: string | null) =>\n    postAuthJSON(`/api/v1/admin/payments/reject`, { code: code || null }, tenantId),\n  approveAffiliate: (userId: number) => postAuthJSON(`/api/v1/admin/affiliates/${userId}/approve`, {}),\n  rejectAffiliate: (userId: number) => postAuthJSON(`/api/v1/admin/affiliates/${userId}/reject`, {}),\n};\n\n// ----------------- StaffAPI -----------------\nexport const StaffAPI = {\n  createCashier: (\n    tenantId: string,\n    body: {\n      email: string;\n      password: string;\n      phone?: string;\n      role?: string;\n      assigned_branch_id?: number | null;\n    }\n  ) => postAuthJSON(\"/api/v1/staff\", body, tenantId),\n  list: (tenantId: string) => getAuthJSON(\"/api/v1/staff\", tenantId),\n  update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\n    authFetch(\n      `/api/v1/staff/${userId}`,\n      {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      },\n      true,\n      tenantId\n    ).then(async (res) => {\n      if (!res.ok) {\n        const text = await res.text().catch(() => \"\");\n        throw new Error(text || `Request failed with ${res.status}`);\n      }\n      return res.json();\n    }),\n  remove: (tenantId: string, userId: number) =>\n    authFetch(\n      `/api/v1/staff/${userId}`,\n      { method: \"DELETE\" },\n      true,\n      tenantId\n    ).then(async (res) => {\n      if (!res.ok) {\n        const text = await res.text().catch(() => \"\");\n        throw new Error(text || `Request failed with ${res.status}`);\n      }\n      return res.json();\n    }),\n};\n\n// ----------------- Pharmacy models -----------------\nexport type PharmacyOut = {\n  id: number;\n  tenant_id: string;\n  name: string;\n  address?: string | null;\n};\n\nexport type PharmaciesListResponse = {\n  page: number;\n  page_size: number;\n  total: number;\n  items: PharmacyOut[];\n};\n\n// ----------------- BillingAPI -----------------\nexport const BillingAPI = {\n  submitPaymentCode: (tenantId: string, code: string) =>\n    postAuthJSON(\"/api/v1/owner/billing/payment-code\", { code }, tenantId),\n};\n\n// ----------------- UploadAPI -----------------\nexport const UploadAPI = {\n  uploadKyc: async (file: File) => {\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    return postMultipart(\"/uploads/kyc\", fd);\n  },\n};\n\n// ----------------- KYCAPI -----------------\nexport const KYCAPI = {\n  status: (tenantId: string) => getAuthJSON(\"/api/v1/owner/kyc/status\", tenantId),\n  update: (tenantId: string, body: any) =>\n    putAuthJSON(\"/api/v1/owner/kyc/status\", body, tenantId),\n};\n\n// ----------------- PharmaciesAPI -----------------\nexport const PharmaciesAPI = {\n  list: (\n    tenantId?: string,\n    params?: { page?: number; page_size?: number; q?: string }\n  ): Promise<PharmaciesListResponse> => {\n    const search = new URLSearchParams();\n    search.set(\"page\", String(params?.page ?? 1));\n    search.set(\"page_size\", String(params?.page_size ?? 20));\n    if (params?.q) search.set(\"q\", params.q);\n    const queryString = search.toString();\n    const path = `/api/v1/pharmacies${queryString ? `?${queryString}` : \"\"}`;\n    return getAuthJSON<PharmaciesListResponse>(path, tenantId);\n  },\n  get: (id: number, tenantId?: string) =>\n    getAuthJSON<PharmacyOut>(`/api/v1/pharmacies/${id}`, tenantId),\n  update: (id: number, body: { name?: string; address?: string }, tenantId?: string) =>\n    authFetch(`/api/v1/pharmacies/${id}`, {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    }, true, tenantId).then(async (res) => {\n      if (!res.ok) throw new Error(await res.text());\n      return (await res.json()) as PharmacyOut;\n    }),\n};\n\n// ----------------- ChatAPI -----------------\nexport const ChatAPI = {\n  listThreads: (tenantId: string) => getAuthJSON(`/api/v1/chat/threads`, tenantId),\n  createThread: (tenantId: string, title?: string) =>\n    postAuthJSON(\n      `/api/v1/chat/threads`,\n      title ? { title } : {},\n      tenantId\n    ),\n  listMessages: (tenantId: string, threadId: number) =>\n    getAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, tenantId),\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\n    postAuthJSON(`/api/v1/chat/threads/${threadId}/messages`, { prompt }, tenantId),\n  usage: (tenantId: string, days = 30) =>\n    getAuthJSON(`/api/v1/chat/usage?days=${days}`, tenantId),\n};\n\nexport type OwnerAnalyticsResponse = {\n  horizon: string;\n  totals: {\n    total_revenue: number;\n    average_ticket: number;\n    units_sold: number;\n    sale_count: number;\n    active_cashiers: number;\n    total_customers: number;\n    active_customers: number;\n    upcoming_refills: number;\n  };\n  deltas: {\n    revenue_vs_last_period: number;\n    avg_ticket_vs_last_period: number;\n    units_vs_last_period: number;\n  };\n  revenue_trend: { period: string; revenue: number }[];\n  top_products: { name: string; revenue: number; quantity: number }[];\n  inventory_health: { label: string; count: number }[];\n  recent_payments: {\n    id: number;\n    status: string;\n    status_label: string;\n    code?: string | null;\n    created_at: string;\n    created_at_formatted: string;\n  }[];\n  branch_comparison: {\n    branch: string | null;\n    revenue: number;\n    sale_count: number;\n    units_sold: number;\n  }[];\n  staff_productivity: {\n    user_id: number;\n    name: string;\n    email?: string | null;\n    role: string;\n    total_sales: number;\n    transactions: number;\n    units_sold: number;\n  }[];\n  staff_activity: {\n    id: number;\n    action: string;\n    actor_user_id?: number | null;\n    actor_name?: string | null;\n    actor_role?: string | null;\n    target_type?: string | null;\n    target_id?: string | null;\n    metadata?: Record<string, any> | null;\n    created_at: string;\n  }[];\n};\n\nexport const OwnerAnalyticsAPI = {\n  overview: (\n    tenantId: string,\n    options?: { horizon?: string; trendWeeks?: number }\n  ) => {\n    const params = new URLSearchParams();\n    if (options?.horizon) params.set(\"horizon\", options.horizon);\n    if (options?.trendWeeks) params.set(\"trend_weeks\", String(options.trendWeeks));\n    const query = params.toString();\n    const path = `/api/v1/owner/analytics/overview${query ? `?${query}` : \"\"}`;\n    return getAuthJSON<OwnerAnalyticsResponse>(path, tenantId);\n  },\n};\n\n// ----------------- OwnerChatAPI -----------------\nexport type OwnerChatThread = {\n  id: number;\n  title: string;\n  created_at: string;\n  updated_at: string;\n};\n\nexport type OwnerChatMessage = {\n  id: number;\n  thread_id: number;\n  role: \"owner\" | \"assistant\";\n  content: string;\n  created_at: string;\n};\n\r\nexport const OwnerChatAPI = {\r\n  listThreads: (tenantId: string) => getAuthJSON<OwnerChatThread[]>(\"/api/v1/owner/chat/threads\", tenantId),\r\n  createThread: (tenantId: string, title: string) =>\r\n    postAuthJSON<OwnerChatThread>(\"/api/v1/owner/chat/threads\", { title }, tenantId),\r\n  listMessages: (tenantId: string, threadId: number) =>\r\n    getAuthJSON<OwnerChatMessage[]>(`/api/v1/owner/chat/threads/${threadId}/messages`, tenantId),\r\n  sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n    postAuthJSON<OwnerChatMessage>(`/api/v1/owner/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n};\r\n\r\n// ----------------- InventoryAPI -----------------\r\nexport type InventoryItem = {\r\n  id: number;\r\n  medicine_id: number;\r\n  medicine_name: string;\r\n  sku?: string | null;\r\n  branch?: string | null;\r\n  quantity: number;\r\n  pack_size: number;\r\n  packs: number;\r\n  singles: number;\r\n  reorder_level: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  sell_price?: number | null;\r\n};\r\n\r\nexport type InventoryListResponse = {\r\n  page: number;\r\n  page_size: number;\r\n  total: number;\r\n  items: InventoryItem[];\r\n};\r\n\r\ntype InventoryListOptions = {\r\n  q?: string;\r\n  branch?: string;\r\n  expiringInDays?: number;\r\n  lowStockOnly?: boolean;\r\n  page?: number;\r\n  pageSize?: number;\r\n};\r\n\r\ntype InventoryUpdatePayload = {\r\n  quantity?: number;\r\n  reorder_level?: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  sell_price?: number | null;\r\n};\r\n\r\ntype InventoryCreatePayload = {\r\n  medicine_id: number;\r\n  branch?: string | null;\r\n  pack_size: number;\r\n  packs_count?: number;\r\n  singles_count?: number;\r\n  expiry_date?: string | null;\r\n  lot_number?: string | null;\r\n  purchase_price?: number | null;\r\n  sell_price?: number | null;\r\n  reorder_level?: number;\r\n};\r\n\r\nexport const InventoryAPI = {\r\n  list: (tenantId?: string, options?: InventoryListOptions) => {\r\n    const params = new URLSearchParams();\r\n    if (options?.q) params.set(\"q\", options.q);\r\n    if (options?.branch) params.set(\"branch\", options.branch);\r\n    if (typeof options?.expiringInDays === \"number\") {\r\n      params.set(\"expiring_in_days\", String(options.expiringInDays));\r\n    }\r\n    if (options?.lowStockOnly) params.set(\"low_stock_only\", \"true\");\r\n    if (options?.page) params.set(\"page\", String(options.page));\r\n    if (options?.pageSize) params.set(\"page_size\", String(options.pageSize));\r\n    const query = params.toString();\r\n    const path = `/api/v1/inventory/items${query ? `?${query}` : \"\"}`;\r\n    return getAuthJSON<InventoryListResponse>(path, tenantId);\r\n  },\r\n  create: async (tenantId: string | undefined, payload: InventoryCreatePayload) => {\r\n    const form = new URLSearchParams();\r\n    form.set(\"medicine_id\", String(payload.medicine_id));\r\n    form.set(\"pack_size\", String(Math.max(1, payload.pack_size || 1)));\r\n    if (payload.branch) {\r\n      form.set(\"branch\", payload.branch);\r\n    }\r\n    if (typeof payload.packs_count === \"number\") {\r\n      form.set(\"packs_count\", String(Math.max(0, payload.packs_count)));\r\n    }\r\n    if (typeof payload.singles_count === \"number\") {\r\n      form.set(\"singles_count\", String(Math.max(0, payload.singles_count)));\r\n    }\r\n    if (payload.expiry_date) {\r\n      form.set(\"expiry_date\", payload.expiry_date);\r\n    }\r\n    if (payload.lot_number) {\r\n      form.set(\"lot_number\", payload.lot_number);\r\n    }\r\n    if (typeof payload.purchase_price === \"number\") {\r\n      form.set(\"purchase_price\", String(payload.purchase_price));\r\n    }\r\n    if (typeof payload.sell_price === \"number\") {\r\n      form.set(\"sell_price\", String(payload.sell_price));\r\n    }\r\n    if (typeof payload.reorder_level === \"number\") {\r\n      form.set(\"reorder_level\", String(Math.max(0, payload.reorder_level)));\r\n    }\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: form.toString(),\r\n      },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n  update: async (tenantId: string | undefined, itemId: number, payload: InventoryUpdatePayload) => {\r\n    const form = new URLSearchParams();\r\n    if (typeof payload.quantity === \"number\") {\r\n      form.set(\"quantity\", String(payload.quantity));\r\n    }\r\n    if (typeof payload.reorder_level === \"number\") {\r\n      form.set(\"reorder_level\", String(Math.max(0, payload.reorder_level)));\r\n    }\r\n    if (typeof payload.sell_price === \"number\") {\r\n      form.set(\"sell_price\", String(payload.sell_price));\r\n    }\r\n    if (payload.expiry_date !== undefined) {\r\n      form.set(\"expiry_date\", payload.expiry_date || \"\");\r\n    }\r\n    if (payload.lot_number !== undefined) {\r\n      form.set(\"lot_number\", payload.lot_number || \"\");\r\n    }\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items/${itemId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: form.toString(),\r\n      },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n  remove: async (tenantId: string | undefined, itemId: number) => {\r\n    const res = await authFetch(\r\n      `/api/v1/inventory/items/${itemId}`,\r\n      { method: \"DELETE\" },\r\n      true,\r\n      tenantId\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error((await res.text().catch(() => \"\")) || `Request failed with ${res.status}`);\r\n    }\r\n    return res.json();\r\n  },\r\n};\r\n\r\n// ----------------- MedicinesAPI -----------------\r\nexport type MedicineListItem = {\r\n  id: number;\r\n  name: string;\r\n  sku?: string | null;\r\n  category?: string | null;\r\n  manufacturer?: string | null;\r\n};\r\n\r\nexport type MedicinesListResponse = {\r\n  page: number;\r\n  page_size: number;\r\n  total: number;\r\n  items: MedicineListItem[];\r\n};\r\n\r\ntype MedicinesListOptions = {\r\n  q?: string;\r\n  page?: number;\r\n  pageSize?: number;\r\n};\r\n\r\nexport const MedicinesAPI = {\r\n  list: (tenantId?: string, options?: MedicinesListOptions) => {\r\n    const query = new URLSearchParams();\r\n    if (options?.q) {\r\n      query.set(\"q\", options.q);\r\n    }\r\n    if (options?.page) {\r\n      query.set(\"page\", String(options.page));\r\n    }\r\n    if (options?.pageSize) {\r\n      query.set(\"page_size\", String(Math.min(200, Math.max(1, options.pageSize))));\r\n    }\r\n    const path = `/api/v1/medicines${query.toString() ? `?${query.toString()}` : \"\"}`;\r\n    return getAuthJSON<MedicinesListResponse>(path, tenantId);\r\n  },\r\n};\r\n\r\n// ----------------- SalesAPI -----------------\r\ntype SaleLineInput = {\r\n  name_or_sku: string;\r\n  quantity_units: number;\r\n  unit_price?: number;\r\n};\r\n\r\nexport const SalesAPI = {\r\n  pos: (\r\n    tenantId: string | undefined,\r\n    payload: { lines: SaleLineInput[]; branch?: string | null }\r\n  ) => {\r\n    const { lines, branch } = payload;\r\n    const query = branch ? `?branch=${encodeURIComponent(branch)}` : \"\";\r\n    const path = `/api/v1/sales/pos${query}`;\r\n    return postAuthJSON<{ id: number; total: number }>(path, lines, tenantId);\r\n  },\r\n};\r\n\r\n// Other API objects (AffiliateAPI, AdminAPI, etc.) remain unchanged\r\n\r\n// export const API_BASE =\r\n//   process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:8000/api/v1\";\r\n// export const TENANT_HEADER =\r\n//   process.env.NEXT_PUBLIC_TENANT_HEADER || \"X-Tenant-ID\";\r\n\r\n// function buildHeaders(\r\n//   initHeaders?: HeadersInit,\r\n//   tenantId?: string\r\n// ): HeadersInit {\r\n//   const headers: Record<string, string> = {\r\n//     ...(initHeaders as Record<string, string>),\r\n//   };\r\n//   if (tenantId) headers[TENANT_HEADER] = tenantId;\r\n//   return headers;\r\n// }\r\n\r\n// export async function putAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postForm<T = any>(\r\n//   path: string,\r\n//   data: Record<string, string>,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const body = new URLSearchParams(data);\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(\r\n//       {\r\n//         \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n//       },\r\n//       tenantId\r\n//     ),\r\n//     body,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postJSON<T = any>(\r\n//   path: string,\r\n//   body: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders({ \"Content-Type\": \"application/json\" }, tenantId),\r\n//     body: JSON.stringify(body),\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postMultipart<T = any>(\r\n//   path: string,\r\n//   formData: FormData,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await fetch(`${API_BASE}${path}`, {\r\n//     method: \"POST\",\r\n//     headers: buildHeaders(undefined, tenantId),\r\n//     body: formData,\r\n//   });\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       let message = `Request failed with ${res.status}`;\r\n//       throw new Error(message);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export function getAccessToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"access_token\");\r\n// }\r\n\r\n// function getRefreshToken(): string | null {\r\n//   if (typeof window === \"undefined\") return null;\r\n//   return localStorage.getItem(\"refresh_token\");\r\n// }\r\n\r\n// async function refreshTokens(): Promise<boolean> {\r\n//   const rt = getRefreshToken();\r\n//   if (!rt) return false;\r\n//   const url = `${API_BASE}/api/v1/auth/refresh?refresh_token=${encodeURIComponent(\r\n//     rt\r\n//   )}`;\r\n//   const res = await fetch(url, { method: \"POST\" });\r\n//   if (!res.ok) return false;\r\n//   try {\r\n//     const data = (await res.json()) as {\r\n//       access_token: string;\r\n//       refresh_token: string;\r\n//       token_type: string;\r\n//       expires_in: number;\r\n//     };\r\n//     if (typeof window !== \"undefined\") {\r\n//       localStorage.setItem(\"access_token\", data.access_token);\r\n//       localStorage.setItem(\"refresh_token\", data.refresh_token);\r\n//     }\r\n//     return true;\r\n//   } catch {\r\n//     return false;\r\n//   }\r\n// }\r\n\r\n// async function authFetch(\r\n//   path: string,\r\n//   init?: RequestInit,\r\n//   retry = true,\r\n//   tenantId?: string\r\n// ): Promise<Response> {\r\n//   const token = getAccessToken();\r\n//   const headers: HeadersInit = buildHeaders(\r\n//     {\r\n//       ...(init?.headers || {}),\r\n//       ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n//     },\r\n//     tenantId\r\n//   );\r\n//   const res = await fetch(`${API_BASE}${path}`, { ...(init || {}), headers });\r\n//   if (res.status === 401 && retry) {\r\n//     const ok = await refreshTokens();\r\n//     if (ok) {\r\n//       const newToken = getAccessToken();\r\n//       const retryHeaders: HeadersInit = buildHeaders(\r\n//         {\r\n//           ...(init?.headers || {}),\r\n//           ...(newToken ? { Authorization: `Bearer ${newToken}` } : {}),\r\n//         },\r\n//         tenantId\r\n//       );\r\n//       return fetch(`${API_BASE}${path}`, {\r\n//         ...(init || {}),\r\n//         headers: retryHeaders,\r\n//       });\r\n//     }\r\n//   }\r\n//   return res;\r\n// }\r\n\r\n// export async function getAuthJSON<T = any>(\r\n//   path: string,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(path, undefined, true, tenantId);\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// export async function postAuthJSON<T = any>(\r\n//   path: string,\r\n//   bodyData: any,\r\n//   tenantId?: string\r\n// ): Promise<T> {\r\n//   const res = await authFetch(\r\n//     path,\r\n//     {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(bodyData),\r\n//     },\r\n//     true,\r\n//     tenantId\r\n//   );\r\n//   if (!res.ok) {\r\n//     try {\r\n//       const data = await res.json();\r\n//       const msg = data?.error || data?.detail || JSON.stringify(data);\r\n//       throw new Error(msg || `Request failed with ${res.status}`);\r\n//     } catch {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `Request failed with ${res.status}`);\r\n//     }\r\n//   }\r\n//   return (await res.json()) as T;\r\n// }\r\n\r\n// // Convenience wrappers for key flows\r\n// export const AuthAPI = {\r\n//   registerAffiliate: (body: any) => postJSON(\"/auth/register/affiliate\", body),\r\n//   registerPharmacy: (body: any) => postJSON(\"/auth/register/pharmacy\", body),\r\n//   registerVerify: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   verifyRegistration: (email: string, code: string) =>\r\n//     postForm(\"/auth/register/verify\", { email, code }),\r\n//   login: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\"/auth/login\", { username: email, password }, tenantId),\r\n//   loginRequestCode: (email: string, password: string, tenantId?: string) =>\r\n//     postForm(\r\n//       \"/auth/login/request-code\",\r\n//       { username: email, password },\r\n//       tenantId\r\n//     ),\r\n//   loginVerify: (email: string, code: string, tenantId?: string) =>\r\n//     postJSON(\"/auth/login/verify\", { email, code }, tenantId),\r\n//   me: () => getAuthJSON(\"/auth/me\"),\r\n// };\r\n\r\n// export const AffiliateAPI = {\r\n//   getLinks: () => getAuthJSON(\"/affiliate/register-link\"),\r\n//   createLink: () => getAuthJSON(\"/affiliate/register-link?create_new=true\"),\r\n//   deactivate: (token: string) =>\r\n//     postAuthJSON(\r\n//       `/affiliate/links/${encodeURIComponent(token)}/deactivate`,\r\n//       {}\r\n//     ),\r\n//   rotate: (token: string) =>\r\n//     postAuthJSON(`/affiliate/links/${encodeURIComponent(token)}/rotate`, {}),\r\n//   dashboard: () => getAuthJSON(\"/affiliate/dashboard\"),\r\n//   payouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/affiliate/payouts${\r\n//         status ? `?status_filter=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   requestPayout: (month?: string, percent = 5) =>\r\n//     postAuthJSON(\"/affiliate/payouts/request\", { month, percent }),\r\n//   updateProfile: (body: any) => postAuthJSON(\"/affiliate/profile\", body),\r\n// };\r\n\r\n// export const AdminAPI = {\r\n//   pharmacies: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   affiliates: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliates?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   approvePharmacy: (\r\n//     tenantId: string,\r\n//     applicationId: number,\r\n//     body?: { issue_temp_password?: boolean; temp_password?: string }\r\n//   ) =>\r\n//     postAuthJSON(\r\n//       `/admin/pharmacies/${applicationId}/approve`,\r\n//       body || {},\r\n//       tenantId\r\n//     ),\r\n//   rejectPharmacy: (tenantId: string, applicationId: number) =>\r\n//     postAuthJSON(`/admin/pharmacies/${applicationId}/reject`, {}, tenantId),\r\n//   verifyPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/verify`, { code: code || null }, tenantId),\r\n//   rejectPayment: (tenantId: string, code?: string | null) =>\r\n//     postAuthJSON(`/admin/payments/reject`, { code: code || null }, tenantId),\r\n//   analyticsOverview: (days = 30) =>\r\n//     getAuthJSON(`/admin/analytics/overview?days=${days}`),\r\n//   downloadPharmacyLicense: async (applicationId: number) => {\r\n//     const res = await authFetch(\r\n//       `/admin/pharmacies/${applicationId}/license`,\r\n//       { method: \"GET\" },\r\n//       true\r\n//     );\r\n//     if (!res.ok) {\r\n//       const text = await res.text().catch(() => \"\");\r\n//       throw new Error(text || `HTTP ${res.status}`);\r\n//     }\r\n//     const blob = await res.blob();\r\n//     let filename = `license-${applicationId}`;\r\n//     const disposition = res.headers.get(\"Content-Disposition\") || \"\";\r\n//     const match = disposition.match(\r\n//       /filename\\*=UTF-8''([^;]+)|filename=\"?([^\";]+)\"?/i\r\n//     );\r\n//     const extracted = match?.[1] || match?.[2];\r\n//     if (extracted) {\r\n//       try {\r\n//         filename = decodeURIComponent(extracted);\r\n//       } catch {\r\n//         filename = extracted;\r\n//       }\r\n//     }\r\n//     const url = window.URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = filename;\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//     document.body.removeChild(link);\r\n//     window.URL.revokeObjectURL(url);\r\n//   },\r\n//   approveAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/approve`, {}),\r\n//   rejectAffiliate: (userId: number) =>\r\n//     postAuthJSON(`/admin/affiliates/${userId}/reject`, {}),\r\n//   listAffiliatePayouts: (status?: string) =>\r\n//     getAuthJSON(\r\n//       `/admin/affiliate/payouts${\r\n//         status ? `?status=${encodeURIComponent(status)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   markPayoutPaid: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/mark-paid`, {}),\r\n//   approvePayout: (payoutId: number) =>\r\n//     postAuthJSON(`/admin/affiliate/payouts/${payoutId}/approve`, {}),\r\n//   usage: (days = 30) => getAuthJSON(`/admin/usage?days=${days}`),\r\n//   audit: (params?: { tenant_id?: string; action?: string; limit?: number }) =>\r\n//     getAuthJSON(\r\n//       `/admin/audit${(() => {\r\n//         const qs = new URLSearchParams();\r\n//         if (params?.tenant_id) qs.set(\"tenant_id\", params.tenant_id);\r\n//         if (params?.action) qs.set(\"action\", params.action);\r\n//         if (params?.limit) qs.set(\"limit\", String(params.limit));\r\n//         const s = qs.toString();\r\n//         return s ? `?${s}` : \"\";\r\n//       })()}`\r\n//     ),\r\n// };\r\n\r\n// export const StaffAPI = {\r\n//   createCashier: (tenantId: string, body: any) =>\r\n//     postAuthJSON(\"/staff\", body, tenantId),\r\n//   list: (tenantId: string) => getAuthJSON(\"/staff\", tenantId),\r\n//   update: (tenantId: string, userId: number, body: { is_active?: boolean }) =>\r\n//     authFetch(\r\n//       `/staff/${userId}`,\r\n//       {\r\n//         method: \"PATCH\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(body),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     ).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n//   remove: (tenantId: string, userId: number) =>\r\n//     authFetch(`/staff/${userId}`, { method: \"DELETE\" }, true, tenantId).then(\r\n//       async (res) => {\r\n//         if (!res.ok) {\r\n//           const t = await res.text();\r\n//           throw new Error(t || `HTTP ${res.status}`);\r\n//         }\r\n//         return res.json();\r\n//       }\r\n//     ),\r\n// };\r\n\r\n// export const BillingAPI = {\r\n//   submitPaymentCode: (tenantId: string, code: string) =>\r\n//     postAuthJSON(\"/billing/payment-code\", { code }, tenantId),\r\n// };\r\n\r\n// export const UploadAPI = {\r\n//   uploadKyc: async (\r\n//     file: File\r\n//   ): Promise<{ path: string; size: number; filename: string }> => {\r\n//     const fd = new FormData();\r\n//     fd.append(\"file\", file);\r\n//     return await postMultipart(`/uploads/kyc`, fd);\r\n//   },\r\n// };\r\n\r\n// export const KYCAPI = {\r\n//   status: (tenantId: string) => getAuthJSON(`/owner/kyc/status`, tenantId),\r\n//   update: (tenantId: string, body: any) =>\r\n//     putAuthJSON(`/owner/kyc/status`, body, tenantId),\r\n// };\r\n\r\n// export const PharmaciesAPI = {\r\n//   list: (page = 1, pageSize = 20, q?: string) =>\r\n//     getAuthJSON(\r\n//       `/pharmacies?page=${page}&page_size=${pageSize}${\r\n//         q ? `&q=${encodeURIComponent(q)}` : \"\"\r\n//       }`\r\n//     ),\r\n//   get: (id: number) => getAuthJSON(`/pharmacies/${id}`),\r\n//   update: (id: number, body: { name?: string; address?: string }) =>\r\n//     authFetch(`/pharmacies/${id}`, {\r\n//       method: \"PATCH\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(body),\r\n//     }).then(async (res) => {\r\n//       if (!res.ok) {\r\n//         const t = await res.text();\r\n//         throw new Error(t || `HTTP ${res.status}`);\r\n//       }\r\n//       return res.json();\r\n//     }),\r\n// };\r\n\r\n// export const ChatAPI = {\r\n//   listThreads: (tenantId: string) => getAuthJSON(`/chat/threads`, tenantId),\r\n//   createThread: (tenantId: string, title: string) =>\r\n//     postAuthJSON(`/chat/threads`, { title }, tenantId),\r\n//   listMessages: (tenantId: string, threadId: number) =>\r\n//     getAuthJSON(`/chat/threads/${threadId}/messages`, tenantId),\r\n//   sendMessage: (tenantId: string, threadId: number, prompt: string) =>\r\n//     postAuthJSON(`/chat/threads/${threadId}/messages`, { prompt }, tenantId),\r\n//   usage: (tenantId: string, days = 30) =>\r\n//     getAuthJSON(`/chat/usage?days=${days}`, tenantId),\r\n//   sendStream: async (\r\n//     tenantId: string,\r\n//     threadId: number,\r\n//     prompt: string,\r\n//     onEvent: (evt: { event: string; data?: any }) => void\r\n//   ): Promise<void> => {\r\n//     const res = await authFetch(\r\n//       `/chat/threads/${threadId}/messages/stream`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ prompt }),\r\n//       },\r\n//       true,\r\n//       tenantId\r\n//     );\r\n//     if (!res.ok || !res.body) {\r\n//       const t = await res.text().catch(() => \"\");\r\n//       throw new Error(t || `HTTP ${res.status}`);\r\n//     }\r\n//     const reader = res.body.getReader();\r\n//     const decoder = new TextDecoder();\r\n//     let buf = \"\";\r\n//     while (true) {\r\n//       const { done, value } = await reader.read();\r\n//       if (done) break;\r\n//       buf += decoder.decode(value, { stream: true });\r\n//       let idx;\r\n//       while ((idx = buf.indexOf(\"\\n\\n\")) !== -1) {\r\n//         const chunk = buf.slice(0, idx).trim();\r\n//         buf = buf.slice(idx + 2);\r\n//         if (chunk.startsWith(\"data:\")) {\r\n//           try {\r\n//             const jsonStr = chunk.slice(5).trim();\r\n//             const obj = JSON.parse(jsonStr);\r\n//             onEvent(obj);\r\n//           } catch {}\r\n//         }\r\n//       }\r\n//     }\r\n//   },\r\n// };\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/neww/gugu-gaga-/front_end/app/%28auth%29/register/pharmacy/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useToast } from \"@/components/ui/toast\";\r\nimport { AuthAPI, UploadAPI } from \"@/utils/api\";\r\n\r\ntype FieldKey =\r\n  | \"pharmacyName\"\r\n  | \"ownerEmail\"\r\n  | \"ownerPassword\"\r\n  | \"idNumber\"\r\n  | \"licenseNumber\"\r\n  | \"kycFile\"\r\n  | \"ownerPhone\";\r\n\r\nconst createEmptyFieldErrors = (): Record<FieldKey, string | null> => ({\r\n  pharmacyName: null,\r\n  ownerEmail: null,\r\n  ownerPassword: null,\r\n  idNumber: null,\r\n  licenseNumber: null,\r\n  kycFile: null,\r\n  ownerPhone: null,\r\n});\r\n\r\nexport default function PharmacyRegisterPage() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const affiliateToken = searchParams.get(\"token\") || searchParams.get(\"ref\") || undefined;\r\n  const { show } = useToast();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [fieldErrors, setFieldErrors] = useState<Record<FieldKey, string | null>>(() => createEmptyFieldErrors());\r\n\r\n  const [pharmacyName, setPharmacyName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [ownerEmail, setOwnerEmail] = useState(\"\");\r\n  const [ownerPhone, setOwnerPhone] = useState(\"\");\r\n  const [ownerPassword, setOwnerPassword] = useState(\"\");\r\n  const [idNumber, setIdNumber] = useState(\"\");\r\n  const [licenseNumber, setLicenseNumber] = useState(\"\");\r\n  const [kycNotes, setKycNotes] = useState(\"\");\r\n  const [kycFile, setKycFile] = useState<File | null>(null);\r\n  const [kycUploadPath, setKycUploadPath] = useState<string | null>(null);\r\n\r\n  const clearFieldError = (key: FieldKey) =>\r\n    setFieldErrors((prev) => ({\r\n      ...prev,\r\n      [key]: null,\r\n    }));\r\n\r\n  async function submitPharmacy(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(null);\r\n    setFieldErrors(createEmptyFieldErrors());\r\n\r\n    const trimmedPharmacyName = pharmacyName.trim();\r\n    const trimmedOwnerEmail = ownerEmail.trim();\r\n    const trimmedOwnerPhone = ownerPhone.trim();\r\n    const trimmedId = idNumber.trim();\r\n    const trimmedLicense = licenseNumber.trim();\r\n\r\n    const validationErrors: Partial<Record<FieldKey, string>> = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const phoneRegex = /^\\+?[0-9]{7,15}$/;\r\n\r\n    if (!trimmedPharmacyName) {\r\n      validationErrors.pharmacyName = \"Enter the registered pharmacy name.\";\r\n    }\r\n    if (!trimmedOwnerEmail || !emailRegex.test(trimmedOwnerEmail)) {\r\n      validationErrors.ownerEmail = \"Enter a valid email like owner@pharmacy.com.\";\r\n    }\r\n    if (!ownerPassword || ownerPassword.length < 6) {\r\n      validationErrors.ownerPassword = \"Password must be at least 6 characters.\";\r\n    }\r\n    if (!trimmedId) {\r\n      validationErrors.idNumber = \"Provide a government or company ID number.\";\r\n    }\r\n    if (!trimmedLicense) {\r\n      validationErrors.licenseNumber = \"Include the official pharmacy license number.\";\r\n    }\r\n    if (!kycFile) {\r\n      validationErrors.kycFile = \"Attach a JPG or PNG scan of the license.\";\r\n    } else if (!/(image\\/jpeg|image\\/png)/.test(kycFile.type)) {\r\n      validationErrors.kycFile = \"Accepted formats: JPG or PNG.\";\r\n    }\r\n    if (trimmedOwnerPhone && !phoneRegex.test(trimmedOwnerPhone)) {\r\n      validationErrors.ownerPhone = \"Use international format e.g. +2519XXXXXXX.\";\r\n    }\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setFieldErrors(() => {\r\n        const next = createEmptyFieldErrors();\r\n        (Object.keys(validationErrors) as FieldKey[]).forEach((key) => {\r\n          next[key] = validationErrors[key] ?? null;\r\n        });\r\n        return next;\r\n      });\r\n      setError(\"Please correct the highlighted fields.\");\r\n      show({ variant: \"destructive\", title: \"Missing information\", description: \"Fix the highlighted inputs and try again.\" });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      let docPath: string | undefined = undefined;\r\n      if (kycFile) {\r\n        const upload = await UploadAPI.uploadKyc(kycFile);\r\n        docPath = upload.path;\r\n        setKycUploadPath(upload.path);\r\n      }\r\n\r\n      const registerRes = await AuthAPI.registerPharmacy({\r\n        pharmacy_name: trimmedPharmacyName,\r\n        address: address.trim() || undefined,\r\n        owner_email: trimmedOwnerEmail,\r\n        owner_phone: trimmedOwnerPhone || undefined,\r\n        owner_password: ownerPassword,\r\n        id_number: trimmedId,\r\n        pharmacy_license_number: trimmedLicense,\r\n        kyc_notes: kycNotes.trim() || undefined,\r\n        pharmacy_license_document_path: docPath,\r\n        affiliate_token: affiliateToken,\r\n      });\r\n\r\n      const auth = await AuthAPI.login(trimmedOwnerEmail, ownerPassword, registerRes?.tenant_id);\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"access_token\", auth.access_token);\r\n        if (auth.refresh_token) localStorage.setItem(\"refresh_token\", auth.refresh_token);\r\n        if (registerRes?.tenant_id) localStorage.setItem(\"tenant_id\", registerRes.tenant_id);\r\n      }\r\n      const me = await AuthAPI.me();\r\n      if (typeof window !== \"undefined\" && me?.tenant_id) {\r\n        localStorage.setItem(\"tenant_id\", me.tenant_id);\r\n      }\r\n\r\n      setSuccess(\"Application received. Redirecting to your dashboard...\");\r\n      show({\r\n        variant: \"success\",\r\n        title: \"Submitted\",\r\n        description: \"Your dashboard will update once KYC is approved.\",\r\n      });\r\n      setTimeout(() => router.replace(\"/dashboard/owner\"), 600);\r\n    } catch (err: any) {\r\n      const message = err?.message || \"Failed to submit\";\r\n      setError(message);\r\n      show({ variant: \"destructive\", title: \"Failed\", description: message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const featureBullets = [\r\n    \"Multi-branch performance tracking\",\r\n    \"Real-time inventory insights\",\r\n    \"AI-powered demand forecasting\",\r\n    \"Seamless POS integration\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"relative flex min-h-screen bg-gradient-to-br from-gray-950 via-black to-slate-900 text-white\">\r\n      <div className=\"absolute inset-0 -z-10\">\r\n        <div className=\"absolute top-10 left-10 h-80 w-80 rounded-full bg-emerald-500/15 blur-3xl\" />\r\n        <div className=\"absolute bottom-10 right-10 h-96 w-96 rounded-full bg-blue-600/20 blur-3xl\" />\r\n      </div>\r\n\r\n      <div className=\"relative hidden w-0 flex-1 flex-col justify-between overflow-hidden bg-gradient-to-br from-emerald-600/60 via-blue-700/70 to-purple-700/60 p-12 lg:flex\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.8 }}\r\n          className=\"max-w-lg\"\r\n        >\r\n          <div className=\"flex items-center gap-3 text-left\">\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-0 rounded-xl bg-gradient-to-br from-emerald-400 to-blue-500 blur opacity-70\" />\r\n              <div className=\"relative rounded-xl bg-gradient-to-br from-emerald-400 to-blue-500 p-3\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"1.5\"\r\n                  className=\"h-6 w-6 text-white\"\r\n                >\r\n                  <path d=\"M12 3c2.755 0 5 2.175 5 4.857 0 2.143-1.444 3.824-3.556 5.467-1.11.884-.799 2.676-.799 4.43h-1.29c0-1.754.311-3.546-.8-4.43C8.444 11.68 7 9.999 7 7.857 7 5.175 9.245 3 12 3z\" />\r\n                  <path d=\"M6.343 17.657a8 8 0 0 1 11.314 0L12 23l-5.657-5.343z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <span className=\"text-2xl font-semibold tracking-wide text-white/90\">\r\n              Zemen Pharma\r\n            </span>\r\n          </div>\r\n\r\n          <h1 className=\"mt-10 text-4xl font-bold leading-tight text-white\">\r\n            Build a future-ready pharmacy\r\n          </h1>\r\n          <p className=\"mt-4 text-lg text-emerald-100/90\">\r\n            Join a network of modern pharmacies using AI-driven workflows to automate operations and deliver\r\n            world-class patient experiences.\r\n          </p>\r\n\r\n          <ul className=\"mt-10 space-y-4 text-emerald-50/80\">\r\n            {featureBullets.map((item) => (\r\n              <li key={item} className=\"flex items-start gap-3\">\r\n                <span className=\"mt-1 inline-flex h-2.5 w-2.5 rounded-full bg-white\" />\r\n                <span>{item}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 1, delay: 0.2 }}\r\n          className=\"space-y-4 text-sm text-emerald-50/70\"\r\n        >\r\n          <p>\r\n            “The onboarding experience with Zemen Pharma is seamless. Their KYC process and centralized dashboards\r\n            transformed how we run our branches.”\r\n          </p>\r\n          <div className=\"h-px w-24 bg-white/20\" />\r\n          <p>\r\n            Need help? <Link href=\"/contact\" className=\"text-white hover:underline\">Contact our onboarding team</Link>\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n\r\n      <div className=\"relative flex w-full flex-col justify-center px-4 py-16 sm:px-10 lg:w-[560px] lg:px-12\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6 }}\r\n          className=\"mx-auto w-full max-w-md rounded-3xl border border-white/10 bg-black/60 p-8 shadow-[0_25px_80px_-40px_rgba(16,185,129,0.65)] backdrop-blur\"\r\n        >\r\n          <div className=\"mb-8 text-center\">\r\n            <h2 className=\"text-3xl font-bold text-white\">Register your pharmacy</h2>\r\n            <p className=\"mt-2 text-sm text-emerald-100/80\">\r\n              Start with a full-featured trial. No credit card required.\r\n            </p>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 rounded-xl border border-red-400/30 bg-red-500/10 p-3 text-sm text-red-100\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {success && (\r\n            <div className=\"mb-4 rounded-xl border border-emerald-400/30 bg-emerald-500/10 p-3 text-sm text-emerald-100\">\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={submitPharmacy} className=\"space-y-5\">\r\n            <div className=\"grid grid-cols-1 gap-4\">\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Pharmacy name*\r\n                </label>\r\n                <Input\r\n                  value={pharmacyName}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"pharmacyName\");\r\n                    setPharmacyName(e.target.value);\r\n                  }}\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.pharmacyName\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Use the exact legal name that appears on your pharmacy license.</p>\r\n                {fieldErrors.pharmacyName ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.pharmacyName}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Address\r\n                </label>\r\n                <Input\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  className=\"mt-2 border border-white/10 bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:border-emerald-400 focus-visible:ring-emerald-400/40\"\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Optional — headquarters or primary operating address.</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Owner email*\r\n                </label>\r\n                <Input\r\n                  type=\"email\"\r\n                  value={ownerEmail}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"ownerEmail\");\r\n                    setOwnerEmail(e.target.value);\r\n                  }}\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.ownerEmail\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">We’ll send onboarding updates here (example: owner@pharmacy.com).</p>\r\n                {fieldErrors.ownerEmail ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.ownerEmail}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Owner phone\r\n                </label>\r\n                <Input\r\n                  value={ownerPhone}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"ownerPhone\");\r\n                    setOwnerPhone(e.target.value);\r\n                  }}\r\n                  placeholder=\"+2519...\"\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.ownerPhone\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Optional — include an international format number so we can reach you quickly.</p>\r\n                {fieldErrors.ownerPhone ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.ownerPhone}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Password*\r\n                </label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={ownerPassword}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"ownerPassword\");\r\n                    setOwnerPassword(e.target.value);\r\n                  }}\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.ownerPassword\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Minimum 6 characters. Use a mix of letters and numbers for security.</p>\r\n                {fieldErrors.ownerPassword ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.ownerPassword}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  National / company ID*\r\n                </label>\r\n                <Input\r\n                  value={idNumber}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"idNumber\");\r\n                    setIdNumber(e.target.value);\r\n                  }}\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.idNumber\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Provide the government-issued or commercial registration ID.</p>\r\n                {fieldErrors.idNumber ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.idNumber}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Pharmacy license number*\r\n                </label>\r\n                <Input\r\n                  value={licenseNumber}\r\n                  onChange={(e) => {\r\n                    clearFieldError(\"licenseNumber\");\r\n                    setLicenseNumber(e.target.value);\r\n                  }}\r\n                  className={`mt-2 border bg-white/5 text-white placeholder:text-emerald-100/40 transition focus-visible:ring-2 ${\r\n                    fieldErrors.licenseNumber\r\n                      ? \"border-red-400/60 focus-visible:border-red-300 focus-visible:ring-red-300/60\"\r\n                      : \"border-white/10 focus-visible:border-emerald-400 focus-visible:ring-emerald-400/50\"\r\n                  }`}\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Enter the regulator-issued permit number exactly as shown.</p>\r\n                {fieldErrors.licenseNumber ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.licenseNumber}</p>\r\n                ) : null}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  License document (jpg/png)*\r\n                </label>\r\n                <label\r\n                  className={`mt-2 flex cursor-pointer items-center justify-between rounded-2xl border border-dashed px-4 py-3 text-sm transition ${\r\n                    fieldErrors.kycFile\r\n                      ? \"border-red-400/60 bg-red-500/10 text-red-100 hover:border-red-300/70 hover:bg-red-500/15\"\r\n                      : \"border-white/15 bg-white/5 text-emerald-100/70 hover:border-emerald-300/60 hover:bg-white/10\"\r\n                  }`}\r\n                >\r\n                  <span>{kycFile ? kycFile.name : \"Upload document\"}</span>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".jpg,.jpeg,.png\"\r\n                    onChange={(e) => {\r\n                      clearFieldError(\"kycFile\");\r\n                      setKycFile(e.target.files?.[0] || null);\r\n                    }}\r\n                    className=\"hidden\"\r\n                  />\r\n                  <span className=\"text-xs uppercase tracking-wide text-emerald-200/70\">Browse</span>\r\n                </label>\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Upload a clear scan or photo of the valid pharmacy license (JPG or PNG).</p>\r\n                {fieldErrors.kycFile ? (\r\n                  <p className=\"mt-1 text-xs text-red-300\">{fieldErrors.kycFile}</p>\r\n                ) : null}\r\n                {kycUploadPath && (\r\n                  <p className=\"mt-1 text-xs text-emerald-200/60\">Uploaded: {kycUploadPath}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-xs font-semibold uppercase tracking-wide text-emerald-200/80\">\r\n                  Notes to reviewer\r\n                </label>\r\n                <textarea\r\n                  rows={3}\r\n                  value={kycNotes}\r\n                  onChange={(e) => setKycNotes(e.target.value)}\r\n                  className=\"mt-2 w-full rounded-2xl border border-white/10 bg-white/5 px-3 py-2 text-sm text-white placeholder:text-emerald-100/40 transition focus-visible:border-emerald-400 focus-visible:ring-emerald-400/40\"\r\n                />\r\n                <p className=\"mt-1 text-xs text-emerald-100/60\">Optional context for the reviewers (operating hours, special approvals, etc.).</p>\r\n              </div>\r\n            </div>\r\n\r\n            {affiliateToken && (\r\n              <div className=\"rounded-xl border border-emerald-400/20 bg-emerald-500/10 p-3 text-xs text-emerald-100/80\">\r\n                Referral token detected. Affiliate rewards will apply after approval.\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"group relative inline-flex w-full items-center justify-center overflow-hidden rounded-2xl bg-gradient-to-r from-emerald-500 to-blue-600 px-6 py-3 font-semibold text-white shadow-lg shadow-emerald-500/30 transition duration-300 hover:scale-[1.01] hover:shadow-emerald-400/40\"\r\n            >\r\n              {loading ? (\r\n                <svg className=\"mr-2 h-4 w-4 animate-spin\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                  <circle className=\"opacity-20\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n                  <path\r\n                    className=\"opacity-90\"\r\n                    fill=\"currentColor\"\r\n                    d=\"M4 12a8 8 0 018-8v8z\"\r\n                  />\r\n                </svg>\r\n              ) : null}\r\n              {loading ? \"Submitting...\" : \"Submit application\"}\r\n            </Button>\r\n\r\n            <p className=\"text-center text-xs text-emerald-100/70\">\r\n              Already have an owner account?{\" \"}\r\n              <Link href=\"/auth?tab=signin\" className=\"font-medium text-white hover:underline\">\r\n                Sign in\r\n              </Link>\r\n            </p>\r\n          </form>\r\n\r\n          <p className=\"mt-8 text-center text-[11px] text-emerald-100/60\">\r\n            By continuing you agree to our {\" \"}\r\n            <Link href=\"/terms\" className=\"text-white hover:underline\">\r\n              Terms\r\n            </Link>{\" \"}\r\n            and {\" \"}\r\n            <Link href=\"/privacy\" className=\"text-white hover:underline\">\r\n              Privacy Policy\r\n            </Link>\r\n            .\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}