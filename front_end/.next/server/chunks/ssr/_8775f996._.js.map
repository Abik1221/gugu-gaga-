{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/input.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className = \"\", ...props }, ref) => {\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        className={\r\n          \"w-full border rounded px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-emerald-200 focus:border-emerald-400 \" +\r\n          className\r\n        }\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAKO,MAAM,sBAAQ,mNAAgB,CACnC,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,EAAE;IAC7B,qBACE,8OAAC;QACC,KAAK;QACL,WACE,uHACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/components/ui/skeleton.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nexport function Skeleton({ className = \"\" }: { className?: string }) {\r\n  return <div className={`animate-pulse bg-gray-200 rounded ${className}`} />;\r\n}\r\n\r\nexport function TableSkeletonRows({ rows = 6, cols = 6 }: { rows?: number; cols?: number }) {\r\n  return (\r\n    <tbody>\r\n      {Array.from({ length: rows }).map((_, r) => (\r\n        <tr key={r} className=\"border-t\">\r\n          {Array.from({ length: cols }).map((__, c) => (\r\n            <td key={c} className=\"px-3 py-2\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,SAAS,SAAS,EAAE,YAAY,EAAE,EAA0B;IACjE,qBAAO,8OAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,WAAW;;;;;;AACzE;AAEO,SAAS,kBAAkB,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAoC;IACxF,qBACE,8OAAC;kBACE,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,8OAAC;gBAAW,WAAU;0BACnB,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,IAAI,kBACrC,8OAAC;wBAAW,WAAU;kCACpB,cAAA,8OAAC;4BAAS,WAAU;;;;;;uBADb;;;;;eAFJ;;;;;;;;;;AAUjB","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/gugu-gaga-/front_end/app/%28dashboard%29/dashboard/owner/agent/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { AuthAPI, ChatAPI } from \"@/utils/api\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useToast } from \"@/components/ui/toast\";\n\ntype ThreadSummary = {\n  id: number;\n  title?: string | null;\n};\n\ntype ChatMessageRecord = {\n  id: number;\n  role: string;\n  content: string;\n};\n\nconst ROLE_LABELS: Record<string, string> = {\n  user: \"You\",\n  owner: \"You\",\n  assistant: \"Assistant\",\n};\n\nconst ROLE_TONE: Record<string, string> = {\n  user: \"bg-emerald-600 text-white\",\n  owner: \"bg-emerald-600 text-white\",\n  assistant: \"bg-white border border-gray-200 text-gray-900\",\n};\n\nfunction normalizeThreadTitle(thread: ThreadSummary, index: number): string {\n  const raw = (thread.title || \"\").trim();\n  if (raw) return raw;\n  return `Conversation #${index + 1}`;\n}\n\nfunction parseAssistantPayload(content: string): any | null {\n  if (!content) return null;\n  try {\n    return JSON.parse(content);\n  } catch {\n    if (content.startsWith(\"{\") && content.includes(\"'\")) {\n      try {\n        const sanitized = content.replace(/'/g, '\"');\n        return JSON.parse(sanitized);\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  }\n}\n\nfunction AssistantContent({ payload }: { payload: any }) {\n  if (!payload || typeof payload !== \"object\") {\n    return null;\n  }\n\n  const rows = Array.isArray(payload.rows) ? payload.rows : null;\n  const hasRows = rows && rows.length > 0;\n\n  return (\n    <div className=\"space-y-3 text-sm\">\n      {payload.intent && (\n        <div className=\"flex items-center gap-2 rounded border border-emerald-100 bg-emerald-50 px-3 py-2 text-emerald-700\">\n          <span className=\"text-xs font-semibold uppercase tracking-wide\">Intent</span>\n          <span className=\"font-medium\">{String(payload.intent)}</span>\n        </div>\n      )}\n      {payload.error && (\n        <div className=\"rounded border border-red-100 bg-red-50 px-3 py-2 text-sm text-red-700\">\n          Unable to run the analysis at the moment. ({String(payload.error)})\n        </div>\n      )}\n      {payload.answer && typeof payload.answer === \"string\" && (\n        <p className=\"whitespace-pre-wrap leading-relaxed text-gray-800\">{payload.answer}</p>\n      )}\n      {hasRows ? (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 text-xs\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                {Object.keys(rows![0]).map((key) => (\n                  <th\n                    key={key}\n                    className=\"px-3 py-2 text-left font-semibold uppercase tracking-wide text-gray-500\"\n                  >\n                    {key}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-100 bg-white\">\n              {rows!.map((row, idx) => (\n                <tr key={idx}>\n                  {Object.keys(rows![0]).map((key) => (\n                    <td key={key} className=\"px-3 py-2 text-gray-700\">\n                      {row[key] === null || row[key] === undefined\n                        ? \"â€”\"\n                        : typeof row[key] === \"number\"\n                        ? row[key].toLocaleString(\"en-US\")\n                        : String(row[key])}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : null}\n      {!payload.error && rows && rows.length === 0 && (\n        <div className=\"rounded border border-gray-200 bg-gray-50 px-3 py-2 text-xs text-gray-600\">\n          The query completed but returned no rows.\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function OwnerAgentPage() {\n  const { show } = useToast();\n\n  const [tenantId, setTenantId] = useState<string | null>(null);\n  const [threads, setThreads] = useState<ThreadSummary[]>([]);\n  const [threadsLoading, setThreadsLoading] = useState(false);\n  const [selectedThreadId, setSelectedThreadId] = useState<number | null>(null);\n  const [messages, setMessages] = useState<ChatMessageRecord[]>([]);\n  const [messagesLoading, setMessagesLoading] = useState(false);\n  const [messageDraft, setMessageDraft] = useState(\"\");\n  const [creatingThread, setCreatingThread] = useState(false);\n  const [newThreadTitle, setNewThreadTitle] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [assistantThinking, setAssistantThinking] = useState(false);\n  const [bootstrapLoading, setBootstrapLoading] = useState(true);\n  const [globalError, setGlobalError] = useState<string | null>(null);\n\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\n\n  const selectedThread = useMemo(\n    () => threads.find((thread) => thread.id === selectedThreadId) || null,\n    [threads, selectedThreadId],\n  );\n\n  const loadThreads = useCallback(\n    async (tid: string) => {\n      setThreadsLoading(true);\n      try {\n        const data = await ChatAPI.listThreads(tid);\n        const safe = Array.isArray(data) ? (data as ThreadSummary[]) : [];\n        setThreads(safe);\n        if (safe.length === 0) {\n          setSelectedThreadId(null);\n        }\n        setGlobalError(null);\n      } catch (error: any) {\n        setGlobalError(error?.message || \"Unable to load conversations\");\n      } finally {\n        setThreadsLoading(false);\n      }\n    },\n    [],\n  );\n\n  const loadMessages = useCallback(\n    async (tid: string, threadId: number) => {\n      setMessagesLoading(true);\n      try {\n        const data = await ChatAPI.listMessages(tid, threadId);\n        const safe = Array.isArray(data) ? (data as ChatMessageRecord[]) : [];\n        setMessages(safe);\n      } catch (error: any) {\n        show({\n          variant: \"destructive\",\n          title: \"Failed to load thread\",\n          description: error?.message || \"Unable to fetch messages.\",\n        });\n      } finally {\n        setMessagesLoading(false);\n      }\n    },\n    [show],\n  );\n\n  useEffect(() => {\n    let active = true;\n    async function bootstrap() {\n      setBootstrapLoading(true);\n      try {\n        const profile = await AuthAPI.me();\n        if (!active) return;\n        const tid = profile?.tenant_id || null;\n        if (!tid) {\n          setGlobalError(\"You do not have an active tenant to chat against.\");\n          return;\n        }\n        setTenantId(tid);\n        await loadThreads(tid);\n      } catch (error: any) {\n        if (!active) return;\n        setGlobalError(error?.message || \"Unable to load owner profile.\");\n      } finally {\n        if (active) setBootstrapLoading(false);\n      }\n    }\n    bootstrap();\n    return () => {\n      active = false;\n    };\n  }, [loadThreads]);\n\n  useEffect(() => {\n    if (selectedThreadId && !threads.some((thread) => thread.id === selectedThreadId)) {\n      setSelectedThreadId(threads[0]?.id ?? null);\n    } else if (!selectedThreadId && threads.length > 0) {\n      setSelectedThreadId(threads[0].id);\n    }\n  }, [threads, selectedThreadId]);\n\n  useEffect(() => {\n    if (!tenantId || !selectedThreadId) {\n      setMessages([]);\n      return;\n    }\n    loadMessages(tenantId, selectedThreadId);\n  }, [tenantId, selectedThreadId, loadMessages]);\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages, assistantThinking]);\n\n  const handleCreateThread = async () => {\n    if (!tenantId) return;\n    const title = newThreadTitle.trim();\n    setCreatingThread(true);\n    try {\n      const created = await ChatAPI.createThread(tenantId, title || \"Owner conversation\");\n      setNewThreadTitle(\"\");\n      await loadThreads(tenantId);\n      if (created?.id) {\n        setSelectedThreadId(created.id);\n      }\n      setMessages([]);\n    } catch (error: any) {\n      show({\n        variant: \"destructive\",\n        title: \"Could not create thread\",\n        description: error?.message || \"Please try again.\",\n      });\n    } finally {\n      setCreatingThread(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!tenantId || !selectedThreadId) return;\n    const prompt = messageDraft.trim();\n    if (!prompt) return;\n    setMessageDraft(\"\");\n    setSending(true);\n    setAssistantThinking(true);\n    try {\n      await ChatAPI.sendMessage(tenantId, selectedThreadId, prompt);\n      await loadMessages(tenantId, selectedThreadId);\n      await loadThreads(tenantId);\n    } catch (error: any) {\n      show({\n        variant: \"destructive\",\n        title: \"Message failed\",\n        description: error?.message || \"Unable to send message.\",\n      });\n      setMessageDraft(prompt);\n    } finally {\n      setSending(false);\n      setAssistantThinking(false);\n    }\n  };\n\n  const handleComposerKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const isLoadingThreads = threadsLoading || bootstrapLoading;\n  const isLoadingMessages = messagesLoading || bootstrapLoading;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-2\">\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Zemen AI Assistant</h1>\n        <p className=\"max-w-3xl text-sm text-gray-500\">\n          Ask questions about sales, inventory, and staff performance. The assistant runs read-only\n          analytics on your tenant data and summarises the results for quick insight.\n        </p>\n      </div>\n\n      {globalError && (\n        <div className=\"rounded border border-red-200 bg-red-50 p-3 text-sm text-red-700\">\n          {globalError}\n        </div>\n      )}\n\n      <div className=\"grid gap-4 lg:grid-cols-[320px,1fr]\">\n        <div className=\"flex flex-col gap-4 rounded border border-gray-200 bg-white p-4 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-sm font-semibold text-gray-700\">Conversations</h2>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => tenantId && loadThreads(tenantId)}\n              disabled={!tenantId || isLoadingThreads}\n            >\n              Refresh\n            </Button>\n          </div>\n          <div className=\"space-y-3\">\n            <Input\n              placeholder=\"Conversation title\"\n              value={newThreadTitle}\n              onChange={(event) => setNewThreadTitle(event.target.value)}\n            />\n            <Button onClick={handleCreateThread} disabled={!tenantId || creatingThread}>\n              {creatingThread ? \"Creatingâ€¦\" : \"Start new conversation\"}\n            </Button>\n          </div>\n          <div className=\"h-px w-full bg-gray-100\" />\n          {isLoadingThreads ? (\n            <div className=\"space-y-2\">\n              {Array.from({ length: 5 }).map((_, index) => (\n                <Skeleton key={index} className=\"h-12 w-full\" />\n              ))}\n            </div>\n          ) : threads.length === 0 ? (\n            <div className=\"rounded border border-dashed border-gray-200 bg-gray-50 p-4 text-center text-sm text-gray-500\">\n              No conversations yet. Start a new one to ask the assistant anything about your pharmacy.\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              {threads.map((thread, index) => {\n                const title = normalizeThreadTitle(thread, index);\n                const isActive = thread.id === selectedThreadId;\n                return (\n                  <button\n                    key={thread.id}\n                    type=\"button\"\n                    onClick={() => setSelectedThreadId(thread.id)}\n                    className={`w-full rounded border px-3 py-2 text-left text-sm transition ${\n                      isActive\n                        ? \"border-emerald-400 bg-emerald-50 text-emerald-700\"\n                        : \"border-gray-200 hover:border-emerald-200 hover:bg-emerald-50/50\"\n                    }`}\n                  >\n                    <div className=\"font-medium\">{title}</div>\n                    <div className=\"text-xs text-gray-500\">Thread #{thread.id}</div>\n                  </button>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex flex-col gap-4 rounded border border-gray-200 bg-white p-4 shadow-sm\">\n          <div className=\"flex flex-col gap-1\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-sm font-semibold text-gray-700\">\n                {selectedThread ? normalizeThreadTitle(selectedThread, 0) : \"Conversation\"}\n              </h2>\n              <div className=\"flex items-center gap-2\">\n                <Button\n                  size=\"sm\"\n                  variant=\"outline\"\n                  onClick={() => tenantId && selectedThreadId && loadMessages(tenantId, selectedThreadId)}\n                  disabled={!tenantId || !selectedThreadId || isLoadingMessages}\n                >\n                  Refresh\n                </Button>\n              </div>\n            </div>\n            <p className=\"text-xs text-gray-500\">\n              The assistant uses safe, read-only queries. Ask for sales summaries, inventory gaps, or staff\n              performance insights.\n            </p>\n          </div>\n\n          <div className=\"flex-1 overflow-hidden rounded border border-gray-100 bg-gray-50\">\n            {isLoadingMessages ? (\n              <div className=\"p-4 space-y-3\">\n                {Array.from({ length: 5 }).map((_, index) => (\n                  <Skeleton key={index} className=\"h-16 w-full\" />\n                ))}\n              </div>\n            ) : !selectedThreadId ? (\n              <div className=\"flex h-full items-center justify-center p-6 text-sm text-gray-500\">\n                Select a conversation to view messages.\n              </div>\n            ) : messages.length === 0 ? (\n              <div className=\"flex h-full items-center justify-center p-6 text-sm text-gray-500\">\n                Ask your first question to begin.\n              </div>\n            ) : (\n              <div className=\"flex h-[55vh] flex-col gap-3 overflow-y-auto p-4 pr-6\">\n                {messages.map((message) => {\n                  const roleClass = ROLE_TONE[message.role] || ROLE_TONE.assistant;\n                  const label = ROLE_LABELS[message.role] || message.role;\n                  const assistantPayload =\n                    message.role === \"assistant\" ? parseAssistantPayload(message.content) : null;\n                  return (\n                    <div\n                      key={message.id}\n                      className={`flex ${\n                        message.role === \"assistant\" ? \"justify-start\" : \"justify-end\"\n                      }`}\n                    >\n                      <div\n                        className={`max-w-xl rounded-lg px-3 py-2 text-sm shadow-sm ${roleClass}`}\n                      >\n                        <div className=\"mb-1 text-xs font-semibold uppercase tracking-wide opacity-70\">\n                          {label}\n                        </div>\n                        {assistantPayload ? (\n                          <AssistantContent payload={assistantPayload} />\n                        ) : (\n                          <p className=\"whitespace-pre-wrap leading-relaxed\">\n                            {message.content}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n                {assistantThinking && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"max-w-xs rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-500 shadow-sm\">\n                      Assistant is analysing your dataâ€¦\n                    </div>\n                  </div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            )}\n          </div>\n\n          <form\n            className=\"flex flex-col gap-3 rounded border border-gray-100 bg-white p-3\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              handleSendMessage();\n            }}\n          >\n            <label className=\"text-xs font-semibold uppercase tracking-wide text-gray-500\">\n              Ask a question\n            </label>\n            <textarea\n              className=\"min-h-[120px] w-full resize-y rounded border border-gray-200 p-3 text-sm shadow-sm focus:border-emerald-400 focus:outline-none focus:ring-2 focus:ring-emerald-100\"\n              placeholder=\"e.g. Show me the top selling medicines this week\"\n              value={messageDraft}\n              onChange={(event) => setMessageDraft(event.target.value)}\n              onKeyDown={handleComposerKeyDown}\n              disabled={!tenantId || !selectedThreadId || sending}\n            />\n            <div className=\"flex items-center justify-between text-xs text-gray-500\">\n              <span>Press Enter to send, Shift + Enter for a new line.</span>\n              <Button type=\"submit\" disabled={!tenantId || !selectedThreadId || sending}>\n                {sending ? \"Sendingâ€¦\" : \"Send\"}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}